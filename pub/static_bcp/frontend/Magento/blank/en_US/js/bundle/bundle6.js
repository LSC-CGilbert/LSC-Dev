require.config({"config": {
        "jsbuild":{"Amasty_Customform/js/form-builder-helper.js":"/* eslint-disable one-var, vars-on-top, max-depth, no-shadow */\n\ndefine([\n    'jquery',\n    'underscore',\n    'mage/adminhtml/events',\n    'mage/adminhtml/wysiwyg/tiny_mce/setup',\n    'Magento_Ui/js/modal/modal'\n], function ($, _) {\n    'use strict';\n\n    // compatibility for M244\n    var tinymce = window.tinymce;\n\n    if (_.isUndefined(tinymce)) {\n        return;\n    }\n\n    if (!('remove' in Element.prototype)) {\n        Element.prototype.remove = function () {\n            if (this.parentNode) {\n                this.parentNode.removeChild(this);\n            }\n        };\n    }\n\n    // Event polyfill\n    if (typeof Event !== 'function') {\n        (function () {\n            window.Event = function (evt) {\n                var event = document.createEvent('Event');\n\n                event.initEvent(evt, true, true);\n                return event;\n            };\n        })();\n    }\n\n    // Object.assign polyfill\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target) {\n            'use strict';\n\n            if (target === null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            target = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var source = arguments[index];\n\n                if (source !== null) {\n                    for (var key in source) {\n                        if (Object.prototype.hasOwnProperty.call(source, key)) {\n                            target[key] = source[key];\n                        }\n                    }\n                }\n            }\n            return target;\n        };\n    }\n\n    var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === 'function' && obj.constructor === Symbol\n            && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n    },\n\n     fbUtils = {};\n\n    // cleaner syntax for testing indexOf element\n    fbUtils.inArray = function (needle, haystack) {\n        return haystack.indexOf(needle) !== -1;\n    };\n\n    /**\n     * Remove null or undefined values\n     * @param  {Object} attrs {attrName: attrValue}\n     * @return {Object} Object trimmed of null or undefined values\n     */\n    fbUtils.trimObj = function (attrs) {\n        var xmlRemove = [null, undefined, false, 'false'];\n\n        for (var attr in attrs) {\n            if (fbUtils.inArray(attrs[attr], xmlRemove)) {\n                delete attrs[attr];\n            } else if (Array.isArray(attrs[attr])) {\n                if (!attrs[attr].length) {\n                    delete attrs[attr];\n                }\n            }\n        }\n\n        return attrs;\n    };\n\n    /**\n     * Test if attribute is a valid HTML attribute\n     * @param  {String} attr\n     * @return {Boolean}\n     */\n    fbUtils.validAttr = function (attr) {\n        var invalid = [\n            'values',\n            'enableOther',\n            'other',\n            'label',\n            // 'style',\n            'subtype'\n        ];\n\n        return !fbUtils.inArray(attr, invalid);\n    };\n\n    /**\n     * Convert an attrs object into a string\n     *\n     * @param  {Object} attrs object of attributes for markup\n     * @return {string}\n     */\n    fbUtils.attrString = function (attrs) {\n        var attributes = [];\n\n        for (var attr in attrs) {\n            if (attr === 'map_position' || attr === 'zoom') {\n                continue;\n            }\n\n            if (attrs.hasOwnProperty(attr) && fbUtils.validAttr(attr)) {\n                attr = fbUtils.safeAttr(attr, attrs[attr]);\n                attributes.push(attr.name + attr.value);\n            }\n        }\n        return attributes.join(' ');\n    };\n\n    /**\n     * Convert attributes to markup safe strings\n     * @param  {String} name  attribute name\n     * @param  {String} value attribute value\n     * @return {Object} {attrName: attrValue}\n     */\n    fbUtils.safeAttr = function (name, value) {\n        name = fbUtils.safeAttrName(name);\n\n        if (value) {\n            if (Array.isArray(value)) {\n                value = value.join(' ');\n            } else if (typeof value === 'boolean') {\n                value = value.toString();\n            }\n        }\n\n        value = value ? '=\"' + value + '\"' : '';\n\n        return {\n            name: name,\n            value: value\n        };\n    };\n\n    fbUtils.safeAttrName = function (name) {\n        var safeAttr = {\n            className: 'class'\n        };\n\n        return safeAttr[name] || fbUtils.hyphenCase(name);\n    };\n\n    /**\n     * Convert strings into lowercase-hyphen\n     *\n     * @param  {String} str\n     * @return {String}\n     */\n    fbUtils.hyphenCase = function (str) {\n        str = str.replace(/[^\\w\\s\\-]/gi, '');\n        str = str.replace(/([A-Z])/g, function ($1) {\n            return '-' + $1.toLowerCase();\n        });\n\n        return str.replace(/\\s/g, '-').replace(/^-+/g, '');\n    };\n\n    /**\n     * convert a hyphenated string to camelCase\n     * @param  {String} str\n     * @return {String}\n     */\n    fbUtils.camelCase = function (str) {\n        return str.replace(/-([a-z])/g, function (m, w) {\n            return w.toUpperCase();\n        });\n    };\n\n    /**\n     * Generate markup wrapper where needed\n     *\n     * @param  {string} tag\n     * @return {String}\n     */\n    fbUtils.markup = function (tag) {\n        var content = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '',\n         attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n\n         contentType = void 0,\n            field = document.createElement(tag),\n\n            getContentType = function getContentType(content) {\n                return Array.isArray(content)\n                    ? 'array' : typeof content === 'undefined' ? 'undefined' : _typeof(content);\n            },\n\n            appendContent = {\n                string: function string(content) {\n                    field.innerHTML = content;\n                },\n                object: function object(content) {\n                    return field.appendChild(content);\n                },\n                array: function array(content) {\n                    for (var i = 0; i < content.length; i++) {\n                        contentType = getContentType(content[i]);\n                        appendContent[contentType](content[i]);\n                    }\n                }\n            };\n\n        for (var attr in attrs) {\n            if (attrs.hasOwnProperty(attr)) {\n                var name = fbUtils.safeAttrName(attr);\n\n                field.setAttribute(name, attrs[attr]);\n            }\n        }\n\n        contentType = getContentType(content);\n\n        if (content) {\n            appendContent[contentType].call(this, content);\n        }\n\n        return field;\n    };\n\n    /**\n     * Convert html element attributes to key/value object\n     * @return {Object} ex: {attrName: attrValue}\n     * @param {Object} elem\n     */\n    fbUtils.parseAttrs = function (elem) {\n        var attrs = elem.attributes,\n         data = {};\n\n        fbUtils.forEach(attrs, function (attr) {\n            var attrVal = attrs[attr].value;\n\n            if (attrVal.match(/false|true/g)) {\n                attrVal = attrVal === 'true';\n            } else if (attrVal.match(/undefined/g)) {\n                attrVal = undefined;\n            }\n\n            if (attrVal) {\n                data[attrs[attr].name] = attrVal;\n            }\n        });\n\n        return data;\n    };\n\n    /**\n     * Convert field options to optionData\n     * @return {Array} optionData array\n     * @param {Object} field\n     */\n    fbUtils.parseOptions = function (field) {\n        var options = field.getElementsByTagName('option'),\n            optionData = {},\n            data = [];\n\n        if (options.length) {\n            for (var i = 0; i < options.length; i++) {\n                optionData = fbUtils.parseAttrs(options[i]);\n                optionData.label = options[i].textContent;\n                data.push(optionData);\n            }\n        }\n\n        return data;\n    };\n\n    /**\n     * Parse XML formData\n     * @param  {String} xmlString\n     * @return {Array} formData array\n     */\n    fbUtils.parseXML = function (xmlString) {\n        var parser = new window.DOMParser(),\n            xml = parser.parseFromString(xmlString, 'text/xml'),\n            formData = [];\n\n        if (xml) {\n            var fields = xml.getElementsByTagName('field');\n\n            for (var i = 0; i < fields.length; i++) {\n                var fieldData = fbUtils.parseAttrs(fields[i]);\n\n                if (fields[i].children.length) {\n                    fieldData.values = fbUtils.parseOptions(fields[i]);\n                }\n\n                formData.push(fieldData);\n            }\n        }\n\n        return formData;\n    };\n\n    /**\n     * Escape markup, so it can be displayed rather than rendered\n     * @param  {String} html markup\n     * @return {String} escaped html\n     */\n    fbUtils.escapeHtml = function (html) {\n        var escapeElement = document.createElement('textarea');\n\n        escapeElement.textContent = html;\n\n        return escapeElement.innerHTML;\n    };\n\n    // Escape an attribute\n    fbUtils.escapeAttr = function (str) {\n        var match = {\n            '\"': '&quot;',\n          //  '&': '&amp;',\n            '<': '&lt;',\n            '>': '&gt;'\n        };\n\n        function replaceTag(tag) {\n            return match[tag] || tag;\n        }\n\n        return typeof str === 'string' ? str.replace(/[\"&<>]/g, replaceTag) : str;\n    };\n\n    // Escape attributes\n    fbUtils.escapeAttrs = function (attrs) {\n        for (var attr in attrs) {\n            if (attrs.hasOwnProperty(attr)) {\n                attrs[attr] = fbUtils.escapeAttr(attrs[attr]);\n            }\n        }\n\n        return attrs;\n    };\n\n    // forEach that can be used on nodeList\n    fbUtils.forEach = function (array, callback, scope) {\n        for (var i = 0; i < array.length; i++) {\n            callback.call(scope, i, array[i]); // passes back stuff we need\n        }\n    };\n\n    /**\n     * Remove duplicates from an array of elements\n     * @return {Array} array with only unique values\n     * @param {Array} array\n     */\n    fbUtils.unique = function (array) {\n        return array.filter(function (elem, pos, arr) {\n            return arr.indexOf(elem) === pos;\n        });\n    };\n\n    /**\n     * Generate preview markup\n     * @param {object} fieldData\n     * @param {object} opts\n     * @return {string} preview markup for field\n     */\n    fbUtils.fieldRender = function (fieldData, opts) {\n        var preview = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false,\n            utils = fbUtils;\n\n        fieldData.placeholder = fieldData.placeholder\n            ? fbUtils.cutJs(utils.escapeAttr(fieldData.placeholder))\n            : '';\n        fieldData.label = fieldData.label\n            ? fbUtils.cutJs(utils.escapeAttr(fieldData.label))\n            : '';\n\n        var fieldMarkup = '',\n            fieldLabel = '',\n            optionsMarkup = '',\n            fieldLabelText = fieldData.label || '',\n            fieldDesc = fieldData.description || '',\n            fieldRequired = '',\n            fieldValue = fieldData.value,\n            fieldOptions = fieldData.values;\n\n        fieldData.name = preview ? fieldData.name + '-preview' : fieldData.name;\n        fieldData.id = fieldData.name;\n        fieldData.name = fieldData.multiple ? fieldData.name + '[]' : fieldData.name;\n        if (utils.inArray(\n            fieldData.type,\n            ['textinput', 'number', 'file', 'dropdown', 'listbox', 'textarea']\n        ) && fieldData.className !== 'form-control'\n        ) {\n            fieldData.className += ' form-control';\n        }\n\n        fieldData.type = fieldData.subtype || fieldData.type;\n        if (fieldData.type === 'datetime') {\n            fieldData.type = 'datetime-local';\n        }\n\n        if (fieldData.required) {\n            fieldData.required = null;\n            fieldData['aria-required'] = 'true';\n            fieldRequired = '<span class=\"required\">*</span>';\n        }\n\n        if (fieldData.type !== 'hidden') {\n            if (fieldDesc) {\n                fieldDesc = '<span class=\"tooltip-element\" tooltip=\"' + fieldDesc + '\">?</span>';\n            }\n\n            fieldLabel = '<label for=\"' + fieldData.id + '\" class=\"fb-' + fieldData.type + '-label\">'\n                + fieldLabelText + ' ' + fieldRequired + ' ' + fieldDesc + '</label>';\n        }\n\n        var fieldLabelVal = fieldData.label;\n\n        delete fieldData.label;\n        delete fieldData.description;\n\n        if (fieldData.type === 'wysiwyg'\n            || fieldData.type === 'textarea'\n            || fieldData.type === 'rich-text'\n        ) {\n            delete fieldData.value;\n        }\n\n        var fieldDataString = fbUtils.attrString(fieldData),\n\n        /* rendering text fields*/\n         withBr = true;\n\n        switch (fieldData.type) {\n            case 'text':\n                fieldData.type = 'div';\n                break;\n            case 'hone':\n                fieldData.type = 'h1';\n                break;\n            case 'htwo':\n                fieldData.type = 'h2';\n                break;\n            case 'hthree':\n                fieldData.type = 'h3';\n                break;\n            case 'checkboxtwo':\n                fieldData.type = 'checkbox';\n                withBr = false;\n                break;\n            case 'radiotwo':\n                fieldData.type = 'radio';\n            // eslint-disable-next-line no-fallthrough\n            case 'rating':\n                withBr = false;\n                break;\n            case 'listbox':\n                fieldData.type = 'dropdown';\n                fieldData.multiple = true;\n                break;\n            case 'wysiwyg':\n                fieldData.type = 'wysiwyg';\n                break;\n        }\n\n        switch (fieldData.type) {\n            case 'wysiwyg':\n                fieldMarkup = '<textarea ' + fieldDataString + '>' + (fieldValue || '') + '</textarea>';\n                break;\n            case 'textarea':\n            case 'rich-text':\n                delete fieldData.type;\n                var fieldVal = fieldValue || '';\n\n                fieldMarkup = fieldLabel + '<textarea ' + fieldDataString + '>' + fieldVal + '</textarea>';\n                break;\n            case 'dropdown':\n                var optionAttrsString;\n\n                fieldData.type = fieldData.type.replace('-group', '');\n\n                if (fieldOptions) {\n\n                    if (fieldData.placeholder) {\n                        optionsMarkup += '<option disabled selected>' + fieldData.placeholder + '</option>';\n                    }\n\n                    for (var i = 0; i < fieldOptions.length; i++) {\n                        if (!fieldOptions[i].selected || fieldData.placeholder) {\n                            delete fieldOptions[i].selected;\n                        }\n\n                        var optionLabel = fieldOptions[i].label\n                            ? fbUtils.cutJs(fieldOptions[i].label)\n                            : '';\n\n                        optionAttrsString = fbUtils.attrString(fieldOptions[i]);\n                        optionsMarkup += '<option ' + optionAttrsString + '>' + optionLabel + '</option>';\n                    }\n                }\n\n                fieldMarkup = fieldLabel + '<select ' + fieldDataString + '>' + optionsMarkup + '</select>';\n                break;\n            case 'checkbox':\n            case 'radio':\n            case 'rating':\n                var optionAttrs = void 0,\n                    ratingClass = '';\n\n                fieldData.type = fieldData.type.replace('-group', '');\n\n                if (fieldData.type === 'rating') {\n                    fieldData.type = 'radio';\n                    ratingClass = 'amform-rating-container ';\n                    fieldOptions = fieldOptions.reverse();\n                }\n\n                if (fieldData.type === 'checkbox' || fieldData.type === 'checkboxtwo') {\n                    fieldData.name += '[]';\n                }\n\n                if (fieldOptions) {\n                    var _optionAttrsString = void 0;\n\n                    for (var _i = 0; _i < fieldOptions.length; _i++) {\n                        optionAttrs = Object.assign({value: '', label: ''}, fieldData, fieldOptions[_i]);\n\n                        if (optionAttrs.value) {\n                            if (optionAttrs.selected) {\n                                delete optionAttrs.selected;\n                                optionAttrs.checked = null;\n                            }\n\n                            optionAttrs.id = fieldData.id + '-' + _i;\n                            _optionAttrsString = fbUtils.attrString(optionAttrs);\n\n                            var br = '',\n                             classNameLabel = ' class=\"amform-versiontwo-label\"';\n\n                            if (withBr) {\n                                br = '<br>';\n                                // eslint-disable-next-line no-use-before-define\n                                className = '';\n                            }\n\n                            var labelText = ratingClass ? '' : optionAttrs.label;\n                            let inputAsString = '<input ' + _optionAttrsString + '/' + '> <label for=\"'\n                                + optionAttrs.id + '\" ' + classNameLabel + '>'\n                                + fbUtils.cutJs(labelText) + '</label>' + br;\n\n                            if (optionAttrs.name.startsWith('checkboxtwo') || optionAttrs.name.startsWith('radiotwo')) {\n                                inputAsString = `<div class=\"amform-groupv2\">${inputAsString}</div>`;\n                            }\n\n                            optionsMarkup += inputAsString;\n                        }\n\n                    }\n\n                    if (fieldData.other) {\n                        var otherOptionAttrs = {\n                            id: fieldData.id + '-' + 'other',\n                            className: fieldData.className + ' other-option',\n                            onclick: 'fbUtils.otherOptionCB(\\'' + fieldData.id + '-other\\')'\n                        };\n\n                        _optionAttrsString = fbUtils.attrString(Object.assign({}, fieldData, otherOptionAttrs));\n\n                        // eslint-disable-next-line max-len\n                        optionsMarkup += '<input ' + _optionAttrsString + '/' + '>'\n                            + '<label for=\"' + otherOptionAttrs.id + '\">'\n                            + opts.messages.other + '</label> <input type=\"text\" name=\"'\n                            + fieldData.name + '\" id=\"' + otherOptionAttrs.id\n                            + '-value\" class=\"amform-no-display\"' + '/' + '>';\n                    }\n                }\n\n                fieldMarkup = fieldLabel + '<div class=\"' + ratingClass + fieldData.type + '-group\">'\n                    + optionsMarkup + '</div>';\n                break;\n            case 'textinput':\n            case 'password':\n            case 'email':\n            case 'number':\n            case 'file':\n            case 'hidden':\n            case 'date':\n            case 'time':\n            case 'datetime-local':\n            case 'daterange':\n            case 'tel':\n            case 'autocomplete':\n                fieldMarkup = fieldLabel + ' <input ' + fieldDataString + '>';\n                break;\n            case 'color':\n                fieldMarkup = fieldLabel + ' <input ' + fieldDataString + '> ' + opts.messages.selectColor;\n                break;\n            case 'button':\n            case 'submit':\n                fieldMarkup = '<button ' + fieldDataString + '>' + fieldLabelVal + '</button>';\n                break;\n            case 'googlemap':\n                fieldMarkup = fieldLabel + ' <input ' + fieldDataString + '><div class=\"map\"></div>';\n                break;\n            default:\n                fieldMarkup = '<' + fieldData.type + ' ' + fieldDataString + '>' + fieldLabelVal + '</' + fieldData.type + '>';\n        }\n\n        if (fieldData.type !== 'hidden') {\n            var className = fieldData.id ? 'fb-' + fieldData.type + ' form-group field-' + fieldData.id : '';\n\n            className += ' amform-layout-' + fieldData.layout;\n            fieldMarkup = fbUtils.markup('div', fieldMarkup, {\n                className: className\n            });\n        } else {\n            fieldMarkup = fbUtils.markup('input', null, fieldData);\n        }\n\n        if (fieldData.type === 'googlemap') {\n            var position = null,\n                zoom = 1,\n                oldMapSelector = '.' + fieldMarkup.className.replace(/\\s+/g, '.'),\n                oldMap = $(oldMapSelector);\n\n            if (oldMap.length > 0\n                && $.data(oldMap[0], 'mage-amGoogleMap')\n            ) {\n                position = oldMap.amGoogleMap('getPosition');\n                zoom = oldMap.amGoogleMap('getZoom');\n            } else if (fieldData.map_position) {\n                var lat = _.isUndefined(fieldData.map_position.lat) ? 0 : parseFloat(fieldData.map_position.lat),\n                    lng = _.isUndefined(fieldData.map_position.lng) ? 0 : parseFloat(fieldData.map_position.lng);\n\n                position = {\n                    'lat': lat,\n                    'lng': lng\n                };\n                zoom = fieldData.zoom;\n            }\n            $(fieldMarkup).amGoogleMap({\n                'position': position,\n                'zoom': zoom\n            });\n        }\n\n        return fieldMarkup;\n    };\n\n    /**\n     * Listen to create or init wysiwyg editor\n     *\n     * @param  {String} selector - css selector of the target type='wysiwyg'\n     * @param  {String} html - wysiwyg content\n     * @param  {Object} wysiwygConfig - wysiwyg config\n     * @returns {void}\n     */\n    fbUtils.wysiwygListener = function (selector, html, wysiwygConfig) {\n        var editors = Object.keys(tinymce.EditorManager.editors);\n\n        if (tinymce.EditorManager.editors.length && editors.includes(selector)) {\n            fbUtils.setWysiwygContent(selector, html);\n            fbUtils.refreshWysiwyg(selector);\n        } else {\n            fbUtils.createWysiwyg(selector, html, wysiwygConfig);\n        }\n    };\n\n    /**\n     * @param  {String} selector - css selector of the target type='wysiwyg'\n     * @param  {String} html - wysiwyg content\n     * @param  {Object} wysiwygConfig - wysiwyg config\n     * @returns {void}\n     */\n    fbUtils.createWysiwyg = function (selector, html, wysiwygConfig) {\n        // eslint-disable-next-line new-cap,no-undef\n        var wysiwyg = new wysiwygSetup(selector, _.extend(wysiwygConfig, {\n            'width': '100%',\n            'height': '200px'\n        }));\n\n        wysiwyg.setup('exact');\n        fbUtils.setWysiwygContent(selector, html);\n    };\n\n    /**\n     * @param  {String} selector - css selector of the target type='wysiwyg'\n     * @returns {void}\n     */\n    fbUtils.refreshWysiwyg = function (selector) {\n        tinymce.EditorManager.execCommand('mceRemoveEditor', true, selector);\n        tinymce.EditorManager.execCommand('mceAddEditor', true, selector);\n    };\n\n    /**\n     * @param  {String} selector - css selector of the target type='wysiwyg'\n     * @param  {String} html - wysiwyg content\n     * @returns {void}\n     */\n    fbUtils.setWysiwygContent = function (selector, html) {\n        $('.amform-wysiwyg#' + selector).html(html);\n    };\n\n    /**\n     * Callback for other option.\n     * Toggles the hidden text area for \"other\" option.\n     * @param  {String} otherId id of the \"other\" option input\n     */\n    fbUtils.otherOptionCB = function (otherId) {\n        var otherInput = document.getElementById(otherId),\n            otherInputValue = document.getElementById(otherId + '-value');\n\n        if (otherInput.checked) {\n            otherInput.style.display = 'none';\n            otherInputValue.style.display = 'inline-block';\n        } else {\n            otherInput.style.display = 'inline-block';\n            otherInputValue.style.display = 'none';\n        }\n    };\n\n    /**\n     * Capitalizes a string\n     * @param  {String} str uncapitalized string\n     * @return {String} str capitalized string\n     */\n    fbUtils.capitalize = function (str) {\n        return str.replace(/\\b\\w/g, function (m) {\n            return m.toUpperCase();\n        });\n    };\n\n    fbUtils.cutJs = function (str) {\n        return str.replace(/<\\/?script.*?>/ig, '');\n    };\n\n    'use strict';\n\n    function formBuilderHelpersFn(opts, formBuilder) {\n\n\n        var _helpers = {\n            doCancel: false\n        },\n         utils = fbUtils;\n\n        // eslint-disable-next-line no-use-before-define\n        formBuilder.events = formBuilderEventsFn();\n\n        _helpers.wysiwygHtmlCache = {};\n\n        /**\n         * Convert converts messy `cl#ssNames` into valid `class-names`\n         *\n         * @param  {string} str\n         * @return {string}\n         */\n        _helpers.makeClassName = function (str) {\n            str = str.replace(/[^\\w\\s\\-]/gi, '');\n            return utils.hyphenCase(str);\n        };\n\n        /**\n         * Add a mobile class\n         *\n         * @return {string}\n         */\n        _helpers.mobileClass = function () {\n            var mobileClass = '';\n\n            (function (a) {\n                // eslint-disable-next-line max-len\n                if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n                    mobileClass = ' fb-mobile';\n                }\n            })(navigator.userAgent || navigator.vendor || window.opera);\n            return mobileClass;\n        };\n\n        /**\n         * Callback for when a drag begins\n         *\n         * @param  {Object} event\n         * @param  {Object} ui\n         */\n        _helpers.startMoving = function (event, ui) {\n            ui.item.show().addClass('moving');\n            _helpers.startIndex = $('li', this).index(ui.item);\n        };\n\n        /**\n         * Callback for when a drag ends\n         *\n         * @param  {Object} event\n         * @param  {Object} ui\n         */\n        _helpers.stopMoving = function (event, ui) {\n            var wysiwygElement = ui.item.find('.amform-wysiwyg[type=\"wysiwyg\"]');\n\n            if (wysiwygElement.length) {\n                fbUtils.refreshWysiwyg(wysiwygElement.attr('id'));\n            }\n\n            ui.item.removeClass('moving');\n\n            if (_helpers.doCancel || $(event.target).hasClass('frmb-control')) {\n                $(ui.sender).sortable('cancel');\n                $(this).sortable('cancel');\n            }\n\n            _helpers.save();\n            _helpers.doCancel = false;\n        };\n\n        /**\n         * Callback for when the user stopped sorting\n         *\n         * @param  {Object} event\n         * @param  {Object} ui\n         */\n        _helpers.update = function (event, ui) {\n            if (_helpers.doCancel) {\n                return false;\n            }\n\n            if (ui.item.parent()[0] === formBuilder.sortableFields[0]) {\n                formBuilder.processControl(ui.item);\n                _helpers.doCancel = true;\n            } else {\n                _helpers.setFieldOrder(event.target);\n                _helpers.doCancel = !opts.sortableControls;\n            }\n        };\n\n        /**\n         * jQuery UI sortable beforeStop callback used for both lists.\n         * Logic for canceling the sort or drop.\n         */\n        _helpers.beforeStop = function (event, ui) {\n            var form = document.getElementById(opts.formID),\n                lastIndex = form.children.length - 1,\n                cancelArray = [];\n\n            _helpers.stopIndex = ui.placeholder.index() - 1;\n\n            if (!opts.sortableControls && ui.item.parent().hasClass('frmb-control')) {\n                cancelArray.push(true);\n            }\n\n            if (opts.prepend) {\n                cancelArray.push(_helpers.stopIndex === 0);\n            }\n\n            if (opts.append) {\n                cancelArray.push(_helpers.stopIndex + 1 === lastIndex);\n            }\n\n            _helpers.doCancel = cancelArray.some(function (elem) {\n                return elem === true;\n            });\n        };\n\n        /**\n         * Make strings safe to be used as classes\n         *\n         * @param  {string} str string to be converted\n         * @return {string}     converter string\n         */\n        _helpers.safename = function (str) {\n            return str.replace(/\\s/g, '-')\n                .replace(/[^a-zA-Z0-9\\-]/g, '')\n                .toLowerCase();\n        };\n\n        /**\n         * Strips non-numbers from a number only input\n         *\n         * @param  {string} str string with possible number\n         * @return {string}     string without numbers\n         */\n        _helpers.forceNumber = function (str) {\n            return str.replace(/[^0-9]/g, '');\n        };\n\n        /**\n         * hide and show mouse tracking tooltips, only used for disabled\n         * fields in the editor.\n         *\n         * @todo   remove or refactor to make better use\n         * @param  {Object} tt jQuery option with nexted tooltip\n         * @return {void}\n         */\n        _helpers.initTooltip = function (tt) {\n            var tooltip = tt.find('.tooltip');\n\n            tt.mouseenter(function () {\n                if (tooltip.outerWidth() > 200) {\n                    tooltip.addClass('max-width');\n                }\n                tooltip.css('left', tt.width() + 14);\n                tooltip.stop(true, true).fadeIn('fast');\n            }).mouseleave(function () {\n                tt.find('.tooltip').stop(true, true).fadeOut('fast');\n            });\n\n            tooltip.hide();\n        };\n\n        /**\n         * Attempts to get element type and subtype\n         *\n         * @param  {Object} $field\n         * @return {Object}\n         */\n        _helpers.getTypes = function ($field) {\n            var types = {\n                    type: $field.attr('type')\n                },\n                subtype = $('.fld-subtype', $field).val();\n\n            if (subtype !== types.type) {\n                types.subtype = subtype;\n            }\n\n            return types;\n        };\n\n        /**\n         * Get option data for a field\n         * @param  {Object} field jQuery field object\n         * @return {Array}        Array of option values\n         */\n        _helpers.fieldOptionData = function (field) {\n            var options = [];\n\n            $('.sortable-options li', field).each(function () {\n                var $option = $(this),\n                    selected = $('.option-selected', $option).is(':checked'),\n                    attrs = {\n                        label: $('.option-label', $option).val(),\n                        value: $('.option-value', $option).val()\n                    };\n\n                if (selected) {\n                    attrs.selected = selected;\n                }\n                if (attrs.value) {\n                    options.push(attrs);\n                }\n            });\n\n            return options;\n        };\n\n        /**\n         * XML save\n         *\n         * @param  {Object} form sortableFields node\n         */\n        _helpers.xmlSave = function (form) {\n            var formData = _helpers.prepData(form),\n                xml = ['<form-template>\\n\\t<fields>'];\n\n            utils.forEach(formData, function (fieldIndex, field) {\n                var fieldContent = null;\n\n                // Handle options\n                if (field.type.match(/(select|checkbox-group|radio-group)/)) {\n                    var optionData = field.values,\n                        options = [];\n\n                    for (var i = 0; i < optionData.length; i++) {\n                        var option = utils.markup('option', optionData[i].label, optionData[i]).outerHTML;\n\n                        options.push('\\n\\t\\t\\t' + option);\n                    }\n\n                    options.push('\\n\\t\\t');\n                    fieldContent = options.join('');\n                    delete field.values;\n                }\n\n                var xmlField = utils.markup('field', fieldContent, field);\n\n                xml.push('\\n\\t\\t' + xmlField.outerHTML);\n            });\n\n            xml.push('\\n\\t</fields>\\n</form-template>');\n\n            return xml.join('');\n        };\n\n        _helpers.prepData = function (form) {\n            var formData = [];\n\n            if (form.childNodes.length !== 0) {\n                // build data object\n                utils.forEach(form.childNodes, function (index, field) {\n                    var $field = $(field);\n\n                    if (!$field.hasClass('disabled')) {\n                        var match,\n                            multipleField;\n\n                        (function () {\n                            var fieldData = _helpers.getTypes($field),\n                                roleVals = $('.roles-field:checked', field).map(function () {\n                                    return this.value;\n                                }).get();\n\n                            $('[class*=\"fld-\"]', field).each(function () {\n                                var name = utils.camelCase(this.name);\n\n                                fieldData[name] = this.type === 'checkbox' ? this.checked : this.value;\n                            });\n\n                            if (roleVals.length) {\n                                fieldData.role = roleVals.join(',');\n                            }\n\n                            fieldData.className = fieldData.className || fieldData.class; // backwards compatibility\n\n\n                            match = /(?:^|\\s)btn-(.*?)(?:\\s|$)/g.exec(fieldData.className);\n\n                            if (match) {\n                                fieldData.style = match[1];\n                            }\n\n                            fieldData = utils.trimObj(fieldData);\n\n                            multipleField = fieldData.type\n                                // eslint-disable-next-line max-len\n                                .match(/(select|dropdown|listbox|radio|radiotwo|checkbox|checkboxtwo|radio-group|rating)/);\n\n\n                            if (multipleField) {\n                                fieldData.values = _helpers.fieldOptionData($field);\n                            }\n\n                            if (fieldData.type === 'googlemap') {\n                                var fbGoogleMap = $(field).find('.fb-googlemap');\n\n                                fieldData.map_position = fbGoogleMap.amGoogleMap('getPosition');\n                                fieldData.zoom = fbGoogleMap.amGoogleMap('getZoom');\n                            }\n                            if (fieldData.type === 'date') {\n                                fieldData.value = $field.find('.amform-date._has-datepicker').val();\n                                fieldData.format = $field.attr('date-format');\n                            }\n\n                            if (fieldData.type === 'wysiwyg') {\n                                fieldData.value = $field.find('[type=' + fieldData.type + ']').val();\n                            }\n\n                            fieldData.dependency = _helpers.fieldDependencyData($field);\n\n                            formData.push(fieldData);\n                        })();\n                    }\n                });\n            }\n\n            return formData;\n        };\n\n        _helpers.jsonSave = function (form) {\n            return window.JSON.stringify(_helpers.prepData(form), null, '\\t');\n        };\n\n        _helpers.getData = function (formData) {\n            var data = formData || opts.formData;\n\n            if (!data) {\n                return false;\n            }\n\n            var setData = {\n                xml: function xml(formData) {\n                    return utils.parseXML(formData);\n                },\n                json: function json(formData) {\n                    return window.JSON.parse(formData);\n                }\n            };\n\n            formBuilder.formData = setData[opts.dataType](data) || [];\n\n            return formBuilder.formData;\n        };\n\n        /**\n         * Saves and returns formData\n         * @return {XML|JSON}\n         */\n        _helpers.save = function () {\n            var form = document.getElementById(opts.formID),\n                 doSave = {\n                    xml: _helpers.xmlSave,\n                    json: _helpers.jsonSave\n                };\n\n            // save action for current `dataType`\n            formBuilder.formData = doSave[opts.dataType](form);\n\n            //trigger formSaved event\n            document.dispatchEvent(formBuilder.events.formSaved);\n            return formBuilder.formData;\n        };\n\n        /**\n         * increments the field ids with support for multiple editors\n         * @param  {String} id field ID\n         * @return {String}    incremented field ID\n         */\n        _helpers.incrementId = function (id) {\n            var split = id.lastIndexOf('-'),\n                newFieldNumber = parseInt(id.substring(split + 1), 10) + 1,\n                baseString = id.substring(0, split);\n\n            return baseString + '-' + newFieldNumber;\n        };\n\n        /**\n         * Collect field attribute values and call fieldPreview to generate preview\n         * @param  {Object} field jQuery wrapped dom object @todo, remove jQuery dependency\n         * @param {Object} orig jQuery saved original when creating clone\n         */\n        _helpers.updatePreview = function (field, orig) {\n            var fieldClass = field.attr('class');\n\n            if (fieldClass && fieldClass.indexOf('ui-sortable-handle') !== -1) {\n                return;\n            }\n\n            var fieldType = $(field).attr('type'),\n                $prevHolder = $('.prev-holder', field),\n                previewData = {\n                    type: fieldType\n                },\n                preview;\n\n            $('[class*=\"fld-\"]', field).each(function () {\n                var name = utils.camelCase(this.name);\n\n                previewData[name] = this.type === 'checkbox' ? this.checked : fbUtils.escapeAttr(this.value);\n            });\n\n            var style = $('.btn-style', field).val();\n\n            if (style) {\n                previewData.style = style;\n            }\n\n            if (fieldType === 'wysiwyg') {\n                _helpers.setWysiwygHtml($prevHolder, previewData, orig);\n            }\n\n            if (fieldType.match(/(select|dropdown|listbox|radio|radiotwo|checkbox|checkboxtwo|radio-group|rating)/)) {\n                previewData.values = [];\n                previewData.multiple = fieldType === 'listbox';\n\n                $('.sortable-options li', field).each(function () {\n                    var option = {};\n\n                    option.selected = $('.option-selected', this).is(':checked');\n                    option.value = $('.option-value', this).val();\n                    option.label = $('.option-label', this).val();\n                    previewData.values.push(option);\n                });\n            }\n            if (fieldType === 'date') {\n                var value = field.data('fieldData').attrs ?\n                        field.data('fieldData').attrs.value :\n                        field.data('fieldData').value;\n\n                previewData.value = value;\n            }\n\n            previewData = utils.trimObj(previewData);\n\n            previewData.className = _helpers.classNames(field, previewData);\n            $('.fld-className', field).val(previewData.className);\n\n            if (fieldType === 'googlemap') {\n                var fieldData = field.data('fieldData');\n\n                if (fieldData) {\n                    // first load\n                    if (fieldData.attrs) {\n                        previewData.map_position = fieldData.attrs.map_position;\n                        previewData.zoom = fieldData.attrs.zoom;\n                    }\n                } else if (orig) {\n                    // for clone action\n                    var oldMap = orig.find('.fb-googlemap');\n\n                    if (oldMap.length > 0\n                        && $.data(oldMap[0], 'mage-amGoogleMap')\n                    ) {\n                        var latLng = oldMap.amGoogleMap('getPosition');\n\n                        previewData.map_position = {\n                            lat: latLng.lat(),\n                            lng: latLng.lng()\n                        };\n                        previewData.zoom = oldMap.amGoogleMap('getZoom');\n                    }\n                }\n            }\n\n            field.data('fieldData', previewData);\n            preview = utils.fieldRender(previewData, opts, true);\n\n            if (fieldType === 'date') {\n                this.updateDateField(preview, field.attr('date-format'), previewData.value);\n            }\n\n            $prevHolder.html(preview);\n\n            if ($prevHolder.find('.amform-layout-two').length) {\n                $prevHolder.find('.amform-layout-two').removeClass('amform-layout-two');\n                $prevHolder.parents('li.form-field').addClass('amform-layout-two');\n            }\n\n            if ($prevHolder.find('.amform-layout-three').length) {\n                $prevHolder.find('.amform-layout-three').removeClass('amform-layout-three');\n                $prevHolder.parents('li.form-field').addClass('amform-layout-three');\n            }\n\n            $('input[toggle]', $prevHolder).kcToggle();\n\n            if (fieldType === 'wysiwyg' && opts.wysiwygConfig.enabled) {\n                fbUtils.wysiwygListener(previewData.id, _helpers.getWysiwygHtml(previewData.name), opts.wysiwygConfig);\n            }\n        };\n\n        /**\n         * Set wysiwyg content to the wysiwygHtmlCache by it's name\n         *\n         * @param  {Object} $prevHolder\n         * @param  {Object} previewData - field data\n         * @param  {Object|Undefined} orig - not undefined means field is copied. orig - original field\n         * @returns {void}\n         */\n        _helpers.setWysiwygHtml = function ($prevHolder, previewData, orig) {\n            var html = _helpers.wysiwygHtmlCache,\n                value = $prevHolder.find('[type=' + previewData.type + ']').val();\n\n            if (typeof value === 'undefined') {\n                value = previewData.value;\n            }\n\n            if (!value) {\n                html[previewData.name + '-preview'] = '';\n\n                return;\n            }\n\n            if (typeof orig !== 'undefined' || value.length) {\n                html[previewData.name + '-preview'] = value;\n            }\n        };\n\n        /**\n         * @param  {String} name\n         * @returns {void}\n         */\n        _helpers.removeWysiwygHtml = function (name) {\n            delete _helpers.wysiwygHtmlCache[name];\n        };\n\n        /**\n         * @param  {String} name\n         * @returns {String} html\n         */\n        _helpers.getWysiwygHtml = function (name) {\n            return _helpers.wysiwygHtmlCache[name];\n        };\n\n        _helpers.updateDateField = function (fieldMarkup, format, value) {\n            var dateInput = $(fieldMarkup).find('input');\n\n            format = format.replaceAll('yy', 'y');\n            dateInput.removeAttr('type');\n            dateInput.attr('readonly', 'readonly');\n            dateInput.datepicker({\n                showOn: 'both',\n                changeYear: true,\n                yearRange: '1900:2100',\n                autoSize: true,\n                dateFormat: format\n            });\n\n            if (value) {\n                dateInput.datepicker('setDate', value);\n            }\n\n            dateInput.attr('placeholder', format);\n            dateInput.attr('size', 15);\n            $(fieldMarkup).find('button').html('');\n\n            var datepicker = $('#ui-datepicker-div');\n\n            if (!datepicker.hasClass('am-picker-year')) {\n                datepicker.addClass('am-picker-year');\n            }\n        };\n\n        _helpers.debounce = function (func) {\n            var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250,\n                immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false,\n                timeout;\n\n            return function () {\n                var context = this,\n                    args = arguments,\n                    later = function later() {\n                        timeout = null;\n                        if (!immediate) {\n                            func.apply(context, args);\n                        }\n                    },\n                    callNow = immediate && !timeout;\n\n                clearTimeout(timeout);\n                timeout = setTimeout(later, wait);\n\n                if (callNow) {\n                    func.apply(context, args);\n                }\n            };\n        };\n\n        /**\n         * Display a custom tooltip for disabled fields.\n         *\n         * @param  {Object} field\n         */\n        _helpers.disabledTT = {\n            className: 'frmb-tt',\n            add: function add(field) {\n                var title = opts.messages.fieldNonEditable;\n\n                if (title) {\n                    var tt = utils.markup('p', title, {className: _helpers.disabledTT.className});\n\n                    field.append(tt);\n                }\n            },\n            remove: function remove(field) {\n                $('.frmb-tt', field).remove();\n            }\n        };\n\n        _helpers.classNames = function (field, previewData) {\n            var i = void 0,\n                type = previewData.type,\n                style = previewData.style,\n                className = field[0].querySelector('.fld-className').value,\n                classes = className.split(' '),\n                types = {\n                    button: 'btn',\n                    submit: 'btn'\n                },\n\n                primaryType = types[type];\n\n            if (primaryType) {\n                if (style) {\n                    for (i = 0; i < classes.length; i++) {\n                        var re = new RegExp('(?:^|\\s)' + primaryType + '-(.*?)(?:\\s|$)+', 'g'),\n                         match = classes[i].match(re);\n\n                        if (match) {\n                            classes.splice(i, 1);\n                        }\n                    }\n                    classes.push(primaryType + '-' + style);\n                }\n                classes.push(primaryType);\n            }\n\n            // reverse the array to put custom classes at end,\n            // remove any duplicates, convert to string, remove whitespace\n            return utils.unique(classes).join(' ').trim();\n        };\n\n        /**\n         * Closes and open dialog\n         *\n         * @param  {Object} overlay Existing overlay if there is one\n         * @param  {Object} dialog  Existing dialog\n         * @return {Event}          Triggers modalClosed event\n         */\n        _helpers.closeConfirm = function (overlay, dialog) {\n            overlay = overlay || document.getElementsByClassName('form-builder-overlay')[0];\n            dialog = dialog || document.getElementsByClassName('form-builder-dialog')[0];\n            overlay.classList.remove('visible');\n            dialog.remove();\n            overlay.remove();\n            document.dispatchEvent(formBuilder.events.modalClosed);\n        };\n\n        /**\n         * Returns the layout data based on controlPosition option\n         * @param  {String} controlPosition 'left' or 'right'\n         * @return {Object}\n         */\n        _helpers.editorLayout = function (controlPosition) {\n            var layoutMap = {\n                left: {\n                    stage: 'pull-right',\n                    controls: 'pull-left'\n                },\n                right: {\n                    stage: 'pull-left',\n                    controls: 'pull-right'\n                }\n            };\n\n            return layoutMap[controlPosition] ? layoutMap[controlPosition] : '';\n        };\n\n        /**\n         * Adds overlay to the page. Used for modals.\n         * @return {Object}\n         */\n        _helpers.showOverlay = function () {\n            var overlay = utils.markup('div', null, {\n                className: 'form-builder-overlay'\n            });\n\n            document.body.appendChild(overlay);\n            overlay.classList.add('visible');\n\n            overlay.onclick = function () {\n                _helpers.closeConfirm(overlay);\n            };\n\n            return overlay;\n        };\n\n        /**\n         * Custom confirmation dialog\n         *\n         * @param  {Object}  message   Content to be displayed in the dialog\n         * @param  {function} yesAction callback to fire if they confirm\n         * @param  {Boolean} coords    location to put the dialog\n         * @param  {String}  className Custom class to be added to the dialog\n         * @return {Object}            Reference to the modal\n         */\n        _helpers.confirm = function (message, yesAction) {\n            var coords = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false,\n             className = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '',\n\n             overlay = _helpers.showOverlay(),\n             yes = utils.markup('button', opts.messages.yes, {className: 'yes btn btn-success btn-sm'}),\n                no = utils.markup('button', opts.messages.no, {className: 'no btn btn-danger btn-sm'});\n\n            no.onclick = function () {\n                _helpers.closeConfirm(overlay);\n            };\n\n            yes.onclick = function () {\n                yesAction();\n                _helpers.closeConfirm(overlay);\n            };\n\n            var btnWrap = utils.markup('div', [no, yes], {className: 'button-wrap'});\n\n            className = 'form-builder-dialog ' + className;\n\n            var miniModal = utils.markup('div', [message, btnWrap], {className: className});\n\n            if (!coords) {\n                coords = {\n                    pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n                    pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n                };\n                miniModal.style.position = 'fixed';\n            } else {\n                miniModal.classList.add('positioned');\n            }\n\n            miniModal.style.left = coords.pageX + 'px';\n            miniModal.style.top = coords.pageY + 'px';\n\n            document.body.appendChild(miniModal);\n\n            yes.focus();\n            return miniModal;\n        };\n\n        /**\n         * Popup dialog the does not require confirmation.\n         * @param  {String|DOM|Array}  content\n         * @param  {Boolean} coords    false if no coords are provided. Without coordinates\n         *                             the popup will appear center screen.\n         * @param  {String}  className classname to be added to the dialog\n         * @return {Object}            dom\n         */\n        _helpers.dialog = function (content) {\n            var coords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false,\n             className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n            _helpers.showOverlay();\n\n            className = 'form-builder-dialog ' + className;\n\n            var miniModal = utils.markup('div', content, {className: className});\n\n            if (!coords) {\n                coords = {\n                    pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n                    pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n                };\n                miniModal.style.position = 'fixed';\n            } else {\n                miniModal.classList.add('positioned');\n            }\n\n            miniModal.style.left = coords.pageX + 'px';\n            miniModal.style.top = coords.pageY + 'px';\n\n            document.body.appendChild(miniModal);\n\n            document.dispatchEvent(formBuilder.events.modalOpened);\n\n            if (className.indexOf('data-dialog') !== -1) {\n                document.dispatchEvent(formBuilder.events.viewData);\n            }\n\n            return miniModal;\n        };\n\n        /**\n         * Removes all fields from the form\n         */\n        _helpers.removeAllfields = function () {\n            var form = document.getElementById(opts.formID),\n             fields = form.querySelectorAll('li.form-field'),\n             $fields = $(fields),\n             markEmptyArray = [];\n\n            if (!fields.length) {\n                return false;\n            }\n\n            if (opts.prepend) {\n                markEmptyArray.push(true);\n            }\n\n            if (opts.append) {\n                markEmptyArray.push(true);\n            }\n\n            if (!markEmptyArray.some(function (elem) {return elem === true;})) {\n                form.parentElement.classList.add('empty');\n                form.parentElement.dataset.content = opts.messages.getStarted;\n            }\n\n            form.classList.add('removing');\n\n            var outerHeight = 0;\n\n            $fields.each(function () {\n                outerHeight += $(this).outerHeight() + 3;\n            });\n\n            fields[0].style.marginTop = -outerHeight + 'px';\n\n            setTimeout(function () {\n                $fields.remove();\n                document.getElementById(opts.formID).classList.remove('removing');\n                _helpers.save();\n            }, 400);\n        };\n\n        /**\n         * If user re-orders the elements their order should be saved.\n         *\n         * @param {Object} $cbUL our list of elements\n         */\n        _helpers.setFieldOrder = function ($cbUL) {\n            if (!opts.sortableControls) {\n                return false;\n            }\n            var fieldOrder = {};\n\n            $cbUL.children().each(function (index, element) {\n                fieldOrder[index] = $(element).data('attrs').type;\n            });\n\n            if (window.sessionStorage) {\n                window.sessionStorage.setItem('fieldOrder', window.JSON.stringify(fieldOrder));\n            }\n        };\n\n        /**\n         * Reorder the controls if the user has previously ordered them.\n         *\n         * @param  {Array} frmbFields\n         * @return {Array}\n         */\n        _helpers.orderFields = function (frmbFields) {\n            var fieldOrder = false;\n\n            if (window.sessionStorage) {\n                if (opts.sortableControls) {\n                    fieldOrder = window.sessionStorage.getItem('fieldOrder');\n                } else {\n                    window.sessionStorage.removeItem('fieldOrder');\n                }\n            }\n\n            if (!fieldOrder) {\n                var controlOrder = opts.controlOrder.concat(frmbFields.map(function (field) {\n                    return field.attrs.type;\n                }));\n\n                fieldOrder = utils.unique(controlOrder);\n            } else {\n                fieldOrder = window.JSON.parse(fieldOrder);\n                fieldOrder = Object.keys(fieldOrder).map(function (i) {\n                    return fieldOrder[i];\n                });\n            }\n\n            var newOrderFields = [];\n\n            fieldOrder.forEach(function (fieldType) {\n                var field = frmbFields.filter(function (field) {\n                    return field.attrs.type === fieldType;\n                })[0];\n\n                newOrderFields.push(field);\n            });\n\n            return newOrderFields.filter(Boolean);\n        };\n\n        /**\n         * Close fields being editing\n         * @param  {Object} stage\n         */\n        _helpers.closeAllEdit = function (stage) {\n            var fields = $('> li.editing', stage),\n                toggleBtns = $('.toggle-form', stage),\n                editModes = $('.frm-holder', fields);\n\n            toggleBtns.removeClass('open');\n            fields.removeClass('editing');\n            editModes.hide();\n            $('.prev-holder', fields).show();\n        };\n\n        /**\n         * Toggles the edit mode for the given field\n         * @param  {String} fieldId\n         */\n        _helpers.toggleEdit = function (fieldId) {\n            var field = document.getElementById(fieldId),\n                toggleBtn = $('.toggle-form', field),\n                editMode = $('.frm-holder', field);\n\n            field.classList.toggle('editing');\n            toggleBtn.toggleClass('open');\n            $('.prev-holder', field).slideToggle(250);\n            editMode.slideToggle(250);\n        };\n\n        /**\n         * Controls follow scroll to the bottom of the editor\n         * @param  {Object} $sortableFields\n         * @param  {Object} cbUL\n         */\n        _helpers.stickyControls = function ($sortableFields, cbUL) {\n            var $cbWrap = $(cbUL).parent(),\n                $stageWrap = $sortableFields.parent(),\n                cbWidth = $cbWrap.width(),\n                cbPosition = cbUL.getBoundingClientRect();\n\n            // eslint-disable-next-line jquery-no-input-event-shorthand\n            $(window).scroll(function () {\n                var scrollTop = $(this).scrollTop();\n\n                if (scrollTop > $stageWrap.offset().top) {\n                    var cbStyle = {\n                            position: 'fixed',\n                            width: cbWidth,\n                            top: 0,\n                            bottom: 'auto',\n                            right: 'auto',\n                            left: cbPosition.left\n                        },\n                        cbOffset = $cbWrap.offset(),\n                        stageOffset = $stageWrap.offset(),\n                        cbBottom = cbOffset.top + $cbWrap.height(),\n                        stageBottom = stageOffset.top + $stageWrap.height();\n\n                    if (cbBottom > stageBottom && cbOffset.top !== stageOffset.top) {\n                        $cbWrap.css({\n                            position: 'absolute',\n                            top: 'auto',\n                            bottom: 0,\n                            right: 0,\n                            left: 'auto'\n                        });\n                    }\n\n                    if (cbBottom < stageBottom || cbBottom === stageBottom && cbOffset.top > scrollTop) {\n                        $cbWrap.css(cbStyle);\n                    }\n                } else {\n                    cbUL.parentElement.removeAttribute('style');\n                }\n            });\n        };\n\n        /**\n         * Open a dialog with the form's data\n         */\n        _helpers.showData = function () {\n            var data = utils.escapeHtml(formBuilder.formData),\n                code = utils.markup('code', data, {className: 'formData-' + opts.dataType}),\n                pre = utils.markup('pre', code);\n\n            _helpers.dialog(pre, null, 'data-dialog');\n        };\n\n        /**\n         * Remove a field from the stage\n         * @param  {String}  fieldID ID of the field to be removed\n         * @return {Boolean} fieldRemoved returns true if field is removed\n         */\n        _helpers.removeField = function (fieldID) {\n            var fieldRemoved = false,\n                form = document.getElementById(opts.formID),\n                fields = form.getElementsByClassName('form-field');\n\n            if (!fields.length) {\n                console.warn('No fields to remove');\n\n                return false;\n            }\n\n            if (!fieldID) {\n                var availableIds = [].slice.call(fields).map(function (field) {\n                    return field.id;\n                });\n\n                console.warn('fieldID required to use `removeField` action.');\n                console.warn('Available IDs: ' + availableIds.join(', '));\n            }\n\n            var field = document.getElementById(fieldID),\n                $field = $(field);\n\n            if (!field) {\n                console.warn('Field not found');\n\n                return false;\n            }\n\n            $field.slideUp(250, function () {\n                $field.removeClass('deleting');\n                $field.remove();\n                fieldRemoved = true;\n                _helpers.save();\n\n                if (!form.childNodes.length) {\n                    var stageWrap = form.parentElement;\n\n                    stageWrap.classList.add('empty');\n                    stageWrap.dataset.content = opts.messages.getStarted;\n                }\n            });\n\n            document.dispatchEvent(formBuilder.events.fieldRemoved);\n\n            return fieldRemoved;\n        };\n\n        _helpers.fieldDependencyData = function (field) {\n            var options = [];\n\n            $('.sortable-options li.dependent-field', field).each(function () {\n                var $option = $(this),\n                    selected = $('.option-selected', $option).is(':checked'),\n                    attrs = {\n                        field: $option.find('select').first().val(),\n                        type: $option.find('select').first().find('[selected=\"selected\"]').attr('type'),\n                        value: $option.find('select').last().val()\n                    };\n\n                if (selected) {\n                    attrs.selected = selected;\n                }\n\n                if (attrs.value) {\n                    options.push(attrs);\n                }\n            });\n\n            return options;\n        };\n\n        return _helpers;\n    }\n\n    'use strict';\n\n    function formBuilderEventsFn() {\n        var events = {};\n\n        events.loaded = new Event('loaded');\n        events.viewData = new Event('viewData');\n        events.userDeclined = new Event('userDeclined');\n        events.modalClosed = new Event('modalClosed');\n        events.modalOpened = new Event('modalOpened');\n        events.formSaved = new Event('formSaved');\n        events.fieldAdded = new Event('fieldAdded');\n        events.fieldRemoved = new Event('fieldRemoved');\n\n        return events;\n    }\n\n    'use strict';\n\n    (function ($) {\n        var Toggle = function Toggle(element, options) {\n            var defaults = {\n                    theme: 'fresh',\n                    messages: {\n                        off: 'Off',\n                        on: 'On'\n                    }\n                },\n                opts = $.extend(defaults, options),\n                $kcToggle = $('<div class=\"kc-toggle\"></div>').insertAfter(element).append(element);\n\n            $kcToggle.toggleClass('on', element.is(':checked'));\n\n            var kctOn = '<div class=\"kct-on\">' + opts.messages.on + '</div>',\n                kctOff = '<div class=\"kct-off\">' + opts.messages.off + '</div>',\n                kctHandle = '<div class=\"kct-handle\"></div>',\n                kctInner = '<div class=\"kct-inner\">' + kctOn + kctHandle + kctOff + '</div>';\n\n            $kcToggle.append(kctInner);\n\n            $kcToggle.click(function () {\n                element.attr('checked', !element.attr('checked'));\n                $(this).toggleClass('on');\n            });\n        };\n\n        $.fn.kcToggle = function (options) {\n            var toggle = this;\n\n            return toggle.each(function () {\n                var element = $(this);\n\n                if (element.data('kcToggle')) {\n                    return;\n                }\n\n                var kcToggle = new Toggle(element, options);\n\n                element.data('kcToggle', kcToggle);\n            });\n        };\n    })(jQuery);\n\n    return [fbUtils, formBuilderHelpersFn];\n});\n","Amasty_Customform/js/form-prompt.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/confirm',\n    'mage/translate'\n], function ($, confirm, $t) {\n    'use strict';\n\n    $.widget('mage.amcformPrompt', {\n        options: {\n            modalClass: 'amcform-popup-block -active',\n            responsive: true,\n            title: $t('This form can be submitted only once. Ready to proceed?'),\n            cancellationLink: '',\n            actions: {},\n            isShowed: false\n        },\n\n        _create: function () {\n            var self = this,\n                options = this.options,\n                form = $(this.element).closest('.amform-form');\n\n            self.options.actions = {\n                cancel: function () {\n                    self.options.isShowed = false;\n                }\n            };\n\n            options.buttons = [{\n                text: $t('No'),\n                class: 'amcform-button -error',\n                click: function () {\n                    this.closeModal();\n                }\n            }, {\n                text: $t('Yes'),\n                class: 'amcform-button -default',\n                click: function () {\n                    this.closeModal();\n                    form.submit();\n                }\n            }];\n\n            this.element.click(function (e) {\n                e.preventDefault();\n\n                if (!self.options.isShowed) {\n                    confirm(options);\n\n                    self.options.isShowed = true;\n                } else {\n                    form.submit();\n                }\n            });\n        }\n    });\n\n    return $.mage.amcformPrompt\n});\n","Amasty_Customform/js/form-builder.js":"define([\n    'jquery',\n    'underscore',\n    'Amasty_Customform/js/form-builder-helper',\n    'Magento_Ui/js/modal/alert',\n    'mage/translate',\n    'Magento_Ui/js/modal/modal',\n    'mage/backend/tabs'\n], function ($, _, helper, alert) {\n    'use strict';\n\n    $.widget('mage.customFormBuilder', {\n        options: {\n            controlPosition: 'right',\n            controlOrder: ['autocomplete', 'button', 'checkbox', 'checkbox-group',\n                'date', 'file', 'header', 'hidden', 'paragraph', 'number', 'radio-group', 'select', 'text', 'textarea'],\n            dataType: 'json',\n            // Array of fields to disable\n            disableFields: [],\n            editOnAdd: false,\n            // Uneditable fields or other content you would like to appear before and after regular fields:\n            append: false,\n            prepend: false,\n            defaultFields: [],\n            inputSets: [],\n            fieldRemoveWarn: false,\n            messages: {},\n            frmbFields: [{\n                label: 'autocomplete',\n                attrs: {\n                    type: 'autocomplete',\n                    className: 'autocomplete',\n                    name: 'autocomplete'\n                }\n            }],\n            notify: {\n                error: function error(message) {\n                    return console.error(message);\n                },\n                success: function success(message) {\n                    return console.log(message);\n                },\n                warning: function warning(message) {\n                    return console.warn(message);\n                }\n            },\n            sortableControls: false,\n            stickyControls: false,\n            showActionButtons: true,\n            typeUserAttrs: {},\n            typeUserEvents: {},\n            prefix: 'form-builder-',\n            fbInstances: [],\n            savedValue: '[name=\"form_json\"]',\n            savedTitles: '[name=\"form_title\"]',\n            pageFormId: [],\n            pageTitles: []\n        },\n        classes: {\n            delete: 'deleting'\n        },\n        selectors: {\n            wysiwygField: '[type=wysiwyg]',\n            deleteButton: '.delete-confirm',\n            fieldFirst: '.form-field:eq(0)',\n            wysiwygContainer: '.wysiwyg-field#{id}'\n        },\n\n        _create: function () {\n            var self = this,\n                formbId,\n                savedValue,\n                formDataJSON = [],\n                savedTitles,\n                pageCount;\n\n            self.generateSubtypes();\n\n            formDataJSON = self.options.form_json;\n            savedTitles = $(self.options.savedTitles).val();\n            self.formTitle = savedTitles ? window.JSON.parse(savedTitles) : this.options.pageTitles;\n\n            if (formDataJSON.length && !Array.isArray(formDataJSON[0])) {\n                var createPage = [];\n                createPage.push(formDataJSON);\n                formDataJSON = createPage;\n            }\n\n            if (formDataJSON.length) {\n                pageCount = formDataJSON.length;\n\n                for (var i = 0; i < pageCount; i++) {\n                    self.formData = formDataJSON[i];\n                    formbId = 'frmb-' + i;\n\n                    if (i == 0) {\n                        self.initialization(formbId);\n                        self.setPageTitle(i);\n                    } else {\n                        self.createNewPage(formbId);\n                        self.setPageTitle(i);\n                    }\n                }\n                $('[data-amcform-role=\"page\"]:first-child').find('a').trigger('click');\n            } else {\n                formbId = 'frmb-' + $('ul[id^=frmb-].frmb').length++;\n                self.formData = formDataJSON;\n                self.initialization(formbId);\n                if ($('[data-amcform-role=\"page\"]').length == 1) {\n                    $('[data-amcform-role=\"page\"]').find('a').trigger('click');\n                }\n            }\n        },\n\n        initialization: function (formbId) {\n            var self = this,\n                $cbUL,\n                boxID = formbId + '-control-box';\n\n            this.lastID = formbId + '-fld-1';\n            this.options.formID = formbId;\n            this.options.pageFormId.push(formbId);\n\n            this.helpers = helper[1](this.options, this);\n            this.utils = helper[0];\n\n            this.layout = this.helpers.editorLayout(this.options.controlPosition);\n\n            // create array of field objects to cycle through\n            var frmbFields = this.options.frmbFields;\n            //frmbFields = this.helpers.orderFields(frmbFields);\n\n            if (this.options.disableFields) {\n                // remove disabledFields\n                frmbFields = frmbFields.filter(function (field) {\n                    return !self.utils.inArray(field.attrs.type, self.options.disableFields);\n                });\n            }\n\n            // Create draggable fields for this.options\n            var cbUl = this.utils.markup('ul', null, {id: boxID, className: 'frmb-control'});\n\n            if (this.options.sortableControls) {\n                cbUl.classList.add('sort-enabled');\n            }\n\n            $cbUL = $(cbUl);\n            this.generateFormFields(frmbFields, $cbUL);\n\n            if (this.options.inputSets.length) {\n                $('<li/>', {'class': 'fb-separator'}).html('<hr>').appendTo($cbUL);\n                this.options.inputSets.forEach(function (set) {\n                    set.name = set.name || this.helpers.makeClassName(set.label);\n                    var $set = $('<li/>', {'class': 'input-set-control', type: set.name});\n                    $set.html(set.label).appendTo($cbUL);\n                });\n            }\n\n            this.generateSortable(formbId, $cbUL);\n            this.generateWrapperContent(formbId, $cbUL);\n\n            $cbUL.prev('.amcustomform-element-tabs').find('li:first-child').click();\n\n            this.observeFields($cbUL, formbId);\n\n            this.helpers.getData();\n            this.loadFields();\n\n            this.sortableFields.css('min-height', $cbUL.height());\n\n            // If option set, controls will remain in view in editor\n            if (this.options.stickyControls) {\n                this.helpers.stickyControls(this.sortableFields, cbUl);\n            }\n\n            document.dispatchEvent(self.events.loaded);\n\n            // Make actions accessible\n            self.actions = {\n                clearFields: self.helpers.removeAllfields,\n                showData: self.helpers.showData,\n                save: self.helpers.save,\n                addField: function addField(field, index) {\n                    self.helpers.stopIndex = self.sortableFields[0].children.length ? index : undefined;\n                    self.prepFieldVars(field);\n                    document.dispatchEvent(self.events.fieldAdded);\n                },\n                removeField: self.helpers.removeField,\n                setData: function setData(formData) {\n                    self.helpers.removeAllfields();\n                    self.helpers.getData(formData);\n                    self.loadFields();\n                }\n            };\n        },\n\n        addCollapseDefaultValueVariables: function (element) {\n            $(element).find('.value-wrap .default-values-link').on('click', function (e) {\n                var variantsBlock = $(e.target).closest('.value-note-wrap').find('.default-value-variants');\n                variantsBlock.slideToggle();\n                e.preventDefault();\n            });\n        },\n\n        addValidateObserve: function ($element) {\n            var self = this,\n                select = $element.find('.fld-validation');\n            this.validateObserve(select);\n\n            select.change(function (e) {\n                self.validateObserve($(e.target));\n            });\n        },\n\n        validateObserve: function ($element) {\n            var regexpBlock = $element.parents('.form-group').next('.form-group.regexp-wrap'),\n                errorBlock = regexpBlock.next('.form-group.errorMessage-wrap');\n\n            if ($element.val() === 'pattern') {\n                regexpBlock.show();\n                errorBlock.show();\n            } else {\n                regexpBlock.hide();\n                errorBlock.hide();\n            }\n        },\n\n        /**\n         * Set page title for current page if there is a saved title\n         * @param page - (int) current page\n         */\n\n        setPageTitle: function (page) {\n            var self = this,\n                id = page + 1;\n\n            if (self.formTitle) {\n                $('#page-title-' + id).val(self.formTitle[page]);\n            }\n        },\n\n        /**\n         * Create new page\n         * @param formbId - (string) id for new form\n         */\n\n        createNewPage: function (formbId) {\n            var self = this,\n                tabCount = $('[data-amcform-js=\"tabs-wrap\"]').children().length,\n                tabId = \"page-\" + tabCount,\n                titleId = 'page-title-' + tabCount,\n                $newPageTemplate = $('[data-amcform-js=\"new-page\"]'),\n                $newPage = $newPageTemplate\n                    .clone()\n                    .removeAttr(\"data-amcform-js\")\n                    .attr(\"id\", tabId)\n                    .addClass(\"fb-editor\"),\n                $newTab = $('[data-amcform-js=\"add-new-page\"]')\n                    .clone()\n                    .removeAttr(\"data-amcform-js\")\n                    .attr('data-amcform-role', 'page')\n                    .removeClass('-new'),\n                $newTitle = $newPage.find('[data-amcform-js=\"title-edit-new\"]');\n\n            $(\"a\", $newTab)\n                .attr(\"href\", \"#\" + tabId)\n                .attr('data-amcform-role', 'page-link')\n                .attr(\"title\", $.mage.__('Page ') + tabCount)\n                .text($.mage.__('Page ') + tabCount);\n\n            $newTitle.attr('data-amcform-js', 'title-edit');\n            $newTitle.find('input').attr('id', titleId);\n            $newTitle.find('label').attr('for', titleId);\n\n            $newPage.insertBefore($newPageTemplate);\n            $newTab.insertBefore('[data-amcform-js=\"add-new-page\"]');\n\n            self.options.formWrapper.tabs(\"refresh\");\n            self.options.formWrapper.tabs(\"option\", \"active\", tabCount - 1);\n\n            self.element = $newPage;\n\n            $('[data-amcform-role=\"page\"]').removeClass('active');\n            $newTab.addClass('active');\n\n            if (!formbId) {\n                self.options.form_json = [];\n                self._create();\n                return;\n            }\n\n            self.initialization(formbId);\n        },\n\n        /**\n         * Delete current page\n         * @param page - DOM node\n         * @param e - event\n         */\n\n        deleteCurentPage: function (page, e) {\n            var self = this,\n                tab = $(page).parent(),\n                prevTab = tab.prev().find('a'),\n                pageId = $(page).prev().attr('href').split('-')[1];\n\n            e.stopPropagation();\n\n            self.downgradeTabNumber(tab);\n\n            tab.remove();\n            $('#page-' + pageId).remove();\n            prevTab.trigger('click');\n        },\n\n        /**\n         * Downgrade tabs number after deleting previos tab\n         * @param tab - DOM element\n         */\n        downgradeTabNumber: function (tab) {\n            var nextTabs = tab.nextAll().find('a');\n\n            nextTabs.each(function (index, page) {\n                if (index == nextTabs.length -1) {\n                    return;\n                }\n\n                var pageValue = $(page).text().split(' '),\n                    newPageId = pageValue[1] - 1,\n                    pageLabel = pageValue[0];\n\n                $(page).text(pageLabel + ' ' + newPageId);\n                $(page).attr('title', pageLabel + ' ' + newPageId);\n            });\n        },\n\n        /**\n         * Navigate between form pages\n         * @param page - DOM node\n         */\n\n        navigatePageForm: function (page) {\n            if ($(page).length > 0) {\n                var pageId = $(page).attr('href'),\n                    tab = $(page).parent(),\n                    tabId = pageId.split('-')[1] - 1,\n                    fields;\n\n                $('[data-amcform-role=\"page\"]').removeClass('active');\n                $(tab).addClass('active');\n                $(pageId).find('.amcustomform-element-tabs li:first-child').trigger('click');\n\n                // Set new settings\n                this.options.formID = 'frmb-' + tabId;\n                fields = $('#' + this.options.formID).children().length + 1;\n                this.lastID = this.options.formID + '-fld-' + fields;\n                this.sortableFields = $('ul#' + this.options.formID + '.frmb.ui-sortable');\n                this.stageWrap = $('div#' + this.options.formID + '-stage-wrap.stage-wrap.pull-left');\n            }\n        },\n\n        navigateKeyboard: function () {\n            this.navigatePageForm(\n                $('[data-amcform-role=\"page\"][aria-selected=\"true\"] a')\n            );\n        },\n\n        /**\n         * @return {array}\n         */\n        getPageTitles: function () {\n            var result = [];\n\n            $.each($('[data-amcform-js=\"title-edit\"] .amcform-input'), function (index, title) {\n                result.push($(title).val());\n            });\n\n            return result;\n        },\n\n        /**\n         * Set page titles in hidden input\n         */\n        savePageTitles: function () {\n            var self = this;\n\n            self.options.pageTitles = this.getPageTitles();\n\n            $('#form_form_title').val(window.JSON.stringify(self.options.pageTitles, null, '\\t'));\n\n            $('[data-amcform-js^=\"title-edit\"] .amcform-input').each(function (key, element) {\n                $(element).attr('disabled', 'disabled');\n            });\n        },\n\n        /**\n         * @return {array}\n         */\n        getSerializedFormConfig: function () {\n            var result = [];\n\n            $.each(this.options.pageFormId, function (index, id) {\n                var form = document.getElementById(id),\n                    json;\n\n                if (form) {\n                    json = this.helpers.prepData(form);\n\n                    if (json.length) {\n                        result.push(json);\n                    }\n                }\n            }.bind(this));\n\n            return result;\n        },\n\n        /**\n         * Save form configuration\n         */\n        generateSaveEvent: function (event) {\n            var self = this;\n\n            self.savePageTitles();\n\n            self.options.fbInstances = this.getSerializedFormConfig();\n\n            var formFields = 'input, textarea, select',\n                formContent = window.JSON.stringify(self.options.fbInstances, null, '');\n            if (formContent.length < 65000) {\n                $('[name=\"form_json\"]').val(formContent);\n                $('.form-wrap').find(formFields).each(function (key, element) {\n                    $(element).removeAttr('required').attr('disabled', 'disabled');\n                });\n            } else {\n                event.preventDefault();\n                self.options.fbInstances = [];\n                self.options.pageTitles = [];\n                alert({\n                    title: $.mage.__('Error'),\n                    content: $.mage.__('You have exceeded the maximum allowed number of fields. Please try to create several forms instead of this one.')\n                });\n            }\n        },\n\n        generateSubtypes: function () {\n            this.options.messages.subtypes = function () {\n                var subtypeDefault = function subtypeDefault(subtype) {\n                    return {\n                        label: subtype,\n                        value: subtype\n                    };\n                };\n\n                return {\n                    text: ['text', 'password', 'email', 'color', 'tel'].map(subtypeDefault),\n                    header: ['h1', 'h2', 'h3'].map(subtypeDefault)\n                };\n            }();\n        },\n\n        generateWrapperContent: function (formbId, $cbUL) {\n            var $formWrap = $('<div/>', {\n                id: formbId + '-form-wrap',\n                'class': 'form-wrap form-builder' + this.helpers.mobileClass()\n            });\n\n            this.stageWrap = $('<div/>', {\n                id: formbId + '-stage-wrap',\n                'class': 'stage-wrap ' + this.layout.stage\n            });\n\n            var controlbWrap = $('<div/>', {\n                id: formbId + '-cb-wrap',\n                'class': 'cb-wrap ' + this.layout.controls\n            });\n\n            /*show type controls*/\n            var typesWrap = $('<ul/>', {\n                'class': 'type-wrap amcform-tabs-wrap -second amcustomform-element-tabs'\n            });\n\n            var fieldsTypes = this.options.fieldsTypes;\n            this.utils.forEach(fieldsTypes, function (i) {\n                var $field = $('<li/>', {\n                    'id': 'amcustomform-type-' + fieldsTypes[i].type,\n                    'type': fieldsTypes[i].type,\n                    'text': fieldsTypes[i].title,\n                    'class': 'amcform-tab'\n                }).appendTo(typesWrap);\n\n                $field.on('click', function () {\n                    $('.amelement-container').hide();\n                    $('.amcustomform-element-tabs li').removeClass('active');\n                    $(this).addClass('active');\n                    var type = $(this).attr('type');\n                    $('.amelement-container[parenttype=\"' + type + '\"]').fadeIn();\n                });\n            });\n\n            controlbWrap.append(typesWrap);\n            controlbWrap.append($cbUL[0]);\n\n            if (this.options.showActionButtons) {\n                // Build our headers and action links\n                var viewDataText = this.options.dataType === 'xml' ? this.options.messages.viewXML : this.options.messages.viewJSON,\n\n                    clearAll = this.utils.markup('button', this.options.messages.clearAll, {\n                        id: formbId + '-clear-all',\n                        type: 'button',\n                        className: 'clear-all btn btn-default'\n                    });\n                var formActions = this.utils.markup('div', [clearAll], {\n                    className: 'form-actions btn-group'\n                });\n\n                controlbWrap.append(formActions);\n            }\n\n            this.stageWrap.append($(this.element).find('[data-amcform-js=\"title-edit\"]'));\n            this.stageWrap.append(this.sortableFields, controlbWrap);\n            this.stageWrap.before($formWrap);\n            $formWrap.append(this.stageWrap, controlbWrap);\n            $(this.element).append($formWrap);\n        },\n\n        generateSortable: function (formbId, $cbUL) {\n            // Sortable fields\n            this.sortableFields = $('<ul/>').attr('id', formbId).addClass('frmb');\n            this.sortableFields.sortable({\n                cursor: 'move',\n                opacity: 0.9,\n                revert: 150,\n                beforeStop: this.helpers.beforeStop,\n                start: this.helpers.startMoving,\n                stop: this.helpers.stopMoving,\n                cancel: 'input, select, .disabled, .form-group, .btn',\n                placeholder: 'frmb-placeholder'\n            });\n\n            // ControlBox with different fields\n            var self = this;\n            $cbUL.sortable({\n                helper: 'clone',\n                opacity: 0.9,\n                connectWith: this.sortableFields,\n                cancel: '.fb-separator',\n                cursor: 'move',\n                scroll: false,\n                placeholder: 'ui-state-highlight',\n                start: this.helpers.startMoving,\n                stop: this.helpers.stopMoving,\n                revert: 150,\n                beforeStop: this.helpers.beforeStop,\n                distance: 3,\n                update: this.helpers.update\n            });\n        },\n\n        generateFormFields: function (frmbFields, $cbUL) {\n            var self = this;\n            this.utils.forEach(frmbFields, function (i) {\n                var $field = $('<li/>', {\n                    'class': 'amelement-container icon-' + frmbFields[i].attrs.className,\n                    'type': frmbFields[i].attrs.type,\n                    'parentType': frmbFields[i].attrs.parentType,\n                    'name': frmbFields[i].className,\n                    'label': frmbFields[i].attrs.label\n                });\n\n                var $title = $('<div/>', {\n                    'class': 'amelement-title',\n                    'html': frmbFields[i].label\n                }).appendTo($field);\n\n                var $contentContainer = $('<div/>', {\n                    'class': 'amelement-content',\n                    'html': frmbFields[i].content\n                }).appendTo($field);\n\n                $field.data('newFieldData', frmbFields[i]);\n\n                $field.appendTo($cbUL);\n\n                if (frmbFields[i].attrs.type == 'date') {\n                    self.helpers.updateDateField($field, frmbFields[i].attrs.format);\n                }\n            });\n        },\n\n        saveAndUpdate: function () {\n            var self = this;\n            return this.helpers.debounce(function (evt) {\n                if (evt) {\n                    if (evt.type === 'keyup' && this.name === 'className') {\n                        return false;\n                    }\n                }\n\n                var $field = $(this).parents('.form-field:eq(0)');\n                self.helpers.updatePreview($field);\n                self.helpers.save();\n            });\n        },\n\n        processControl: function (control) {\n            if (control[0].classList.contains('input-set-control')) {\n                var inputSet = this.options.inputSets.filter(function (set) {\n                    return set.name === control[0].type;\n                })[0];\n                if (inputSet.showHeader) {\n                    var header = {\n                        type: 'header',\n                        subtype: 'h2',\n                        id: inputSet.name,\n                        label: inputSet.label\n                    };\n                    this.prepFieldVars(header, true);\n                }\n                inputSet.fields.forEach(function (field) {\n                    //TODO Check this\n                    this.prepFieldVars(field, true);\n                }).bind(this);\n            } else {\n                this.prepFieldVars(control, true);\n            }\n        },\n\n        prepFieldVars: function ($field) {\n            var isNew = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false,\n                self = this;\n\n            var field = {};\n            if ($field instanceof jQuery) {\n                var fieldData = $field.data('newFieldData');\n                if (fieldData) {\n                    field = fieldData.attrs;\n                    field.label = fieldData.label;\n                    field.options = fieldData.options;\n                    if (fieldData.childs) {\n                        $(fieldData.childs).each(function (i, child) {\n                            var element = $('.amelement-container[type=\"' + child.type + '\"]');\n                            if (element) {\n                                var childData = element.data('newFieldData');\n                                if (childData) {\n                                    var childField = childData.attrs;\n                                    childField.label = childData.label;\n                                    childField.options = childData.options;\n                                    childField = Object.assign(childField, child.data);\n                                    self.prepFieldVars(childField, true);\n                                }\n                            }\n                        });\n                        return;\n                    }\n                } else {\n                    var attrs = $field[0].attributes;\n                    if (!isNew) {\n                        field.values = $field.children().map(function (index, elem) {\n                            return {\n                                label: $(elem).text(),\n                                value: $(elem).attr('value'),\n                                selected: Boolean($(elem).attr('selected'))\n                            };\n                        });\n                    }\n\n                    for (var i = attrs.length - 1; i >= 0; i--) {\n                        field[attrs[i].name] = attrs[i].value;\n                    }\n                }\n            } else {\n                field = Object.assign({}, $field);\n            }\n\n            field.name = isNew ? this.nameAttr(field) : field.name || this.nameAttr(field);\n\n            switch (field.type) {\n                case 'country' :\n                    field.type = 'dropdown';\n                    break;\n            }\n\n            if (isNew && this.utils.inArray(\n                field.type,\n                ['textinput', 'number', 'file', 'dropdown', 'listbox', 'textarea']\n            )\n            ) {\n                field.className = 'form-control'; // backwards compatibility\n            } else {\n                field.className = field.class || field.className; // backwards compatibility\n            }\n\n            var match = /(?:^|\\s)btn-(.*?)(?:\\s|$)/g.exec(field.className);\n            if (match) {\n                field.style = match[1];\n            }\n\n            this.utils.escapeAttrs(field);\n\n            this.appendNewField(field);\n            if (isNew) {\n                document.dispatchEvent(this.events.fieldAdded);\n            }\n            this.stageWrap.removeClass('empty');\n        },\n\n        appendNewField: function (values) {\n            var self = this,\n                type = values.type || 'text',\n                label = values.label\n                    || this.options.messages[type]\n                    || (values.type === 'wysiwyg' ? $.mage.__('Wysiwyg') : this.options.messages.label),\n                delBtn = this.utils.markup('a', this.options.messages.remove, {\n                    id: 'del_' + this.lastID,\n                    className: 'del-button btn delete-confirm',\n                    title: this.options.messages.removeMessage\n                }),\n                toggleBtn = this.utils.markup('a', null, {\n                    id: this.lastID + '-edit',\n                    className: 'toggle-form btn icon-pencil',\n                    title: this.options.messages.hide\n                }),\n                copyBtn = this.utils.markup('a', this.options.messages.copyButton, {\n                    id: this.lastID + '-copy',\n                    className: 'copy-button btn icon-copy',\n                    title: this.options.messages.copyButtonTooltip\n                }),\n                liContents = this.utils.markup(\n                    'div',\n                    [toggleBtn, copyBtn, delBtn],\n                    { className: 'field-actions' }\n                ).outerHTML;\n\n            // Field preview Label\n            if (['hone', 'text', 'htwo', 'hthree'].indexOf(type) != -1) {\n                label = ''; //do not show label for text elements\n            }\n            liContents += '<label class=\"field-label\">' + label + '</label>';\n            var requiredDisplay = values.required ? 'style=\"display:inline\"' : '';\n            liContents += '<span class=\"required-asterisk\" ' + requiredDisplay + '> *</span>';\n            liContents += this.utils.markup('a', 'x', {className: 'close-field top-close-field'}).outerHTML;\n            if (values.description) {\n                liContents += '<span class=\"tooltip-element\" tooltip=\"' + values.description + '\">?</span>';\n            }\n\n            liContents = '<div class=\"field-label-container\">' + liContents + '</div>';\n\n            liContents += this.utils.markup('div', '', {className: 'prev-holder'}).outerHTML;\n            liContents += '<div id=\"' + this.lastID + '-holder\" class=\"frm-holder\">';\n            liContents += '<div class=\"form-elements\">';\n\n            liContents += this.advFields(values);\n            liContents += this.utils.markup('a', this.options.messages.close, {className: 'close-field'}).outerHTML;\n\n            liContents += '</div>';\n            liContents += '</div>';\n\n            var field = this.utils.markup('li', liContents, {\n                    'class': type + '-field form-field',\n                    'type': type,\n                    id: this.lastID\n                }),\n                $li = $(field);\n\n            $li.data('fieldData', {attrs: values});\n            if (typeof this.helpers.stopIndex !== 'undefined') {\n                $('> li', this.sortableFields).eq(this.helpers.stopIndex).before($li);\n            } else {\n                this.sortableFields.append($li);\n            }\n\n            $('.sortable-options', $li).sortable({\n                update: function update() {\n                    self.helpers.updatePreview($li);\n                }\n            }); // make dynamically added option fields sortable if they exist.\n\n            if (values.type == 'date') {\n                $li.attr('date-format', this.options.format);\n            }\n            this.helpers.updatePreview($li);\n\n            if (this.options.editOnAdd) {\n                this.helpers.closeAllEdit(this.sortableFields);\n                this.helpers.toggleEdit(this.lastID);\n            }\n\n            if (this.options.typeUserEvents[type] && this.options.typeUserEvents[type].onadd) {\n                this.options.typeUserEvents[type].onadd(field);\n            }\n\n            this.lastID = this.helpers.incrementId(this.lastID);\n            this.addCollapseDefaultValueVariables(field);\n            this.addValidateObserve($li);\n        },\n\n        // Add append and prepend options if necessary\n        nonEditableFields: function () {\n            var cancelArray = [];\n\n            if (this.options.prepend && !$('.disabled.prepend', this.sortableFields).length) {\n                var prependedField = this.utils.markup('li', this.options.prepend, {className: 'disabled prepend'});\n                cancelArray.push(true);\n                this.sortableFields.prepend(prependedField);\n            }\n\n            if (this.options.append && !$('.disabled.append', this.sortableFields).length) {\n                var appendedField = this.utils.markup('li', this.options.append, {className: 'disabled append'});\n                cancelArray.push(true);\n                this.sortableFields.append(appendedField);\n            }\n\n            if (cancelArray.some(function (elem) {\n                return elem === true;\n            })) {\n                this.stageWrap.removeClass('empty');\n            }\n        },\n\n        // Parse saved XML template data\n        loadFields: function () {\n            var self = this;\n            var formData = this.formData;\n            if (formData && formData.length) {\n                for (var i = 0; i < formData.length; i++) {\n                    this.prepFieldVars(formData[i]);\n                }\n                this.stageWrap.removeClass('empty');\n            } else if (this.options.defaultFields && this.options.defaultFields.length) {\n                // Load default fields if none are set\n                this.options.defaultFields.forEach(function (field) {\n                    return self.prepFieldVars(field);\n                });\n                this.stageWrap.removeClass('empty');\n            } else if (!this.options.prepend && !this.options.append) {\n                this.stageWrap.addClass('empty').attr('data-content', this.options.messages.getStarted);\n            }\n            this.helpers.save();\n\n            $('li.form-field:not(.disabled)', this.sortableFields).each(function () {\n                self.helpers.updatePreview($(this));\n            });\n\n            this.nonEditableFields();\n        },\n\n        nameAttr: function (field) {\n            var epoch = new Date().getTime();\n            return field.type + '-' + epoch;\n        },\n\n        /**\n         * Add data for field with options [select, checkbox-group, radio-group]\n         *\n         * @todo   refactor this nasty ~crap~ code, its actually painful to look at\n         * @param  {object} values\n         */\n        fieldOptions: function (values) {\n            var self = this;\n            var optionActions = [this.utils.markup('a', this.options.messages.addOption, {className: 'add add-opt'})],\n                fieldOptions = ['<label class=\"false-label\">' + this.options.messages.selectOptions + '</label>'],\n                isMultiple = values.multiple || values.type.match(/(listbox|checkbox|checkboxtwo|checkbox-group)/);\n\n            if (!values.values || !values.values.length) {\n                var counter = [1, 2, 3],\n                    optionLabel = self.options.messages.option;\n\n                if (values.type === 'rating') {\n                    counter = [1, 2, 3, 4, 5];\n                    optionLabel = self.options.messages.star;\n                }\n\n                if (values.options) {\n                    values.values = values.options;\n                } else {\n                    values.values = counter.map(function (index) {\n                        var label = optionLabel + ' ' + index,\n                            option = {\n                                selected: false,\n                                label: label,\n                                value: self.utils.hyphenCase(label)\n                            };\n                        return option;\n                    });\n                }\n\n                values.values[0].selected = true;\n            }\n\n            fieldOptions.push('<div class=\"sortable-options-wrap\">');\n\n            fieldOptions.push('<ol class=\"sortable-options\">');\n\n            var emptyFieldSelected = ' checked=\"true\"',\n                valuesOptions = [];\n            this.utils.forEach(values.values, function (i) {\n                if (values.values[i].selected) {\n                    emptyFieldSelected = '';\n                }\n                valuesOptions.push(self.selectFieldOptions(values.name, values.values[i], isMultiple));\n            });\n\n            fieldOptions = fieldOptions.concat(valuesOptions);\n\n            fieldOptions.push('</ol>');\n            fieldOptions.push(this.utils.markup('div', optionActions, {className: 'option-actions'}).outerHTML);\n            fieldOptions.push('</div>');\n\n            return this.utils.markup('div', fieldOptions.join(''), {className: 'form-group field-options'}).outerHTML;\n        },\n\n        /**\n         * Build the editable properties for the field\n         * @param  {object} values configuration object for advanced fields\n         * @return {String}        markup for advanced fields\n         */\n        advFields: function (values) {\n            var advFields = [],\n                optionFields = ['dropdown', 'listbox', 'checkbox', 'radio', 'checkboxtwo', 'radiotwo', 'rating', 'country'],\n                isOptionField = function () {\n                    return optionFields.indexOf(values.type) !== -1;\n                }(),\n                valueField = !this.utils.inArray(values.type, ['header', 'paragraph', 'file'].concat(optionFields));\n\n            advFields.push(this.textAttribute('name', values));\n            advFields.push(this.hiddenAttribute('entity_id', values));\n\n            if (values.type !== 'wysiwyg') {\n                advFields.push(this.textAttribute('label', values));\n            } else {\n                advFields.push(this.hiddenAttribute('value', values));\n            }\n\n            // Class\n            advFields.push(this.textAttribute('className', values));\n            advFields.push(this.textAttribute('style', values));\n\n            if (values.parentType !== 'other' || isOptionField) {\n\n                advFields.push(this.textAttribute('placeholder', values));\n                advFields.push(this.requiredField(values));\n                advFields.push(this.textAttribute('description', values));\n\n                if (values.type === 'checkbox' || values.type === 'checkboxtwo') {\n                    advFields.push(this.boolAttribute('toggle', values, {first: this.options.messages.toggle}));\n                }\n\n                values.size = values.size || 'm';\n                values.style = values.style || 'default';\n\n                //Help Text / Description Field\n                /* if (!this.utils.inArray(values.type, ['header', 'paragraph', 'button'])) {\n\n                 }*/\n\n                if (this.options.messages.subtypes[values.type]) {\n                    var optionData = this.options.messages.subtypes[values.type];\n                    advFields.push(this.selectAttribute('subtype', values, optionData));\n                }\n\n                if (values.type === 'number') {\n                    advFields.push(this.numberAttribute('min', values));\n                    advFields.push(this.numberAttribute('max', values));\n                    advFields.push(this.numberAttribute('step', values));\n                }\n\n                if (values.type === 'textinput') {\n                    advFields.push(this.selectAttribute('validation', values, this.options.messages.validations));\n                    advFields.push(this.textAttribute('regexp', values));\n                    advFields.push(this.textAttribute('errorMessage', values));\n                }\n\n                if (values.type === 'date') {\n                    values.validation = 'validate-date';\n                    advFields.push(this.hiddenAttribute('validation', values));\n                }\n\n                //TextArea Rows Attribute\n                if (values.type === 'textarea') {\n                    advFields.push(this.numberAttribute('rows', values));\n                }\n\n                if (valueField && values.type != 'googlemap') {\n                    advFields.push(this.textAttribute('value', values));\n                } else if (values.type == 'googlemap') {\n                    advFields.push(this.hiddenAttribute('value', values));\n                }\n\n                if (values.type === 'file') {\n                    advFields.push(this.textAttribute('allowed_extension', values));\n                    advFields.push(this.textAttribute('max_file_size', values));\n\n                    var labels = {\n                        first: this.options.messages.multipleFiles,\n                        second: this.options.messages.allowMultipleFiles\n                    };\n                    advFields.push(this.boolAttribute('multiple', values, labels));\n                }\n                /* other feature for future\n                if (values.type === 'checkbox' || values.type === 'radio') {\n                    advFields.push(this.boolAttribute('other', values, {\n                        first: this.options.messages.enableOther,\n                        second: this.options.messages.enableOtherMsg\n                    }));\n                }*/\n\n                if (isOptionField) {\n                    advFields.push(this.fieldOptions(values));\n                }\n\n                if (this.utils.inArray(values.type, ['textinput', 'textarea'])) {\n                    advFields.push(this.numberAttribute('maxlength', values));\n                }\n\n                // Append custom attributes as defined in typeUserAttrs option\n                if (this.options.typeUserAttrs[values.type]) {\n                    advFields.push(this.processTypeUserAttrs(this.options.typeUserAttrs[values.type], values));\n                }\n            }\n            var dependency = [];\n            if (values.dependency) {\n                dependency = values.dependency;\n            }\n            advFields.push(this.fieldDependencyArea(dependency, values.name));\n\n            advFields.push(this.selectAttribute('layout', values, this.options.messages.layouts));\n\n            advFields.push(this.hiddenAttribute('parentType', values));\n\n            return advFields.join('');\n        },\n\n\n        processTypeUserAttrs: function (typeUserAttr, values) {\n            var advField = [];\n\n            for (var attribute in typeUserAttr) {\n                if (typeUserAttr.hasOwnProperty(attribute)) {\n                    var orig = this.options.messages[attribute];\n                    var origValue = typeUserAttr[attribute].value;\n                    typeUserAttr[attribute].value = values[attribute] || typeUserAttr[attribute].value || '';\n\n                    if (typeUserAttr[attribute].label) {\n                        this.options.messages[attribute] = typeUserAttr[attribute].label;\n                    }\n\n                    if (typeUserAttr[attribute].options) {\n                        advField.push(selectUserAttrs(attribute, typeUserAttr[attribute]));\n                    } else {\n                        advField.push(inputUserAttrs(attribute, typeUserAttr[attribute]));\n                    }\n\n                    this.options.messages[attribute] = orig;\n                    typeUserAttr[attribute].value = origValue;\n                }\n            }\n\n            return advField.join('');\n        },\n\n        inputUserAttrs: function (name, attrs) {\n            var textAttrs = {\n                    id: name + '-' + this.lastID,\n                    title: attrs.description || attrs.label || name.toUpperCase(),\n                    name: name,\n                    type: attrs.type || 'text',\n                    className: ['fld-' + name]\n                },\n                label = '<label for=\"' + textAttrs.id + '\">' + this.options.messages[name] + '</label>';\n\n            if (!this.utils.inArray(textAttrs.type, ['checkbox', 'radio', 'checkboxtwo', 'radiotwo'])) {\n                textAttrs.className.push('form-control');\n            }\n\n            if (attrs.type === 'datetime') {\n                attrs.type = 'datetime-local';\n            }\n\n            textAttrs = Object.assign({}, attrs, textAttrs);\n            var textInput = '<input ' + this.utils.attrString(textAttrs) + '>',\n                inputWrap = '<div class=\"input-wrap\">' + textInput + '</div>';\n\n            return '<div class=\"form-group ' + name + '-wrap\">' + label + inputWrap + '</div>';\n        },\n\n        selectUserAttrs: function (name, options) {\n            var optis = Object.keys(options.options).map(function (val) {\n                    var attrs = {value: val};\n                    if (val === options.value) {\n                        attrs.selected = null;\n                    }\n                    return '<option ' + this.utils.attrString(attrs) + '>' + options.options[val] + '</option>';\n                }),\n                selectAttrs = {\n                    id: name + '-' + this.lastID,\n                    title: options.description || options.label || name.toUpperCase(),\n                    name: name,\n                    className: 'fld-' + name + ' form-control'\n                },\n                label = '<label for=\"' + selectAttrs.id + '\">' + this.options.messages[name] + '</label>';\n\n            Object.keys(options).filter(function (prop) {\n                return !utils.inArray(prop, ['value', 'options', 'label']);\n            }).forEach(function (attr) {\n                selectAttrs[attr] = options[attr];\n            });\n\n            var select = '<select ' + this.utils.attrString(selectAttrs) + '>' + optis.join('') + '</select>',\n                inputWrap = '<div class=\"input-wrap\">' + select + '</div>';\n            return '<div class=\"form-group ' + name + '-wrap\">' + label + inputWrap + '</div>';\n        },\n\n        boolAttribute: function (name, values, labels) {\n            if (this.options.typeUserAttrs[values.type] && this.options.typeUserAttrs[values.type][name]) {\n                return;\n            }\n\n            var checked = values[name] !== undefined ? 'checked' : '',\n                input = '<input type=\"checkbox\" class=\"fld-' + name + '\" name=\"' + name + '\" value=\"true\" ' + checked + ' id=\"' + name + '-' + this.lastID + '\"/> ',\n                left = [],\n                right = [input];\n\n            if (labels.first) {\n                left.unshift(this.label(labels.first));\n            }\n\n            if (labels.second) {\n                right.push(this.label(labels.second));\n            }\n\n            if (labels.content) {\n                right.push(labels.content);\n            }\n\n            right.unshift('<div class=\"input-wrap\">');\n            right.push('</div>');\n\n            return '<div class=\"form-group ' + name + '-wrap\">' + left.concat(right).join('') + '</div>';\n        },\n\n        label: function (txt) {\n            return '<label for=\"' + name + '-' + this.lastID + '\">' + txt + '</label>';\n        },\n\n        btnStyles: function (style, type) {\n            var tags = {\n                    button: 'btn'\n                },\n                styles = this.options.messages.styles[tags[type]],\n                styleField = '';\n\n            if (styles) {\n                var styleLabel = '<label>' + this.options.messages.style + '</label>';\n                styleField += '<input value=\"' + style + '\" name=\"style\" type=\"hidden\" class=\"btn-style\">';\n                styleField += '<div class=\"btn-group\" role=\"group\">';\n\n                Object.keys(this.options.messages.styles[tags[type]]).forEach(function (element) {\n                    var active = style === element ? 'active' : '';\n                    styleField += '<button value=\"' + element + '\" type=\"' + type + '\" class=\"' + active + ' btn-xs ' + tags[type] + ' ' + tags[type] + '-' + element + '\">' + this.options.messages.styles[tags[type]][element] + '</button>';\n                });\n\n                styleField += '</div>';\n\n                styleField = '<div class=\"form-group style-wrap\">' + styleLabel + ' ' + styleField + '</div>';\n            }\n\n            return styleField;\n        },\n\n        /**\n         * Add a number attribute to a field.\n         * @param  {String} attribute\n         * @param  {Object} values\n         * @return {String}\n         */\n        numberAttribute: function (attribute, values) {\n            if (this.options.typeUserAttrs[values.type] && this.options.typeUserAttrs[values.type][attribute]) {\n                return '';\n            }\n\n            var attrVal = values[attribute],\n                attrLabel = this.options.messages[attribute] || attribute,\n                placeholder = this.options.messages.placeholders[attribute],\n                inputConfig = {\n                    type: 'number',\n                    value: attrVal,\n                    name: attribute,\n                    min: '0',\n                    placeholder: placeholder,\n                    className: 'fld-' + attribute + ' form-control',\n                    id: attribute + '-' + this.lastID\n                },\n                numberAttribute = '<input ' + this.utils.attrString(this.utils.trimObj(inputConfig)) + '>',\n                inputWrap = '<div class=\"input-wrap\">' + numberAttribute + '</div>';\n\n            return '<div class=\"form-group ' + attribute + '-wrap\"><label for=\"' + inputConfig.id + '\">'\n                + attrLabel + '</label> ' + inputWrap + '</div>';\n\n        },\n\n        selectAttribute: function (attribute, values, optionData) {\n            if (this.options.typeUserAttrs[values.type] && this.options.typeUserAttrs[values.type][attribute]) {\n                return;\n            }\n            var self = this,\n                allowedTypes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            var selectOptions = optionData.map(function (option, i) {\n                    if (allowedTypes && allowedTypes.indexOf(option.type) === -1) {\n                        return false;\n                    }\n                    var optionAttrs = Object.assign({\n                        label: self.options.messages.option + ' ' + i,\n                        value: undefined\n                    }, option);\n\n                    if (values[attribute] != undefined) {\n                        try {\n                            var validationJson = JSON.parse(values[attribute].replace(/&quot;/g, '\"'));\n                        } catch (ex) {\n                            validationJson = {validation: values[attribute]};\n                        }\n\n                        if (validationJson.hasOwnProperty(\"validation\") && (option.value === validationJson.validation)) {\n                            optionAttrs.selected = true;\n                        }\n                    }\n\n                    return '<option ' + self.utils.attrString(self.utils.trimObj(optionAttrs)) + '>'\n                        + optionAttrs.label + '</option>';\n                }),\n                selectAttrs = {\n                    id: attribute + '-' + this.lastID,\n                    name: attribute,\n                    value: attribute,\n                    className: 'fld-' + attribute + ' form-control'\n                },\n\n                label = '<label for=\"' + selectAttrs.id + '\">' + (this.options.messages[attribute]\n                    || this.utils.capitalize(attribute)) + '</label>';\n\n\n            var select = '<select ' + this.utils.attrString(selectAttrs) + '>' + selectOptions.join('') + '</select>',\n                inputWrap = '<div class=\"input-wrap\">' + select + '</div>';\n\n            return '<div class=\"form-group ' + selectAttrs.name + '-wrap\">' + label + inputWrap + '</div>';\n        },\n\n        /**\n         * Generate some text inputs for field attributes, **will be replaced**\n         * @param  {String} attribute\n         * @param  {Object} values\n         * @return {String}\n         */\n        textAttribute: function (attribute, values) {\n            if (this.options.typeUserAttrs[values.type] && this.options.typeUserAttrs[values.type][attribute]) {\n                return '';\n            }\n\n            var textArea = ['paragraph'];\n\n            var attrVal = values[attribute] || '',\n                attrLabel = this.options.messages[attribute];\n            if (attribute === 'label' && this.utils.inArray(values.type, textArea)) {\n                attrLabel = this.options.messages.content;\n            }\n\n            var placeholderFields = ['textinput', 'textarea', 'dropdown'];\n            var placeholders = this.options.messages.placeholders,\n                placeholder = placeholders[attribute] || '',\n                attributefield = '',\n                noMakeAttr = [];\n            // Field has placeholder attribute\n            if (attribute === 'placeholder' && !this.utils.inArray(values.type, placeholderFields)) {\n                noMakeAttr.push(true);\n            }\n\n            if (!noMakeAttr.some(function (elem) {\n                return elem === true;\n            })) {\n                var inputConfig = {\n                    name: attribute,\n                    placeholder: placeholder,\n                    className: 'fld-' + attribute + ' form-control',\n                    id: attribute + '-' + this.lastID\n                };\n                var attributeLabel = '<label for=\"' + inputConfig.id + '\">' + attrLabel + '</label>';\n\n                if (attribute === 'label' && this.utils.inArray(values.type, textArea)\n                    || attribute === 'value' && values.type === 'textarea') {\n                    attributefield += '<textarea ' + this.utils.attrString(inputConfig) + '>' + attrVal + '</textarea>';\n                } else if (attribute === 'value' && values.type === 'date') {\n                    inputConfig.value = attrVal;\n                    inputConfig.type = 'date';\n                    attributefield += '<input ' + this.utils.attrString(inputConfig) + '>';\n                } else {\n                    inputConfig.value = attrVal;\n                    inputConfig.type = 'text';\n                    attributefield += '<input ' + this.utils.attrString(inputConfig) + '>';\n                }\n                var note = this.getNote(attribute, values),\n                    inputWrap = '<div class=\"input-wrap\">' + attributefield + note +'</div>';\n\n                attributefield = '<div class=\"form-group ' + attribute + '-wrap\">' + attributeLabel + ' ' + inputWrap + '</div>';\n            }\n\n            return attributefield;\n        },\n\n        getNote: function (attribute, values) {\n            var allowTypes = ['textinput', 'textarea', 'number'],\n                note = '';\n\n            if (attribute === 'value' && allowTypes.includes(values.type)) {\n                $.each(this.options.messages['notes'][attribute], function (index, noteData) {\n                    var variables = '',\n                        noteVariant ='';\n\n                    if (typeof values.entityType === 'undefined' || values.entityType === noteData.allowedEntityType) {\n                        noteVariant = '<a class=\"default-values-link\" href=\"#\">'\n                            + noteData['label']\n                            + '</a>';\n\n                        noteData.values.forEach(function (value) {\n                            variables += '<div class=\"variable\">' + value + '</div>'\n                        });\n                        noteVariant += '<div class=\"default-value-variants\">' + variables + '</div>';\n                        note += '<div class=\"value-note-wrap\">' + noteVariant + '</div>';\n                    }\n                });\n            }\n\n            return note;\n        },\n\n        hiddenAttribute: function (attribute, values) {\n            var attrValue = values[attribute] || '',\n                attributeField = '<input class=\"fld-' + attribute + ' form-control\" type=\"hidden\" name=\"'\n                    + attribute + '\" value=\"' + attrValue + '\">';\n\n            return attributeField;\n        },\n\n        requiredField: function (values) {\n            var noRequire = ['header', 'paragraph', 'button'],\n                noMake = [],\n                requireField = '';\n\n            if (this.utils.inArray(values.type, noRequire)) {\n                noMake.push(true);\n            }\n            if (!noMake.some(function (elem) {\n                return elem === true;\n            })) {\n                requireField = this.boolAttribute('required', values, {first: this.options.messages.required});\n            }\n\n            return requireField;\n        },\n\n        // Select field html, since there may be multiple\n        selectFieldOptions: function (name, optionData, multipleSelect) {\n            var optionInputType = {\n                    selected: multipleSelect ? 'checkbox' : 'radio'\n                },\n                optionDataOrder = ['value', 'label', 'selected'],\n                optionInputs = [];\n\n            optionData = Object.assign({selected: false, label: '', value: ''}, optionData);\n\n            for (var i = optionDataOrder.length - 1; i >= 0; i--) {\n                var prop = optionDataOrder[i];\n                if (optionData.hasOwnProperty(prop)) {\n                    var attrs = {\n                        type: optionInputType[prop] || 'text',\n                        'class': 'option-' + prop,\n                        value: optionData[prop],\n                        name: name + '-option'\n                    };\n\n                    if (this.options.messages.placeholders[prop]) {\n                        attrs.placeholder = this.options.messages.placeholders[prop];\n                    }\n\n                    if (prop === 'selected'\n                        && (optionData.selected === \"1\" || optionData.selected === true)\n                    ) {\n                        attrs.checked = optionData.selected;\n                    }\n\n                    optionInputs.push(this.utils.markup('input', null, attrs));\n                }\n            }\n\n            var removeAttrs = {\n                className: 'remove btn',\n                title: this.options.messages.removeMessage\n            };\n\n            optionInputs.push(this.utils.markup('a', this.options.messages.remove, removeAttrs));\n            var field = this.utils.markup('li', optionInputs);\n\n            return field.outerHTML;\n        },\n\n\n        cloneItem: function (currentItem) {\n            var self = this;\n            var currentId = currentItem.attr('id'),\n                type = currentItem.attr('type'),\n                ts = new Date().getTime(),\n                cloneName = type + '-' + ts;\n\n            var $clone = currentItem.clone();\n\n            $clone.find('[id]').each(function () {\n                this.id = this.id.replace(currentId, self.lastID);\n            });\n\n            $clone.find('[for]').each(function () {\n                this.setAttribute('for', this.getAttribute('for').replace(currentId, self.lastID));\n            });\n\n            $clone.each(function () {\n                $('e:not(.form-elements)').each(function () {\n                    var newName = this.getAttribute('name');\n                    newName = newName.substring(0, newName.lastIndexOf('-') + 1);\n                    newName = newName + ts.toString();\n                    this.setAttribute('name', newName);\n                });\n            });\n\n            $clone.find('.form-elements').find(':input').each(function () {\n                if (this.getAttribute('name') === 'name') {\n                    var newVal = this.getAttribute('value');\n                    newVal = newVal.substring(0, newVal.lastIndexOf('-') + 1);\n                    newVal = newVal + ts.toString();\n                    this.setAttribute('value', newVal);\n                }\n            });\n\n            $clone.attr('id', this.lastID);\n            $clone.attr('name', cloneName);\n            $clone.addClass('cloned');\n            $('.sortable-options', $clone).sortable();\n\n            if (this.options.typeUserEvents[type] && this.options.typeUserEvents[type].onclone) {\n                this.options.typeUserEvents[type].onclone($clone[0]);\n            }\n\n            this.lastID = this.helpers.incrementId(this.lastID);\n            return $clone;\n        },\n\n        observeFields: function ($cbUL, formbId) {\n            var self = this;\n            // Save field on change\n            this.sortableFields.on(\n                'change blur keyup click', '.form-elements input, .form-elements select, .form-elements textarea, .toggle-form',\n                self.saveAndUpdate()\n            );\n\n            $('li', $cbUL).click(function (e) {\n                self.helpers.stopIndex = undefined;\n                self.processControl($(this));\n                self.helpers.save();\n                e.preventDefault();\n            });\n\n            // callback to track disabled tooltips\n            this.sortableFields.on('mousemove', 'li.disabled', function (e) {\n                $('.frmb-tt', this).css({\n                    left: e.offsetX - 16,\n                    top: e.offsetY - 34\n                });\n            });\n\n            // callback to call disabled tooltips\n            this.sortableFields.on('mouseenter', 'li.disabled', function () {\n                self.helpers.disabledTT.add($(this));\n            });\n\n            // callback to call disabled tooltips\n            this.sortableFields.on('mouseleave', 'li.disabled', function () {\n                self.helpers.disabledTT.remove($(this));\n            });\n\n            // ---------------------- UTILITIES ---------------------- //\n            // delete options\n            this.sortableFields.on('click touchstart', '.remove', function (e) {\n                var $field = $(this).parents('.form-field:eq(0)');\n                e.preventDefault();\n                var optionsCount = $(this).parents('.sortable-options:eq(0)').children('li').length;\n                if (optionsCount <= 0) {\n                    self.options.notify.error('Error: ' + self.options.messages.minOptionMessage);\n                } else {\n                    $(this).parent('li').slideUp('250', function () {\n                        $(this).remove();\n                        self.helpers.updatePreview($field);\n                        self.helpers.save();\n                    });\n                }\n            });\n\n            // touch focus\n            this.sortableFields.on('touchstart', 'input', function (e) {\n                if (e.handled !== true) {\n                    if ($(this).attr('type') === 'checkbox') {\n                        $(this).trigger('click');\n                    } else {\n                        $(this).focus();\n                        var fieldVal = $(this).val();\n                        $(this).val(fieldVal);\n                    }\n                } else {\n                    return false;\n                }\n            });\n\n            // toggle fields\n            this.sortableFields.on('click touchstart', '.toggle-form, .close-field', function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n                if (e.handled !== true) {\n                    var targetID = $(this).parents('.form-field:eq(0)').attr('id');\n                    self.helpers.toggleEdit(targetID);\n                    e.handled = true;\n                } else {\n                    return false;\n                }\n            });\n\n            this.sortableFields.on('change', '.prev-holder input, .prev-holder select', function (e) {\n                if (e.target.classList.contains('other-option') || $(e.target).attr('type') == 'googlemap') {\n                    return;\n                }\n                var field = $(e.target).closest('li.form-field')[0];\n                if (self.utils.inArray(field.type, ['checkbox', 'checkboxtwo'])) {\n                    field.querySelector('[class=\"option-value\"][value=\"' + e.target.value + '\"]')\n                        .parentElement.childNodes[0].checked = field\n                        .querySelector('.prev-holder input[value=\"' + e.target.value + '\"]').checked;\n                } else if (self.utils.inArray(field.type, ['listbox'])) {\n                    $(field).find('[class=\"option-selected\"]').attr('checked', false);\n                    $.each($(field).find('.prev-holder select').val(), function (key, value) {\n                        field.querySelector('[class=\"option-value\"][value=\"' + value + '\"]')\n                            .parentElement.childNodes[0].checked = true;\n                    });\n                } else if (self.utils.inArray(field.type, ['dropdown', 'rating', 'radio', 'radiotwo'])) {\n                    field.querySelector('[class=\"option-value\"][value=\"' + e.target.value + '\"]')\n                        .parentElement.childNodes[0].checked = true;\n                } else {\n                    document.getElementById('value-' + field.id).value = e.target.value;\n                }\n\n                self.helpers.save();\n            });\n\n            // update preview to wysiwyg\n            this.sortableFields.on('change', '.prev-holder [type=wysiwyg]', _.debounce(function () {\n                self.helpers.save();\n            }, 1000));\n\n            // update preview to label\n            this.sortableFields.on('keyup change', '[name=\"label\"]', function () {\n                $('.field-label', $(this).closest('li:not(.hone-field):not(.text-field):not(.hthree-field):not(.htwo-field)')).text($(this).val());\n            });\n\n            // remove error styling when users tries to correct mistake\n            this.sortableFields.delegate('input.error', 'keyup', function () {\n                $(this).removeClass('error');\n            });\n\n            // update preview for description\n            this.sortableFields.on('keyup', 'input[name=\"description\"]', function () {\n                var $field = $(this).parents('.form-field:eq(0)');\n                var closestToolTip = $('.tooltip-element', $field);\n                var ttVal = $(this).val();\n                if (ttVal !== '') {\n                    if (!closestToolTip.length) {\n                        var tt = '<span class=\"tooltip-element\" tooltip=\"' + ttVal + '\">?</span>';\n                        $('.field-label', $field).after(tt);\n                    } else {\n                        closestToolTip.attr('tooltip', ttVal).css('display', 'inline-block');\n                    }\n                } else {\n                    if (closestToolTip.length) {\n                        closestToolTip.css('display', 'none');\n                    }\n                }\n            });\n\n            this.sortableFields.on('change', '.fld-multiple', function (e) {\n                var newType = e.target.checked ? 'checkbox' : 'radio';\n\n                $(e.target).parents('.form-elements:eq(0)')\n                    .find('.sortable-options input.option-selected').each(function () {\n                    this.type = newType;\n                });\n            });\n\n            // format name attribute\n            this.sortableFields.on('blur', 'input.fld-name', function () {\n                this.value = self.helpers.safename(this.value);\n                if (this.value === '') {\n                    $(this).addClass('field-error').attr('placeholder', self.options.messages.cannotBeEmpty);\n                } else {\n                    $(this).removeClass('field-error');\n                }\n            });\n\n            this.sortableFields.on('blur', 'input.fld-maxlength', function () {\n                this.value = self.helpers.forcenumber(this.value);\n            });\n\n            // Copy field\n            this.sortableFields.on('click touchstart', '.icon-copy', function (e) {\n                e.preventDefault();\n                var currentItem = $(this).parents('li');\n                var $clone = self.cloneItem(currentItem);\n                $clone.insertAfter(currentItem);\n                self.helpers.updatePreview($clone, currentItem);\n                self.helpers.save();\n            });\n\n            // Delete field\n            this.sortableFields.on('click touchstart', self.selectors.deleteButton, function (event) {\n                var buttonPosition = this.getBoundingClientRect(),\n                    bodyRect = document.body.getBoundingClientRect(),\n                    coords = {\n                        pageX: buttonPosition.left + buttonPosition.width / 2,\n                        pageY: buttonPosition.top - bodyRect.top - 12\n                    },\n                    deleteID = $(this).parents(self.selectors.fieldFirst).attr('id'),\n                    $field = $(document.getElementById(deleteID)),\n                    warnH3,\n                    warnMessage;\n\n                event.preventDefault();\n\n                self.removeWysiwygData(event.target);\n\n                document.addEventListener('modalClosed', function () {\n                    $field.removeClass(self.classes.delete);\n                }, false);\n\n                // Check if user is sure they want to remove the field\n                if (self.options.fieldRemoveWarn) {\n                    warnH3 = self.utils.markup('h3', self.options.messages.warning);\n                    warnMessage = self.utils.markup('p', self.options.messages.fieldRemoveWarning);\n\n                    self.helpers.confirm([warnH3, warnMessage], function () {\n                        return self.helpers.removeField(deleteID);\n                    }, coords);\n\n                    $field.addClass(self.classes.delete);\n                } else {\n                    self.helpers.removeField(deleteID);\n                }\n            });\n\n            // Update button style selection\n            this.sortableFields.on('click', '.style-wrap button', function () {\n                var styleVal = $(this).val(),\n                    $parent = $(this).parent(),\n                    $btnStyle = $parent.prev('.btn-style');\n                $btnStyle.val(styleVal);\n                $(this).siblings('.btn').removeClass('active');\n                $(this).addClass('active');\n                self.saveAndUpdate().call($parent);\n            });\n\n            // Attach a callback to toggle required asterisk\n            this.sortableFields.on('click', 'input.fld-required', function () {\n                var requiredAsterisk = $(this).parents('li.form-field').find('.required-asterisk');\n                requiredAsterisk.toggle();\n            });\n\n            // Attach a callback to add new options\n            this.sortableFields.on('click', '.add-opt', function (e) {\n                e.preventDefault();\n                var $optionWrap = $(this).parents('.field-options:eq(0)'),\n                    $multiple = $('[name=\"multiple\"]', $optionWrap),\n                    $firstOption = $('.option-selected:eq(0)', $optionWrap),\n                    isMultiple = $multiple.length ? $multiple.prop('checked') : $firstOption.attr('type') === 'checkbox',\n                    name = $firstOption.attr('name') || $optionWrap.attr('name'),\n                    sortOptions = $('.sortable-options', $optionWrap);\n\n                if (sortOptions.attr('dependent')) {\n                    sortOptions.append(self.createDependencyRow(false, false, false, name, false));\n                } else {\n                    sortOptions.append(self.selectFieldOptions(name, false, isMultiple));\n                }\n            });\n\n            this.sortableFields.on('mouseover mouseout', '.remove, .del-button', function () {\n                $(this).parents('li:eq(0)').toggleClass('delete');\n            });\n\n            this.sortableFields.on('change', '[name=\"dependency-field\"]', function (e) {\n                var fieldName = this.value,\n                    field = self.findField(fieldName),\n                    values = [],\n                    selects = $(this).parent('li').find('select');\n\n                if (field && field.values) {\n                    values = field.values;\n                    values = self.createDependencyRow(fieldName, '', values, false, true);\n                    $(this).find('[selected=\"selected\"]').removeAttr('selected');\n                    $(this).find('[value=\"' + $(this).val() + '\"]').attr('selected', true);\n                    if (selects.length > 1) {\n                        selects.last().replaceWith(values);\n                    } else {\n                        selects.last().after(values);\n                    }\n                } else {\n                    $(this).parent('li').find('select').last().remove();\n                }\n            });\n\n            if (self.options.showActionButtons) {\n                // View XML\n                var xmlButton = $(document.getElementById(formbId + '-view-data'));\n                xmlButton.click(function (e) {\n                    e.preventDefault();\n                    self.helpers.showData();\n                });\n\n                // Clear all fields in form editor\n                var clearButton = $(document.getElementById(formbId + '-clear-all'));\n                clearButton.click(function () {\n                    var fields = $('li.form-field');\n                    var buttonPosition = this.getBoundingClientRect(),\n                        bodyRect = document.body.getBoundingClientRect(),\n                        coords = {\n                            pageX: buttonPosition.left + buttonPosition.width / 2,\n                            pageY: buttonPosition.top - bodyRect.top - 12\n                        };\n\n                    if (fields.length) {\n                        self.helpers.confirm(self.options.messages.clearAllMessage, function () {\n                            self.helpers.removeAllfields();\n                            self.options.notify.success(self.options.messages.allFieldsRemoved);\n                            self.helpers.save();\n                        }, coords);\n                    } else {\n                        self.helpers.dialog('There are no fields to clear', {pageX: coords.pageX, pageY: coords.pageY});\n                    }\n                });\n            }\n        },\n\n        /**\n         * Remove cached wysiwyg content by wysiwyg name\n         *\n         * @param  {Object} target - DOM element, target of an event\n         * @returns {void}\n         */\n        removeWysiwygData: function (target) {\n            var selector = this.selectors.wysiwygContainer.replace('{id}', target.id.replace('del_', '')),\n                name = $(target).closest(selector).find(this.selectors.wysiwygField).attr('name');\n\n            if (name) {\n                this.helpers.removeWysiwygHtml(name);\n            }\n        },\n\n        fieldDependencyArea: function (values, name) {\n            var self = this,\n                optionActions = [this.utils.markup('a', this.options.messages.addOption, {className: 'add add-opt'})],\n                fieldOptions = ['<label class=\"false-label\">' + this.options.messages.dependencyTitle + '</label>'];\n\n            fieldOptions.push('<div class=\"sortable-options-wrap\">');\n\n            fieldOptions.push('<ol class=\"sortable-options\" dependent=\"true\">');\n\n            this.utils.forEach(values, function (i, dependency) {\n                fieldOptions.push(self.createDependencyRow(dependency.field, dependency.value, false, false, false));\n            });\n\n            fieldOptions.push('</ol>');\n            fieldOptions.push(this.utils.markup('div', optionActions, {className: 'option-actions'}).outerHTML);\n            fieldOptions.push('</div>');\n\n            return this.utils.markup('div', fieldOptions.join(''), {\n                className: 'form-group field-options',\n                name: name\n            }).outerHTML;\n        },\n\n        createDependencyRow: function (selectedField, selectedValue, value, currentField, onlyValueSelect) {\n            var optionInputs = [],\n                formData = this.getParsedFormData(),\n                self = this,\n                allowedDependencyTypes = ['no-select', 'dropdown', 'checkbox', 'radio', 'checkboxtwo', 'radiotwo', 'listbox'],\n                updateValues = function (index) {\n                    var label = index.label\n                        ? self.utils.cutJs(index.label)\n                        : '';\n                    var option = {\n                        selected: false,\n                        label: label,\n                        value: index.name || index.value,\n                        type: index.type\n                    };\n\n                    if (currentField && option.value == currentField) {\n                        return false;\n                    }\n\n                    if (selectedField && option.value == selectedField) {\n                        option.selected = 'selected';\n                    }\n\n                    return option;\n                };\n\n            optionInputs.push(\n                $(this.selectAttribute(\n                    'dependency-field',\n                    '',\n                    [{\n                        name: 'empty',\n                        label: 'Choose an Option...',\n                        type: 'no-select'\n                    }].concat(formData.map(updateValues)),\n                    allowedDependencyTypes\n                )).find('select')[0]\n            );\n\n            if (selectedField) {\n                selectedField = self.findField(selectedField);\n                if (selectedField && selectedField.values) {\n                    value = selectedField.values;\n                    selectedField = selectedValue;\n                    value = value.map(updateValues);\n                }\n            }\n\n            if (typeof value != 'undefined' && value) {\n                optionInputs.push($(this.selectAttribute('dependency-value', '', value)).find('select')[0]);\n            }\n\n            var removeAttrs = {\n                className: 'remove btn',\n                title: this.options.messages.removeMessage\n            };\n\n            optionInputs.push(this.utils.markup('a', this.options.messages.remove, removeAttrs));\n            var field = this.utils.markup('li', optionInputs, {className: 'dependent-field'});\n            if (onlyValueSelect) {\n                field = $(field).find('select').last()[0];\n            }\n\n            return field.outerHTML;\n        },\n\n        getParsedFormData: function () {\n            var formData = null;\n\n            try {\n                formData = JSON.parse(this.formData);\n            } catch (e) {\n                formData = this.formData;\n            }\n\n            return formData;\n        },\n\n        findField: function (name) {\n            var field = null;\n\n            this.getParsedFormData().forEach(function (element) {\n                if (element.name == name) {\n                    field = element;\n                }\n            });\n\n            return field;\n        }\n    });\n    return $.mage.customFormBuilder;\n});\n","Amasty_Customform/js/am-google-map.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.amGoogleMap', {\n        options: {\n            defaultPosition: {\n                lat: 0,\n                lng: 0\n            },\n            position: null,\n            enabledMarker: true,\n            showFormattedAddress: false,\n            styles: null\n        },\n        zoom: 1,\n        map: null,\n\n        _create: function () {\n            this.mapInput = this.element.find('input').hide();\n            if (typeof google != 'undefined' && google.maps) {\n                if (!this.options.position) {\n                    this.options.position = this.options.defaultPosition;\n                }\n                if (this.options.zoom) {\n                    this.zoom = parseInt(this.options.zoom);\n                }\n\n                if (this.element.find('.map').length == 0) {\n                    this.element.prepend($('<div>',\n                        {\n                            'class': 'map'\n                        }\n                    ));\n                }\n                var map = new google.maps.Map(\n                    this.element.find('.map')[0], {zoom: this.zoom, center: this.options.position}\n                );\n                this.map = map;\n                if (this.options.styles) {\n                    var previousStyles = $(this.map.getDiv()).attr('style');\n                    if (!previousStyles) {\n                        previousStyles = '';\n                    }\n                    $(this.map.getDiv()).attr(\n                        'style',\n                        previousStyles + ' ' + this.options.styles\n                    );\n                }\n                this.mapInput.val(this.options.position);\n\n                this.currentMarker = new google.maps.Marker({position: this.options.position, map: map});\n\n                if (this.options.enabledMarker) {\n                    google.maps.event.addListener(map, 'click', function (event) {\n                        this.moveMarker(event.latLng);\n                    }.bind(this));\n                }\n\n                this.map.addListener('zoom_changed', function () {\n                    this.element.find('input.amform-googlemap').trigger('change');\n                }.bind(this));\n\n                if (this.options.showFormattedAddress) {\n                    this.showAddress();\n                }\n\n                var searchbox = this.searchBox();\n\n                google.maps.event.addListenerOnce(this.map, 'tilesloaded', function () {\n                    searchbox.show();\n                });\n            }\n        },\n\n        getPosition: function () {\n            return this.currentMarker.getPosition();\n        },\n\n        searchBox: function () {\n            this.element.prepend($('<input>',\n                {\n                    'class': 'searchbox'\n                }\n            ).hide());\n\n            var self = this,\n                input = this.element.find('.searchbox'),\n                searchBox = new google.maps.places.SearchBox(input[0]);\n            this.map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(input[0]);\n\n            // disable submit from on search\n            input.onkeypress = function (e) {\n                var key = e.charCode || e.keyCode || 0;\n                if (key == 13) {\n                    e.preventDefault();\n                }\n            };\n            searchBox.addListener('places_changed', function (event) {\n                var places = searchBox.getPlaces();\n\n                if (places.length == 0) {\n                    return;\n                }\n\n                var bounds = new google.maps.LatLngBounds();\n                places.forEach(function (place) {\n                    if (!place.geometry) {\n                        return;\n                    }\n\n                    if (self.options.enabledMarker) {\n                        self.moveMarker(place.geometry.location);\n                    }\n\n                    if (place.geometry.viewport) {\n                        bounds.union(place.geometry.viewport);\n                    } else {\n                        bounds.extend(place.geometry.location);\n                    }\n                });\n                self.map.fitBounds(bounds);\n            });\n\n            return input;\n        },\n\n        moveMarker: function (location) {\n            if (this.currentMarker) {\n                this.currentMarker.setMap(null);\n            }\n            this.currentMarker = new google.maps.Marker({\n                position: location,\n                map: this.map\n            });\n            this.mapInput.val(location);\n            this.element.find('input.amform-googlemap').trigger('change');\n        },\n\n        showAddress: function () {\n            if (this.element.find('.am-address').length == 0) {\n                this.element.prepend($('<div>',\n                    {\n                        'class': 'am-address'\n                    }\n                ));\n            }\n            var geocoder = new google.maps.Geocoder(),\n                addressField = this.element.find('.am-address'),\n                position = this.getPosition();\n\n            geocoder.geocode({\n                'latLng': position\n            }, function (results, status) {\n                if (status == google.maps.GeocoderStatus.OK) {\n                    if (results[0]) {\n                        addressField.html(results[0].formatted_address);\n                    }\n                } else {\n                    addressField.html(position.toString());\n                }\n            });\n        },\n\n        getZoom: function () {\n            return this.map.getZoom();\n        }\n    });\n\n    return $.mage.amGoogleMap;\n});\n","Amasty_Customform/js/form-render.js":"// Element.remove() polyfill\n/* eslint-disable one-var, vars-on-top, max-depth, no-shadow */\n\ndefine([\n    'jquery',\n    'mage/url',\n    'mage/translate',\n    'mage/calendar',\n    'Magento_Ui/js/modal/modal'\n], function ($, urlBuilder) {\n    'use strict';\n\n    if (!('remove' in Element.prototype)) {\n        Element.prototype.remove = function () {\n            if (this.parentNode) {\n                this.parentNode.removeChild(this);\n            }\n        };\n    }\n\n    // Event polyfill\n    if (typeof Event !== 'function') {\n        (function () {\n            window.Event = function (evt) {\n                var event = document.createEvent('Event');\n\n                event.initEvent(evt, true, true);\n\n                return event;\n            };\n        })();\n    }\n\n    // Object.assign polyfill\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target) {\n            if (target == null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            target = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var source = arguments[index];\n\n                if (source !== null) {\n                    for (var key in source) {\n                        if (Object.prototype.hasOwnProperty.call(source, key)) {\n                            target[key] = source[key];\n                        }\n                    }\n                }\n            }\n\n            return target;\n        };\n    }\n\n    'use strict';\n\n\n    (function ($) {\n        var Toggle = function Toggle(element, options) {\n            var defaults = {\n                theme: 'fresh',\n                messages: {\n                    off: 'Off',\n                    on: 'On'\n                }\n            },\n            opts = $.extend(defaults, options),\n                $kcToggle = $('<div class=\"kc-toggle\"></div>').insertAfter(element).append(element);\n\n            $kcToggle.toggleClass('on', element.is(':checked'));\n\n            var kctOn = '<div class=\"kct-on\">' + opts.messages.on + '</div>',\n                kctOff = '<div class=\"kct-off\">' + opts.messages.off + '</div>',\n                kctHandle = '<div class=\"kct-handle\"></div>',\n                kctInner = '<div class=\"kct-inner\">' + kctOn + kctHandle + kctOff + '</div>';\n\n            $kcToggle.append(kctInner);\n\n            $kcToggle.click(function () {\n                element.attr('checked', !element.attr('checked'));\n                $(this).toggleClass('on');\n            });\n        };\n\n        $.fn.kcToggle = function (options) {\n            var toggle = this;\n\n            return toggle.each(function () {\n                var element = $(this),\n                    kcToggle;\n\n                if (element.data('kcToggle')) {\n                    return;\n                }\n\n                kcToggle = new Toggle(element, options);\n                element.data('kcToggle', kcToggle);\n            });\n        };\n    })($);\n\n    'use strict';\n\n    // eslint-disable-next-line newline-after-var\n    var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === 'function'\n            && obj.constructor === Symbol\n            && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n    },\n\n    fbUtils = {};\n    fbUtils.amProgressId = 'form_submit_loading';\n    fbUtils.amImageContainerId = 'loading_image_container';\n    fbUtils.formOptions = [];\n\n    // cleaner syntax for testing indexOf element\n    fbUtils.inArray = function (needle, haystack) {\n        return haystack.indexOf(needle) !== -1;\n    };\n\n    /**\n     * Remove null or undefined values\n     * @param  {Object} attrs {attrName: attrValue}\n     * @return {Object}       Object trimmed of null or undefined values\n     */\n    fbUtils.trimObj = function (attrs) {\n        var xmlRemove = [null, undefined, '', false, 'false'];\n\n        for (var attr in attrs) {\n            if (fbUtils.inArray(attrs[attr], xmlRemove)) {\n                delete attrs[attr];\n            } else if (Array.isArray(attrs[attr])) {\n                if (!attrs[attr].length) {\n                    delete attrs[attr];\n                }\n            }\n        }\n\n        return attrs;\n    };\n\n    /**\n     * Test if attribute is a valid HTML attribute\n     * @param  {String} attr\n     * @return {Boolean}\n     */\n    fbUtils.validAttr = function (attr) {\n        var invalid = [\n            'values', 'enableOther', 'other', 'label',\n            'validation_fields', 'subtype', 'dependency',\n            'map_position'\n        ];\n\n        return !fbUtils.inArray(attr, invalid);\n    };\n\n    /**\n     * Convert an attrs object into a string\n     *\n     * @param  {Object} attrs object of attributes for markup\n     * @return {string}\n     */\n    fbUtils.attrString = function (attrs) {\n        var attributes = [];\n\n        for (var attr in attrs) {\n            if (attrs.hasOwnProperty(attr) && fbUtils.validAttr(attr)) {\n                if (attr === 'placeholder') {\n                    attributes.push(attr + '=\"' + attrs[attr] + '\"');\n                } else {\n                    attr = fbUtils.safeAttr(attr, attrs[attr]);\n                    attributes.push(attr.name + attr.value);\n                }\n            }\n        }\n\n        return attributes.join(' ');\n    };\n\n    /**\n     * Convert attributes to markup safe strings\n     * @param  {String} name  attribute name\n     * @param  {String} value attribute value\n     * @return {Object}       {attrName: attrValue}\n     */\n    fbUtils.safeAttr = function (name, value) {\n        var valString = void 0;\n\n        name = fbUtils.safeAttrName(name);\n\n        if (value) {\n            if (Array.isArray(value)) {\n                valString = fbUtils.escapeAttr(value.join(' '));\n            } else {\n                if (typeof value === 'boolean') {\n                    value = value.toString();\n                }\n\n                value = value.toString();\n\n                if (['regexp', 'data-validate'].includes(name)) {\n                    valString = fbUtils.escapeAttr(value);\n                } else {\n                    valString = fbUtils.escapeAttr(value.replace(',', ' ').trim());\n                }\n            }\n        }\n\n        value = value ? '=\"' + valString + '\"' : '';\n\n        return {\n            name: name,\n            value: value\n        };\n    };\n\n    fbUtils.safeAttrName = function (name) {\n        var safeAttr = {\n            className: 'class'\n        };\n\n        return safeAttr[name] || fbUtils.hyphenCase(name);\n    };\n\n    /**\n     * Convert strings into lowercase-hyphen\n     *\n     * @param  {String} str\n     * @return {String}\n     */\n    fbUtils.hyphenCase = function (str) {\n        str = str.replace(/[^\\w\\s\\-]/gi, '');\n        str = str.replace(/([A-Z])/g, function ($1) {\n            return '-' + $1.toLowerCase();\n        });\n\n        return str.replace(/\\s/g, '-').replace(/^-+/g, '');\n    };\n\n    /**\n     * convert a hyphenated string to camelCase\n     * @param  {String} str\n     * @return {String}\n     */\n    fbUtils.camelCase = function (str) {\n        return str.replace(/-([a-z])/g, function (m, w) {\n            return w.toUpperCase();\n        });\n    };\n\n    /**\n     * Generate markup wrapper where needed\n     *\n     * @param  {string} tag\n     * @return {String}\n     */\n    fbUtils.markup = function (tag) {\n        var content = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '',\n            attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n            contentType = void 0,\n            field = document.createElement(tag),\n\n            getContentType = function getContentType(content) {\n                return Array.isArray(content) ?\n                    'array' : typeof content === 'undefined' ? 'undefined' : _typeof(content);\n            },\n\n            appendContent = {\n                string: function string(content) {\n                    field.innerHTML = content;\n                },\n                object: function object(content) {\n                    return field.appendChild(content);\n                },\n                array: function array(content) {\n                    for (var i = 0; i < content.length; i++) {\n                        contentType = getContentType(content[i]);\n                        appendContent[contentType](content[i]);\n                    }\n                }\n            };\n\n        for (var attr in attrs) {\n            if (attrs.hasOwnProperty(attr)) {\n                var name = fbUtils.safeAttrName(attr);\n\n                field.setAttribute(name, attrs[attr]);\n            }\n        }\n\n        contentType = getContentType(content);\n\n        if (content) {\n            appendContent[contentType].call(this, content);\n        }\n\n        return field;\n    };\n\n    /**\n     * Convert html element attributes to key/value object\n     * @return {Object} ex: {attrName: attrValue}\n     * @param {object} elem\n     */\n    fbUtils.parseAttrs = function (elem) {\n        var attrs = elem.attributes,\n            data = {};\n\n        fbUtils.forEach(attrs, function (attr) {\n            var attrVal = attrs[attr].value;\n\n            if (attrVal.match(/false|true/g)) {\n                attrVal = attrVal === 'true';\n            } else if (attrVal.match(/undefined/g)) {\n                attrVal = undefined;\n            }\n\n            if (attrVal) {\n                data[attrs[attr].name] = attrVal;\n            }\n        });\n\n        return data;\n    };\n\n    /**\n     * Convert field options to optionData\n     * @return {Array} optionData array\n     * @param {object} field\n     */\n    fbUtils.parseOptions = function (field) {\n        var options = field.getElementsByTagName('option'),\n            optionData = {},\n            data = [];\n\n        if (options.length) {\n            for (var i = 0; i < options.length; i++) {\n                optionData = fbUtils.parseAttrs(options[i]);\n                optionData.label = options[i].textContent;\n                data.push(optionData);\n            }\n        }\n\n        return data;\n    };\n\n    /**\n     * Parse XML formData\n     * @param  {String} xmlString\n     * @return {Array} formData array\n     */\n    fbUtils.parseXML = function (xmlString) {\n        var parser = new window.DOMParser(),\n            xml = parser.parseFromString(xmlString, 'text/xml'),\n            formData = [];\n\n        if (xml) {\n            var fields = xml.getElementsByTagName('field');\n\n            for (var i = 0; i < fields.length; i++) {\n                var fieldData = fbUtils.parseAttrs(fields[i]);\n\n                if (fields[i].children.length) {\n                    fieldData.values = fbUtils.parseOptions(fields[i]);\n                }\n\n                formData.push(fieldData);\n            }\n        }\n\n        return formData;\n    };\n\n    /**\n     * Escape markup, so it can be displayed rather than rendered\n     * @param  {String} html markup\n     * @return {String} escaped html\n     */\n    fbUtils.escapeHtml = function (html) {\n        var escapeElement = document.createElement('textarea');\n\n        escapeElement.textContent = html;\n\n        return escapeElement.innerHTML;\n    };\n\n    // Escape an attribute\n    fbUtils.escapeAttr = function (str) {\n        var match = {\n            '\"': '&quot;',\n            '&': '&amp;',\n            '<': '&lt;',\n            '>': '&gt;'\n        };\n\n        function replaceTag(tag) {\n            return match[tag] || tag;\n        }\n\n        return typeof str === 'string' ? str.replace(/[\"&<>]/g, replaceTag) : str;\n    };\n\n    // Escape attributes\n    fbUtils.escapeAttrs = function (attrs) {\n        for (var attr in attrs) {\n            if (attrs.hasOwnProperty(attr)) {\n                attrs[attr] = fbUtils.escapeAttr(attrs[attr]);\n            }\n        }\n\n        return attrs;\n    };\n\n    // forEach that can be used on nodeList\n    fbUtils.forEach = function (array, callback, scope) {\n        for (var i = 0; i < array.length; i++) {\n            callback.call(scope, i, array[i]); // passes back stuff we need\n        }\n    };\n\n    /**\n     * Remove duplicates from an array of elements\n     * @return {Array} array with only unique values\n     * @param {array} array\n     */\n    fbUtils.unique = function (array) {\n        return array.filter(function (elem, pos, arr) {\n            return arr.indexOf(elem) === pos;\n        });\n    };\n\n    /**\n     * Generate preview markup\n     * @param  {object} fieldData\n     * @param {object} opts\n     * @return {string} preview markup for field\n     */\n    fbUtils.fieldRender = function (fieldData, opts) {\n        var preview = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false,\n            utils = fbUtils,\n            fieldMarkup = '',\n            fieldLabel = '',\n            optionsMarkup = '',\n            fieldLabelText = fieldData.label || '',\n            fieldDesc = fieldData.description || '',\n            fieldRequired = '',\n            fieldOptions = fieldData.values;\n\n        fieldData.name = preview ? fieldData.name + '-preview' : fieldData.name;\n        fieldData.id = fieldData.name;\n\n        if (\n            utils.inArray(\n                fieldData.type,\n                ['textinput', 'number', 'file', 'dropdown', 'listbox', 'textarea']\n            ) && fieldData.className.indexOf('form-control') === -1\n        ) {\n            fieldData.className += ' form-control';\n        }\n\n        if (fieldData.type === 'listbox') {\n            fieldData.multiple = true;\n        }\n\n        fieldData.name = fieldData.multiple ? fieldData.name + '[]' : fieldData.name;\n        fieldData.type = fieldData.subtype || fieldData.type;\n\n        var withoutLabel = false,\n            ratingClass = '',\n            withBr = true,\n            withoutMainLabel = false;\n\n        switch (fieldData.type) {\n            case 'textinput':\n                fieldData.type = 'text';\n                break;\n            case 'textarea':\n                fieldData.type = 'textarea';\n                break;\n            case 'hidden':\n                fieldData.type = 'hidden';\n                withoutLabel = true;\n                break;\n            case 'text':\n                fieldData.type = 'div';\n                withoutLabel = true;\n                break;\n            case 'hone':\n                fieldData.type = 'h1';\n                withoutLabel = true;\n                break;\n            case 'htwo':\n                fieldData.type = 'h2';\n                withoutLabel = true;\n                break;\n            case 'hthree':\n                fieldData.type = 'h3';\n                withoutLabel = true;\n                break;\n            case 'number':\n                fieldData.type = 'number';\n                break;\n            case 'rating':\n                ratingClass = 'amform-rating-container ';\n                withBr = false;\n            // eslint-disable-next-line no-fallthrough\n            case 'radiotwo':\n                withBr = false;\n            // eslint-disable-next-line no-fallthrough\n            case 'radio':\n                fieldData.type = 'radio-group';\n                break;\n            case 'checkboxtwo':\n                withBr = false;\n            // eslint-disable-next-line no-fallthrough\n            case 'checkbox':\n                fieldData.type = 'checkbox-group';\n                break;\n            case 'single-checkbox':\n                fieldData.type = 'checkbox';\n                withoutMainLabel = true;\n                break;\n            case 'listbox':\n                fieldData.type = 'select';\n                break;\n            case 'dropdown':\n                fieldData.type = 'select';\n                break;\n            case 'daterange':\n                fieldData.type = 'date';\n                break;\n            case 'datetime':\n                fieldData.type = 'datetime-local';\n                break;\n            case 'wysiwyg':\n                fieldData.type = 'wysiwyg';\n                break;\n        }\n\n        fieldData['data-amcform-js'] = fieldData.id;\n\n        if (fieldData.required) {\n            delete fieldData.required;\n            fieldData['aria-required'] = 'true';\n            fieldData.className += ' required-entry';\n            fieldRequired = '<span class=\"required\">*</span>';\n        }\n\n        if (!withoutLabel) {\n            if (fieldDesc) {\n                fieldDesc = '<span class=\"tooltip-element\" tooltip=\"' + fieldDesc + '\">?</span>';\n            }\n\n            fieldLabel = '<label for=\"' + fieldData.id + '\" class=\"fb-' + fieldData.type + '-label label\">'\n                + fieldLabelText + ' ' + fieldRequired + ' ' + fieldDesc\n                + '</label>';\n        }\n\n        var fieldLabelVal = fieldData.label;\n\n        delete fieldData.label;\n        delete fieldData.description;\n\n        var fieldDataString = fbUtils.attrString(fieldData);\n\n        switch (fieldData.type) {\n            case 'wysiwyg':\n                fieldMarkup = '<div ' + fieldDataString + '>' + (fieldData.value || '') + '</div>';\n                break;\n            case 'textarea':\n            case 'rich-text':\n                delete fieldData.type;\n\n                var fieldVal = fieldData.value || '';\n\n                fieldMarkup = '<textarea ' + fieldDataString + '>' + fieldVal + '</textarea>';\n                break;\n            case 'select':\n                var optionAttrsString;\n\n                fieldData.type = fieldData.type.replace('-group', '');\n\n                if (fieldOptions) {\n                    if (fieldData.placeholder) {\n                        optionsMarkup += '<option disabled selected>' + fieldData.placeholder + '</option>';\n                    }\n\n                    for (var i = 0; i < fieldOptions.length; i++) {\n                        if (!fieldOptions[i].selected || fieldData.placeholder) {\n                            delete fieldOptions[i].selected;\n                        }\n\n                        if (!fieldOptions[i].label) {\n                            fieldOptions[i].label = '';\n                        }\n\n                        optionAttrsString = fbUtils.attrString(fieldOptions[i]);\n                        optionsMarkup += '<option ' + optionAttrsString + '>' + fieldOptions[i].label + '</option>';\n                    }\n                }\n\n                fieldMarkup = '<select ' + fieldDataString + '>' + optionsMarkup + '</select>';\n                break;\n            case 'checkbox-group':\n                if (fieldData.toggle === '1') {\n                    setTimeout(function () {\n                        $('[id^=\"' + fieldData.id + '\"]').kcToggle();\n                    }, 100);\n                }\n            // eslint-disable-next-line no-fallthrough\n            case 'rating':\n            case 'radio-group':\n                var optionAttrs = void 0;\n\n                fieldData.type = fieldData.type.replace('-group', '');\n\n                if (fieldData.type === 'checkbox') {\n                    fieldData.name += '[]';\n                }\n\n                if (ratingClass) {\n                    fieldOptions = fieldOptions.reverse();\n                }\n\n                if (fieldOptions) {\n                    var _optionAttrsString = void 0;\n\n                    for (var _i = 0; _i < fieldOptions.length; _i++) {\n                        optionAttrs = Object.assign({value: '', label: ''}, fieldData, fieldOptions[_i]);\n\n                        if (optionAttrs.selected) {\n                            delete optionAttrs.selected;\n                            optionAttrs.checked = null;\n                        }\n\n                        optionAttrs.id = fieldData.id + '-' + _i;\n                        _optionAttrsString = fbUtils.attrString(optionAttrs);\n\n                        var classNameLabel = ' class=\"amform-versiontwo-label\"',\n                            delimeter = '';\n\n                        if (withBr) {\n                            delimeter = '<br>';\n                            // eslint-disable-next-line no-use-before-define\n                            className = '';\n                        } else if (!ratingClass) {\n                            optionsMarkup += '<div class=\"amform-groupv2\">';\n                            delimeter = '</div>';\n                        }\n\n                        var labelText = ratingClass ? '' : optionAttrs.label;\n\n                        optionsMarkup += '<input ' + _optionAttrsString + ' /' + '> <label for=\"'\n                            + optionAttrs.id + '\" ' + classNameLabel + '>' + labelText + '</label>' + delimeter;\n                    }\n\n                    if (fieldData.other) {\n                        var otherOptionAttrs = {\n                            id: fieldData.id + '-' + 'other',\n                            className: fieldData.className + ' other-option',\n                            onclick: 'fbUtils.otherOptionCB(\\'' + fieldData.id + '-other\\')'\n                        };\n\n                        _optionAttrsString = fbUtils.attrString(Object.assign({}, fieldData, otherOptionAttrs));\n\n                        optionsMarkup += '<input ' + _optionAttrsString + ' /' + '>'\n                            + '<label for=\"' + otherOptionAttrs.id + '\">'\n                            + opts.messages.other + '</label> <input type=\"text\" name=\"'\n                            + fieldData.name + '\" id=\"' + otherOptionAttrs.id\n                            + '-value\" style=\"display:none;\"' + '/' + '>';\n                    }\n                }\n                fieldMarkup = '<div class=\"' + ratingClass + fieldData.type + '-group\">' + optionsMarkup + '</div>';\n                break;\n            case 'text':\n            case 'password':\n            case 'email':\n            case 'number':\n            case 'file':\n            case 'hidden':\n            case 'date':\n            case 'time':\n            case 'datetime-local':\n            case 'tel':\n            case 'autocomplete':\n                fieldMarkup = ' <input ' + fieldDataString + '>';\n                break;\n            case 'color':\n                fieldMarkup = ' <input ' + fieldDataString + '> ' + opts.messages.selectColor;\n                break;\n            case 'button':\n            case 'submit':\n                fieldMarkup = '<button ' + fieldDataString + '>' + fieldLabelVal + '</button>';\n                break;\n            case 'checkbox':\n                fieldMarkup = '<input ' + fieldDataString + '> ' + fieldLabel;\n            // eslint-disable-next-line no-fallthrough\n            case 'checkboxtwo':\n                if (fieldData.toggle) {\n                    setTimeout(function () {\n                        $('[id^=\"' + fieldData.id + '\"]').kcToggle();\n                    }, 100);\n                }\n                break;\n            case 'googlemap':\n                fieldMarkup = ' <input ' + fieldDataString + '><div class=\"map\"></div>';\n                break;\n            default:\n                fieldMarkup = '<' + fieldData.type + ' ' + fieldDataString + '>'\n                + fieldLabelVal + '</' + fieldData.type + '>';\n        }\n\n        fieldMarkup = '<div class=\"control\">' + fieldMarkup + '</div>';\n        if (!withoutMainLabel) {\n            fieldMarkup = fieldLabel + fieldMarkup;\n        }\n\n        if (fieldData.type !== 'hidden') {\n            var className = fieldData.id ?\n                'field fb-' + fieldData.type + ' form-group field-' + fieldData.id.replace(/\\)|\\(/g, '-') :\n                '';\n\n            className += fieldData.dependency ? ' am-customform-depend' : '';\n\n            if (fieldData.layout) {\n                className += ' amform-layout-' + fieldData.layout;\n            }\n\n            fieldMarkup = fbUtils.markup('div', fieldMarkup, {\n                className: className\n            });\n        } else {\n            fieldMarkup = fbUtils.markup('input', null, fieldData);\n        }\n\n        switch (fieldData.type) {\n            case 'googlemap':\n                var position = null, zoom = 1;\n\n                if (fieldData.map_position.lat\n                    && fieldData.map_position.lng\n                    && typeof google !== 'undefined'\n                ) {\n                    position = new google.maps.LatLng(\n                        fieldData.map_position.lat,\n                        fieldData.map_position.lng\n                    );\n                    zoom = fieldData.zoom;\n                }\n\n                $(fieldMarkup).amGoogleMap({\n                    'position': position,\n                    'zoom': zoom,\n                    'styles': fieldData.style\n                });\n                break;\n            case 'date':\n                var dateInput = $(fieldMarkup).find('input');\n\n                dateInput.removeAttr('type');\n                dateInput.attr('readonly', 'readonly');\n                dateInput.datepicker({\n                    showOn: 'both',\n                    changeYear: true,\n                    yearRange: '1900:2100',\n                    autoSize: true,\n                    dateFormat: opts.dateFormat\n                });\n\n                if (fieldData.value) {\n                    dateInput.datepicker('setDate', fieldData.value);\n                }\n\n                dateInput.attr('placeholder', opts.placeholder);\n                dateInput.attr('size', 15);\n                $(fieldMarkup).find('button').html('');\n\n                var datepicker = $('#ui-datepicker-div');\n\n                if (!datepicker.hasClass('am-picker-year')) {\n                    datepicker.addClass('am-picker-year');\n                }\n                break;\n        }\n\n        return fieldMarkup;\n    };\n\n    /**\n     * Callback for other option.\n     * Toggles the hidden text area for \"other\" option.\n     * @param  {String} otherId id of the \"other\" option input\n     */\n    fbUtils.otherOptionCB = function (otherId) {\n        var otherInput = document.getElementById(otherId),\n            otherInputValue = document.getElementById(otherId + '-value');\n\n        if (otherInput.checked) {\n            otherInput.style.display = 'none';\n            otherInputValue.style.display = 'inline-block';\n        } else {\n            otherInput.style.display = 'inline-block';\n            otherInputValue.style.display = 'none';\n        }\n    };\n\n    /**\n     * Capitalizes a string\n     * @param  {String} str uncapitalized string\n     * @return {String} str capitalized string\n     */\n    fbUtils.capitalize = function (str) {\n        return str.replace(/\\b\\w/g, function (m) {\n            return m.toUpperCase();\n        });\n    };\n\n    /**\n     * Check if need show hidden fields\n     * @param {FormRenderFn} formRender\n     * @param {object} $\n     */\n    fbUtils.updateDependency = function (formRender, $) {\n        $.each(formRender.element.find('.am-customform-depend'), function ($, index, elem) {\n            var name = $(elem).find(\n                '.control input,' +\n                '.control [type=\"div\"],' +\n                '.control [type=\"h1\"],' +\n                '.control [type=\"h2\"],' +\n                '.control [type=\"h3\"],' +\n                '.control [type=\"wysiwyg\"],' +\n                '.form-control'\n            ).first().attr('name');\n\n            if (this.dependencyMap[name]) {\n                fbUtils.isFieldShowed(elem, name, this.dependencyMap);\n            }\n        }.bind(formRender, $));\n    };\n\n    fbUtils.isFieldShowed = function (checkedField, elementName, dependencyMap) {\n        var orFields = [],\n            orFieldsType = ['dropdown', 'radio', 'radiotwo'],\n            hiddenField = $(checkedField),\n            hiddenInput = hiddenField.find('input, textarea, select'),\n            validElems = 0;\n\n        $.each(dependencyMap[elementName], function (index, elem) {\n            var dependencyElem = null;\n\n            // check current dependency, only if dependency element showed\n            if (dependencyMap[elem.field] &&\n                !fbUtils.isFieldShowed($('.field-' + elem.field.replace(/\\)|\\(/g, '-')), elem.field, dependencyMap)\n            ) {\n                return false;\n            }\n\n            // find element and check value\n            // if ok - increment validElems\n            // dropdown&radio always increment validElems , checked for valid by orFieldsValid\n            switch (elem.type) {\n                case 'dropdown':\n                    dependencyElem = $('select[name=\"' + elem.field + '\"]');\n                    validElems++;\n\n                    if (typeof orFields[elem.field] == 'undefined') {\n                        orFields[elem.field] = false;\n                    }\n\n                    break;\n                case 'listbox':\n                    if ($('select[name=\"' + elem.field + '[]\"]').val().indexOf(elem.value) !== -1) {\n                        validElems++;\n                    }\n                    break;\n                case 'checkbox':\n                case 'checkboxtwo':\n                    var getCheckboxOptions = function (index, elem) {\n                        return elem.value;\n                    };\n\n                    dependencyElem = $('[name=\"' + elem.field + '[]\"]:checked');\n\n                    if (dependencyElem.map(getCheckboxOptions).toArray().indexOf(elem.value) !== -1) {\n                        validElems++;\n                    }\n\n                    dependencyElem = null;\n                    break;\n                case 'radio':\n                case 'radiotwo':\n                    validElems++;\n                    dependencyElem = $('input[name=\"' + elem.field + '\"]:checked');\n\n                    if (typeof orFields[elem.field] == 'undefined') {\n                        orFields[elem.field] = false;\n                    }\n\n                    break;\n                default:\n                    validElems++;\n            }\n\n            if (dependencyElem && dependencyElem.val() === elem.value) {\n                if (orFieldsType.indexOf(elem.type) !== -1) {\n                    orFields[elem.field] = true;\n                } else {\n                    validElems++;\n                }\n            }\n        });\n\n        var orFieldsValid = fbUtils.getEntries(orFields).map(function (pair) {\n            return pair[1];\n        }).indexOf(false) === -1;\n\n        // validElems - must be count all dependencies of element\n        // dropdown&radio validated with orFieldsValid - one suitable option must selected\n        if (dependencyMap[elementName].length === validElems && orFieldsValid) {\n            hiddenInput\n                .removeClass('amcform-hidden-field')\n                .removeAttr('disabled');\n            hiddenField.show();\n\n            return true;\n        }\n\n        hiddenInput\n            .addClass('amcform-hidden-field')\n            .attr('disabled', true);\n\n        hiddenField.hide();\n\n        return false;\n    };\n\n    fbUtils.getEntries = function (obj) {\n        return Object.entries\n            ? Object.entries(obj)\n            : Object.keys(obj).map(function (key) {\n                return [key, obj[key]];\n            });\n    };\n\n    fbUtils.showAnimation = function (loaderImage) {\n        var progress = $('<div></div>', {id: this.amProgressId}),\n            container = $('<div></div>', {id: this.amImageContainerId}),\n            img = $('<img>'),\n            width;\n\n        container.appendTo(progress);\n\n        img.attr('src', loaderImage);\n        img.appendTo(container);\n        container.width('150px');\n        width = container.width();\n        width = '-' + width / 2 + 'px';\n        container.css('margin-left', width);\n        progress.hide().appendTo($('body')).fadeIn();\n    };\n\n    fbUtils.hideAnimation = function () {\n        var element = $('#' + this.amProgressId);\n\n        if (element.length) {\n            element.fadeOut(function () {\n                $(this).remove();\n            });\n        }\n    };\n\n    fbUtils.submitForm = function (event) {\n        var form = this;\n\n        event.preventDefault();\n\n        if (form.valid()) {\n            form.find('[type=\"submit\"]').addClass('disabled');\n            if (form.has('input[type=\"file\"]').length && form.find('input[type=\"file\"]').val() !== '') {\n                form.off('submit');\n                form.submit();\n            } else {\n                var formId = form.attr('id').match(/\\d+/);\n\n                $.ajax({\n                    url: form.attr('action'),\n                    data: form.serialize(),\n                    type: 'post',\n                    dataType: 'json',\n\n                    beforeSend: function () {\n                        fbUtils.showAnimation(fbUtils.formOptions[formId].src_image_progress);\n                    },\n\n                    error: function () {\n                        fbUtils.hideAnimation();\n\n                        $('html, body').animate({\n                            scrollTop: $('body').offset().top\n                        }, 500);\n\n                        form.find('[type=\"submit\"]').removeClass('disabled');\n                    },\n\n                    success: function (response) {\n                        form.closest('.amcform-popup-block').removeClass('-active');\n                        form.find('[type=\"submit\"]').removeClass('disabled');\n                        fbUtils.hideAnimation();\n\n                        if (response.result === 'success') {\n                            var renderedForm = form.find('.insert-container'),\n                                opts = fbUtils.formOptions[formId],\n                                gdpr = form.find('[name=\"gdpr\"]');\n\n                            if (formId) {\n                                formId = parseInt(formId, 10);\n                                renderedForm.empty();\n                                renderedForm.formRender(formId, opts, form.find('[name=\"is_survey\"]').attr('value'));\n\n                                if (gdpr.length > 0) {\n                                    gdpr.removeAttr('checked');\n                                }\n\n                                if (form.parent().hasClass('amform-popup')) {\n                                    form.parent().hide();\n                                } else if (form.hasClass('amhideprice-form')) {\n                                    $.fancyambox.close();\n                                }\n                            }\n\n                            $(document).trigger('amcform-init-multipage', [renderedForm]);\n                        }\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n        }\n    };\n\n    'use strict';\n\n    function FormRenderFn(formId, options, element) {\n        var utils = fbUtils;\n\n        fbUtils.formOptions[formId] = options;\n\n        var formRender = this,\n            defaults = {\n                destroyTemplate: true, // @todo\n                container: false,\n                dataType: 'xml',\n                formData: false,\n                messages: {\n                    formRendered: 'Form Rendered',\n                    noFormData: 'No form data.',\n                    other: 'Other',\n                    selectColor: 'Select Color'\n                },\n                onRender: function onRender() {\n                    $('.amform-hide-formload').removeClass('amform-hide-formload');\n                },\n                render: true,\n                notify: {\n                    error: function error(message) {\n                        return console.error(message);\n                    },\n                    success: function success(message) {\n                        return console.log(message);\n                    },\n                    warning: function warning(message) {\n                        return console.warn(message);\n                    }\n                }\n            },\n            opts = $.extend(true, defaults, options);\n\n        (function () {\n            if (!opts.formData) {\n                return false;\n            }\n\n            var setData = {\n                xml: function xml(formData) {\n                    return utils.parseXML(formData);\n                },\n                json: function json(formData) {\n                    return window.JSON.parse(formData);\n                }\n            };\n\n            opts.formData = setData[opts.dataType](opts.formData) || false;\n        })();\n\n        /**\n         * Extend Element prototype to allow us to append fields\n         *\n         * @param  {Object} fields Node elements\n         */\n        Element.prototype.appendFormFields = function (fields) {\n            var element = this;\n\n            fields.forEach(function (field) {\n                return element.appendChild(field);\n            });\n        };\n\n        /**\n         * Extend Element prototype to remove content\n         */\n        Element.prototype.emptyContainer = function () {\n            var element = this;\n\n            while (element.lastChild) {\n                element.removeChild(element.lastChild);\n            }\n        };\n\n        var runCallbacks = function runCallbacks() {\n            if (opts.onRender) {\n                opts.onRender();\n            }\n        },\n\n         santizeField = function santizeField(field) {\n            var sanitizedField = Object.assign({}, field);\n\n            sanitizedField.className = field.className || field.class || null;\n            delete sanitizedField.class;\n\n            if (field.values) {\n                field.values = field.values.map(function (option) {\n                    return utils.trimObj(option);\n                });\n            }\n\n            return utils.trimObj(sanitizedField);\n        },\n\n        // Render multiple page form\n         renderMultiPageForm = function (element, pages) {\n            if (opts.pageTitles) {\n                var pageTitles = JSON.parse(opts.pageTitles);\n            }\n\n            var multiPageWrap = $('<div data-amcform-js=\"multi-page\" class=\"amcform-multi-page fieldset\"></div>')\n                    .appendTo(element),\n                pageTitlesWrap = $('<ul data-amcform-js=\"page-titles\" class=\"amcform-page-titles\"></ul>')\n                    .appendTo(multiPageWrap);\n\n            if (typeof pageTitles != 'undefined') {\n                // Generate Titles\n                $.each(pageTitles, function (index, title) {\n                    var step = index + 1;\n\n                    pageTitlesWrap.append('<li class=\"amcform-title-wrap\"><a href=\"#page-' + index\n                        + '\" class=\"amcform-title\"><p class=\"amcform-step\">'\n                        + step + '</p><span class=\"amcform-label\">' + title + '</span></a></li>');\n                });\n            }\n\n            // Generate pages\n            for (var i = 0; i < pages.length; i++) {\n                var pageWrap = $('<div id=\"page-' + i + '\" class=\"amcform-page-wrap fields\"></div>')\n                        .appendTo(multiPageWrap)[0],\n                    toolbar = '<div class=\"amcform-toolbar\">';\n\n                pageWrap.appendFormFields(pages[i]);\n\n                if (i > 0) {\n                    toolbar += '<button type=\"button\" '\n                        + 'data-amcform-js=\"prev-button\" class=\"amcform-prev action submit primary \">'\n                        + $.mage.__('Previous') + '</button>';\n                }\n\n                if (i === pages.length - 1) {\n                    if ($('[data-amcform-js=\"gdpr\"]').length) {\n                        var gdpr =  $(element).next('[data-amcform-js=\"gdpr\"]').clone().appendTo(pageWrap),\n                            inputId = gdpr.find('input').attr('data-id');\n\n                        gdpr.find('input').prop('disabled', false).attr('id', inputId);\n                        gdpr.show();\n                    }\n                    var form = $(element).closest('.amform-form'),\n                        isSurvey = parseInt($(form).find('[name=\"is_survey\"]').attr('value'), 10),\n                        prompt = '';\n\n                    if (isSurvey) {\n                        prompt = 'data-mage-init=\\'{\"amcformPrompt\": {}}\\'';\n                    }\n                    toolbar += '<button type=\"submit\" data-amcform-js=\"submit-button\" '\n                        + prompt + ' class=\"amcform-submit action submit primary \">'\n                        + opts.submitButtonTitle + '</button>';\n                } else {\n                    toolbar += '<button type=\"button\" data-amcform-js=\"next-button\" '\n                        + 'class=\"amcform-next action submit primary \">' + $.mage.__('Next') + '</button>';\n                }\n\n                if (i > 0) {\n                    $(pageWrap).find('input, textarea').addClass('amcform-hidden-page');\n                }\n\n                $(toolbar + '</div>').appendTo(pageWrap);\n            }\n\n             window.dispatchEvent(new CustomEvent('amform-elements-rendered', {\n                 detail: {\n                     form: $(element).closest('form')\n                 }\n             }));\n        },\n\n        // Begin the core plugin\n         page,\n            pages = [],\n            rendered,\n            dependencyFields = [],\n            dependencyMap = [];\n\n        // generate field markup if we have fields\n        if (opts.formData) {\n            if (!Array.isArray(opts.formData[0])) {\n                var createPage = [];\n\n                createPage.push(opts.formData);\n                opts.formData = createPage;\n            }\n            // Pages\n            for (var i = 0; i < opts.formData.length; i++) {\n                rendered = [];\n                page = opts.formData[i];\n                // Forms\n                for (var j = 0; j < page.length; j++) {\n                    var sanitizedField = santizeField(page[j]);\n\n                    switch (sanitizedField.type) {\n                        case 'textinput':\n                            try {\n                                var validation = sanitizedField.validation_fields;\n\n                                if (!validation) {\n                                    validation = JSON.parse(sanitizedField.validation);\n                                }\n                            } catch (e) {\n                                validation = {};\n                            }\n                            var resultStr = '',\n                                begStr = '{',\n                                endStr = '}';\n\n                            resultStr = begStr + resultStr;\n\n                            if (validation.hasOwnProperty('validation')) {\n                                switch (validation.validation) {\n                                    case 'None':\n                                    case ' ':\n                                        break;\n                                    case 'pattern':\n                                        if (sanitizedField.regexp) {\n                                            var validationName = validation.validation + Math.random(),\n                                                errorMessage = sanitizedField.errorMessage || 'Invalid format.';\n\n                                            $.validator.addMethod(\n                                                validationName,\n                                                function (value, element, param) {\n                                                    return this.optional(element) || new RegExp(param).test(value);\n                                                },\n                                                $.mage.__(errorMessage)\n                                            );\n\n                                            resultStr = resultStr + '\\'' +\n                                                validationName + '\\':' + sanitizedField.regexp;\n                                        }\n                                        break;\n                                    default:\n                                        resultStr = resultStr + '\\'' + validation.validation + '\\':true';\n                                }\n                            }\n\n                            resultStr += endStr;\n                            sanitizedField['data-validate'] = resultStr;\n                            delete sanitizedField.validation;\n                            break;\n                    }\n                    if (sanitizedField.dependency) {\n                        // eslint-disable-next-line no-loop-func\n                        $.each(sanitizedField.dependency, function (index, elem) {\n                            var name = sanitizedField.name;\n\n                            dependencyFields.push(elem.field);\n\n                            if (\n                                ['checkbox', 'checkboxtwo', 'listbox'].indexOf(sanitizedField.type) !== -1\n                                || ['file'].indexOf(sanitizedField.type) !== -1\n                                && ['1'].indexOf(sanitizedField.multiple) !== -1\n                            ) {\n                                name += '[]';\n                            }\n\n                            if (!dependencyMap[name]) {\n                                dependencyMap[name] = [];\n                            }\n\n                            dependencyMap[name].push(elem);\n                        });\n                    }\n\n                    rendered.push(utils.fieldRender(sanitizedField, opts));\n                }\n\n                pages.push(rendered);\n            }\n\n            if (opts.render) {\n                if (opts.container) {\n                    opts.container = opts.container instanceof jQuery ? opts.container[0] : opts.container;\n                    opts.container.emptyContainer();\n                    renderMultiPageForm(opts.container, pages);\n                } else if (element) {\n                    element.emptyContainer();\n                    renderMultiPageForm(element, pages);\n                }\n\n                runCallbacks();\n                opts.notify.success(opts.messages.formRendered);\n            } else {\n                $.each(pages, function (index, page) {\n                    formRender.markup = rendered.map(function (page) {\n                        return elem.innerHTML;\n                    }).join('');\n                });\n            }\n        } else {\n            var noData = utils.markup('div', opts.messages.noFormData, {\n                className: 'no-form-data'\n            });\n\n            pages.push(noData);\n            opts.notify.error(opts.messages.noFormData);\n        }\n        this.dependencyMap = dependencyMap;\n        this.dependencyFileds = dependencyFields;\n        this.element = $(element);\n        this.form = this.element.parents('form');\n        this.element.on('click change', 'input, select', function ($, fbUtils, event) {\n            var target = event.currentTarget;\n\n            if (this.dependencyFileds.indexOf(target.name.replace('[]', '')) !== -1) {\n                fbUtils.updateDependency(this, $);\n            }\n        }.bind(this, $, fbUtils));\n\n        fbUtils.updateDependency(this, $);\n\n        if (opts.ajax_submit === 1) {\n            var form = this.form;\n\n            form.unbind('submit');\n            form.on('submit', fbUtils.submitForm.bind(form));\n            form.trigger('ajaxFormLoaded');\n        }\n\n        return formRender;\n    }\n\n    (function ($) {\n        $.fn.formRender = function (formId, options, isSurvey, callback) {\n            var self = this,\n                componentOptions = {\n                    classes: {\n                        active: '-active',\n                        formEdit: '-form-edit',\n                        grid: '-grid',\n                        title: 'amcform-title'\n                    },\n                    selectors: {\n                        formParent: '.amform-parent',\n                        popupBlock: '.amcform-popup-block',\n                        closeButton: '[data-amcform-js=\"close\"]',\n                        map: '.map',\n                        showPopupButton: '[data-amform-show={formId}]',\n                        popupCloseException: '.amcform-popup, .amform-show-popup, .modals-overlay, ' +\n                            '.modal-inner-wrap, .ui-datepicker-next, .ui-datepicker-prev, .am-picker-year',\n                        popupBlockId: '.amcform-popup-block[data-form-id={formId}]',\n                        form: '.amform-form[data-amform-id={id}]',\n                        insertContainer: '.insert-container'\n                    }\n                };\n\n            if (parseInt(isSurvey, 10)) {\n                $.ajax({\n                    url: urlBuilder.build(window.location.origin + '/amasty_customform/form/survey'),\n                    dataType: 'json',\n                    type: 'post',\n                    data: {'form_id': formId},\n                    success: function (response) {\n                        if (response.isSurveyAvailable) {\n                            // eslint-disable-next-line no-use-before-define\n                            generateBegin(formId, options, callback);\n                        } else {\n                            // eslint-disable-next-line no-use-before-define\n                            renderMessage(\n                                $(componentOptions.selectors.form.replace('{id}', formId)),\n                                'Thank you for participating in this survey!'\n                            );\n                        }\n                    },\n                    error: function (error) {\n                        console.log(error);\n                    }\n                });\n            } else {\n                // eslint-disable-next-line no-use-before-define\n                generateBegin(formId, options, callback);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            addShowPopupButtonListener();\n\n            /**\n             * @param {Object} target - jQuery node/nodes-list\n             * @param {String} message\n             * @returns {void}\n             */\n            function renderMessage(target, message) {\n                if (!target.length) {\n                    return;\n                }\n\n                target.each(function (index, item) {\n                    $(item)\n                        .find(componentOptions.selectors.insertContainer)\n                        .html($('<h3>', {\n                            text: $.mage.__(message),\n                            class: componentOptions.classes.title\n                        }));\n                });\n            }\n\n            function generateBegin(formId, options, callback) {\n                // eslint-disable-next-line no-use-before-define\n                generateForm(formId, options);\n                if (callback) {\n                    callback();\n                }\n            }\n\n            function generateForm(formId, options) {\n                self.each(function () {\n                    var formRender = new FormRenderFn(formId, options, this);\n\n                    $(window).trigger('amform-form-' + formId, [\n                        formRender.form[0],\n                        formRender.form.find('[type=\"submit\"]')[0]\n                    ]);\n\n                    return formRender;\n                });\n            }\n\n            function addShowPopupButtonListener() {\n                var buttonBlock = $(componentOptions.selectors.showPopupButton.replace('{formId}', formId)),\n                    _formId,\n                    popupWrapper,\n                    popupBlock,\n                    googleMaps;\n\n                buttonBlock.on('click', function () {\n                    _formId = $(this).attr('data-amform-show');\n                    popupWrapper = $(this).closest(componentOptions.selectors.formParent);\n                    popupBlock = popupWrapper\n                        .find(componentOptions.selectors.popupBlockId\n                        .replace('{formId}', _formId));\n                    googleMaps = popupBlock.find(componentOptions.selectors.map);\n\n                    if (!popupBlock.length) {\n                        return;\n                    }\n\n                    popupBlock.addClass(componentOptions.classes.active);\n\n                    if (googleMaps.width()) {\n                        // trigger resize for prevent grey map\n                        googleMaps.width(googleMaps.width() + 1);\n                    }\n\n                    $(document).on('click', function (event) {\n                        if (!$(event.target).closest(componentOptions.selectors.popupCloseException).length) {\n                            if (buttonBlock.hasClass(componentOptions.classes.formEdit)) {\n                                popupWrapper.remove();\n                            }\n\n                            popupBlock.removeClass(componentOptions.classes.active);\n                        }\n                    });\n\n                    popupBlock.find(componentOptions.selectors.closeButton).on('click', function () {\n                        if (buttonBlock.hasClass(componentOptions.classes.formEdit)) {\n                            popupWrapper.remove();\n                        }\n\n                        popupBlock.removeClass(componentOptions.classes.active);\n                    });\n                });\n\n                if (buttonBlock.hasClass(componentOptions.classes.formEdit)) {\n                    // eslint-disable-next-line no-use-before-define\n                    formEditEvents(buttonBlock);\n                }\n            }\n\n            function formEditEvents(buttonBlock) {\n                var popupWrapper = buttonBlock.closest(componentOptions.selectors.formParent),\n                    popupBlock = popupWrapper.find(componentOptions.selectors.popupBlock),\n                    dataProvider = require('amcformGridDataProvider'),\n                    messageList = require('amcformMessageList'),\n                    notifications = require('amcformNotifications'),\n                    gridData = dataProvider().itemStorage.get();\n\n                buttonBlock.trigger('click');\n\n                buttonBlock.closest(componentOptions.selectors.formParent).find('form').submit(function (event) {\n                    event.preventDefault();\n\n                    // eslint-disable-next-line no-use-before-define\n                    submitEditedForm($(this), function (response) {\n                        if (!response.messages.length) {\n                            notifications().setMessageType('edited', 1);\n\n                            if (buttonBlock.hasClass(componentOptions.classes.grid)) {\n                                dataProvider().getForms(gridData.currentPage, gridData.pageSize);\n                                notifications('showSuccessMessage');\n                            } else {\n                                window.location.reload();\n                            }\n                        } else if (messageList) {\n                            response.messages.forEach(function (message) {\n                                messageList.addErrorMessage({message: message});\n                            });\n                        }\n\n                        popupBlock.removeClass(componentOptions.classes.active);\n                        popupWrapper.remove();\n                    });\n                });\n            }\n\n            function submitEditedForm(target, callback) {\n                var formData;\n\n                if (target.length) {\n                    formData = new FormData(target.get(0));\n\n                    $.ajax({\n                        type: 'POST',\n                        url: target.attr('action'),\n                        data: formData,\n                        contentType: false,\n                        processData:false,\n                        dataType: 'json'\n                    }).done(callback);\n                }\n            }\n        };\n    })($);\n});\n","Amasty_Customform/js/google-map-loader.js":"define([\n    'jquery'\n], function ($) {\n    'use_strict';\n\n    /**\n     * @param {string} googleKey\n     *\n     * @return {jQuery.Deferred}\n     */\n    return function (googleKey) {\n        var result = $.Deferred();\n\n        try {\n            require(\n                ['https://maps.googleapis.com/maps/api/js?libraries=places&key=' + googleKey],\n                result.resolve.bind(result)\n            );\n        } catch (e) {\n            result.reject();\n        }\n\n        return result;\n    }\n})\n","Amasty_Customform/js/form-filler.js":"define([\n    'jquery',\n    'jquery/validate',\n    'Magento_Ui/js/modal/modal'\n], function ($) {\n    'use_strict';\n\n    $.widget('mage.amFormFill', {\n        options: {\n           formParams: {\n               urlSession: '',\n               formId: 0,\n               productId: 0\n           },\n            selectors: {\n                input: '.form-control, .amform-date, .amform-time',\n                field: '.field'\n            }\n        },\n        classes: {\n            hasContent: '-has-content',\n            active: '-active',\n            error: '-error'\n        },\n\n        _create: function () {\n            var source = this.getDataSource();\n\n            source.fail(this.processError.bind(this));\n            source.then(this.checkFieldType.bind(this));\n        },\n\n        /**\n         * @param {Error} error\n         */\n        processError: function (error) {\n            console.log(error);\n        },\n\n        /**\n         * @return {jQuery.Deferred}\n         */\n        getDataSource: function () {\n            var result = $.Deferred();\n\n            $.ajax({\n                url: this.options.formParams.urlSession,\n                dataType: 'json',\n                type: 'get',\n                data: {'form_id': this.options.formParams.formId, 'product_id': this.options.formParams.productId},\n                success: function(response) {\n                    result.resolve(response.form_fields || {});\n                },\n                error: function(error) {\n                    result.reject(error);\n                }\n            });\n\n            return result;\n        },\n\n        /**\n         * @param {Object} fields\n         */\n        checkFieldType: function (fields) {\n            var formData = this.element,\n                field = '';\n\n            $.each(fields, function (name, value) {\n                field = formData.find('[data-amcform-js=\"' + name + '\"]');\n\n                if (field.length) {\n                    switch (field.attr('type')) {\n                        case 'select':\n                            var optionItems = field.children();\n                            $.each(optionItems, function (item, option) {\n                                $(option).prop('selected', false);\n                                var currentOptValue = $(option).val();\n                                if (currentOptValue === value\n                                    || (Array.isArray(value)\n                                        && value.includes(currentOptValue))\n                                ) {\n                                    $(this).prop('selected', true);\n                                }\n                            });\n                            break;\n                        case 'radio':\n                            var checkedField = value.split('-'),\n                                selector = name + '-' + (checkedField[1] - 1);\n\n                            $('#' + selector).prop('checked', true);\n                            break;\n                        case 'checkbox':\n                            field.prop('checked', false);\n                            $.each(value, function (index, val) {\n                                var selector = '[data-amcform-js=\"' + name + '\"]' + '[value=\"' + val + '\"]';\n\n                                $(selector).prop('checked', true);\n                            });\n                            break;\n                        case 'googlemap':\n                            var googleMap = field.closest('.fb-googlemap');\n\n                            if (value instanceof Object\n                                && typeof value.lng !== 'undefined'\n                                && googleMap.data('mageAmGoogleMap')\n                            ) {\n                                googleMap.amGoogleMap('moveMarker', value);\n                            }\n\n                            break;\n                        default:\n                            field.val(value);\n                    }\n                }\n            });\n\n            this.animateField();\n        },\n\n        animateField: function () {\n            var self = this,\n                input = $(self.options.selectors.input),\n                activeClass = self.classes.active,\n                hasContentClass = self.classes.hasContent;\n\n            input.each(function () {\n                if (this.value) {\n                    $(this).closest(self.options.selectors.field).addClass(hasContentClass);\n                }\n            });\n\n            input.on('focusin', function() {\n                var parent = $(this).closest(self.options.selectors.field);\n                parent.addClass(activeClass);\n            });\n\n            input.on('focusout', function() {\n                var parent = $(this).closest(self.options.selectors.field);\n                parent.removeClass(activeClass);\n            });\n\n            input.on('change', function() {\n                var parent = $(this).closest(self.options.selectors.field);\n\n                if (this.value) {\n                    parent.addClass(hasContentClass);\n                } else {\n                    parent.removeClass(hasContentClass);\n                }\n            })\n        }\n    });\n\n    return $.mage.amFormFill;\n});\n","Amasty_MegaMenuLite/js/wrapper.js":"/* eslint-disable no-mixed-operators */\n/**\n * Amasty MegaMenu Wrapper UI Component\n *\n * @desc Component Mega Menu Lite Module\n */\n\ndefine([\n    'jquery',\n    'ko',\n    'uiComponent',\n    'underscore',\n    'ammenu_color_helper',\n    'ammenu_helpers'\n], function ($, ko, Component, _, colorHelper, helpers) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            components: {\n                ammenu_sidebar_menu_wrapper: {\n                    name: 'ammenu_sidebar_menu_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/sidebar_menu/sidebar_menu',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return this.isMobile() || this.is_hamburger;\n                    }\n                },\n                ammenu_submenu_wrapper: {\n                    name: 'ammenu_submenu_wrapper',\n                    component: 'uiComponent',\n                    template: 'Amasty_MegaMenuLite/submenu/wrapper',\n                    deps: ['index = ammenu_wrapper'],\n                    imports: {\n                        animation_time: 'index = ammenu_wrapper:animation_time',\n                        color_settings: 'index = ammenu_wrapper:color_settings'\n                    },\n                    enable_condition: function () {\n                        return !this.isMobile();\n                    }\n                },\n                ammenu_submenu_simple: {\n                    name: 'ammenu_submenu_simple',\n                    component: 'Amasty_MegaMenuLite/js/submenu/simple',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return !this.isMobile();\n                    }\n                },\n                ammenu_hamburger_wrapper: {\n                    name: 'ammenu_hamburger_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/hamburger_menu/hamburger_menu',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return !this.isMobile() && this.is_hamburger;\n                    }\n                },\n                ammenu_overlay_wrapper: {\n                    name: 'ammenu_overlay_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/components/overlay',\n                    deps: ['index = ammenu_hamburger_toggle'],\n                    enable_condition: function () {\n                        return this.isMobile() || this.is_hamburger;\n                    }\n                },\n                ammenu_columns_wrapper: {\n                    name: 'ammenu_columns_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/components/tree/columns',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return !this.isMobile();\n                    }\n                },\n                ammenu_tree_wrapper: {\n                    name: 'ammenu_tree_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/components/tree/tree',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return !this.isMobile();\n                    }\n                },\n                ammenu_account_wrapper: {\n                    name: 'ammenu_account_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/components/account',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return this.isMobile() || this.is_hamburger;\n                    }\n                },\n                ammenu_tabs_wrapper: {\n                    name: 'ammenu_tabs_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/components/tabs',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return this.isMobile() || this.is_hamburger;\n                    }\n                },\n                ammenu_hamburger_toggle: {\n                    name: 'ammenu_hamburger_toggle',\n                    component: 'Amasty_MegaMenuLite/js/components/hamburger_toggle',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return this.isMobile() || this.is_hamburger;\n                    }\n                }\n            },\n            template: 'Amasty_MegaMenuLite/wrapper',\n            templates: {\n                drill_wrapper: 'Amasty_MegaMenu/sidebar_menu/drill/wrapper',\n                sidebar_type_switcher: 'Amasty_MegaMenuLite/sidebar_menu/type_switcher',\n                greetings: 'Amasty_MegaMenuLite/components/greetings',\n                item: 'Amasty_MegaMenuLite/components/item/wrapper',\n                item_content: 'Amasty_MegaMenuLite/components/item/content',\n                item_button: 'Amasty_MegaMenuLite/components/item/button',\n                item_link: 'Amasty_MegaMenuLite/components/item/link',\n                label: 'Amasty_MegaMenuLite/components/item/label',\n                close_button: 'Amasty_MegaMenuLite/components/buttons/close',\n                icon: 'Amasty_MegaMenuLite/components/icon',\n                item_icon: 'Amasty_MegaMenuLite/components/item/icon',\n                hamburger: 'Amasty_MegaMenuLite/hamburger_menu/top/wrapper',\n                menu_title: 'Amasty_MegaMenuLite/sidebar_menu/title',\n                hamburger_items: 'Amasty_MegaMenuLite/hamburger_menu/items',\n                tree_active_level: 'Amasty_MegaMenuLite/components/tree/active_level',\n                accordion: 'Amasty_MegaMenuLite/sidebar_menu/accordion/wrapper'\n            },\n            icons: {\n                create_account: 'Amasty_MegaMenuLite/components/icons/create_account',\n                currency: 'Amasty_MegaMenuLite/components/icons/currency',\n                exit: 'Amasty_MegaMenuLite/components/icons/exit',\n                language: 'Amasty_MegaMenuLite/components/icons/language',\n                settings: 'Amasty_MegaMenuLite/components/icons/settings',\n                sign_in: 'Amasty_MegaMenuLite/components/icons/sign_in',\n                user: 'Amasty_MegaMenuLite/components/icons/user',\n                wishlist: 'Amasty_MegaMenuLite/components/icons/wishlist',\n                chevron: 'Amasty_MegaMenuLite/components/icons/chevron',\n                double_chevron: 'Amasty_MegaMenuLite/components/icons/double_chevron'\n            },\n            view_port: {\n                height: $(window).height(),\n                width: $(window).width()\n            },\n            settings: {\n                delay: 100\n            },\n            maps: {\n                id_index: {}\n            },\n            custom_item_count: 0\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            this._super();\n\n            this.data.isRoot = true;\n            this.initElems(this.data.elems, 0, this.data);\n            this._generateBaseColors();\n            this.isMounted(helpers.mountComponents(this));\n\n            return this;\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    isSticky: false,\n                    isMounted: false,\n                    isMobile: window.innerWidth <= this.mobile_menu_width,\n                    topMenuActiveItem: null\n                });\n\n            this.isMobile.subscribe(function () {\n                helpers.mountComponents(this);\n            }.bind(this));\n\n            window.addEventListener('resize', this._onScreenResize.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @param {Object} elems\n         * @param {Number} level\n         * @param {Object} parent\n         * @return {void}\n         */\n        initElems: function (elems, level, parent) {\n            var self = this;\n\n            _.each(elems, function (elem) {\n                self.initElem(elem, level, parent);\n\n                if (elem.elems.length) {\n                    self.initElems(elem.elems, level + 1, elem);\n                }\n            });\n        },\n\n        /**\n         * Init Target element colors method\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        initElemColors: function (elem) {\n            elem.color = ko.observable(\n                elem.current ? this.color_settings.current_category_color : this.color_settings.main_menu_text\n            );\n            elem.base_color = elem.color();\n        },\n\n        /**\n         * Init Target element method\n         *\n         * @param {Object} elem\n         * @param {Number} level\n         * @param {Object} parent\n         * @return {void}\n         */\n        initElem: function (elem, level, parent) {\n            elem.isActive = ko.observable(false);\n            elem.rendered = ko.observable(false);\n            elem.level = ko.observable(level);\n            elem.isContentActive = ko.observable(false);\n            elem.isSubmenuVisible = ko.observable(true);\n            elem.additionalClasses = [];\n            elem.isVisible = true;\n            elem.isFocused = ko.observable(false);\n            elem.column_count = ko.observable(elem.column_count);\n\n            Object.defineProperty(elem, 'index', {\n                get: function () {\n                    return parent.elems.indexOf(elem) || 0;\n                }\n            });\n\n            elem.isActive.subscribe(function (value) {\n                if (value) {\n                    helpers.setItemFocus(elem);\n                }\n            });\n\n            if (!elem.is_category) {\n                this._initCustomItem(elem);\n            }\n\n            if (level === 0) {\n                this._initRoot(elem);\n            }\n\n            if (parent) {\n                elem.parent = parent;\n            }\n\n            this.initElemColors(elem);\n        },\n\n        /**\n         * Init root submenu element\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _initRoot: function (elem) {\n            this.maps.id_index[elem.id] = elem.index;\n            elem.width_value = ko.observable(elem.width_value);\n            elem.nodes = {};\n\n            elem.isSubmenuVisible(\n                !elem.submenu_type && elem.content && elem.content.trim().length > 7\n                || elem.submenu_type && elem.type.value && !elem.hide_content && elem.elems.length\n            );\n\n            if (elem.width === 0) {\n                elem.width_value('100%');\n            }\n\n            if (elem.width === 1) {\n                elem.width_value('max-content');\n            }\n\n            if (elem.width_value() && elem.width === 2) {\n                elem.width_value(elem.width_value() + 'px');\n            }\n        },\n\n        /**\n         * Init Custom item\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _initCustomItem: function (elem) {\n            if (\n                elem.status === 2 && this.isMobile()\n                || elem.status === 3 && !this.isMobile()\n            ) {\n                elem.isVisible = false;\n            }\n\n            this.custom_item_count += 1;\n        },\n\n        /**\n         * Generating base color setting from base customers colors\n         * @return {void}\n         */\n        _generateBaseColors: function () {\n            this.color_settings\n                .border = colorHelper.getLighten(this.color_settings.toggle_icon_color, 0.16);\n            this.color_settings\n                .third_level_menu = colorHelper.getAltered(this.color_settings.submenu_text, 0.2);\n            this.color_settings\n                .toggle_icon_color_hover = colorHelper.getDarken(this.color_settings.toggle_icon_color, 0.2);\n            this.color_settings\n                .toggle_icon_color_active = colorHelper.getDarken(this.color_settings.toggle_icon_color, 0.3);\n            this.color_settings\n                .hamburger_icon_color_hover = colorHelper.getDarken(this.color_settings.hamburger_icon_color, 0.2);\n            this.color_settings\n                .hamburger_icon_color_active = colorHelper.getDarken(this.color_settings.hamburger_icon_color, 0.3);\n        },\n\n        /**\n         * Rotation and screen resize Event Handler Initialization\n         *\n         * @description update isMobile param via new resolution\n         * @private\n         * @return {void}\n         */\n        _onScreenResize: _.debounce(function () {\n            this.isMobile(window.innerWidth <= this.mobile_menu_width);\n        }, 300)\n    });\n});\n","Amasty_MegaMenuLite/js/utils/helpers.js":"/**\n * Amasty MegaMenu helpers\n */\n\ndefine([\n    'jquery',\n    'ko',\n    'underscore',\n    'uiLayout',\n    'mage/cookies'\n], function ($, ko, _, layout) {\n    'use strict';\n\n    return {\n        selectors: {\n            formKeyInput: 'input[name=\"form_key\"]',\n            slick: '.slick-slider',\n            slide: '.slick-slide'\n        },\n        formKey: $.mage.cookies.get('form_key'),\n\n        /**\n         * Update Form Key\n         *\n         * @param {Object} node\n         *\n         * @desc Updating inner form key inserting\n         * @return {void}\n         */\n        updateFormKey: function (node) {\n            var self = this,\n                formKeyInput;\n\n            _.delay(function () {\n                formKeyInput = $(node).find(self.selectors.formKeyInput);\n\n                if (formKeyInput.val() !== self.formKey) {\n                    formKeyInput.val(self.formKey);\n                }\n            });\n        },\n\n        /**\n         * Mounting necessary components into layout via enable_condition\n         *\n         * @description please specify \"uiClass\" environment for enable_condition params & select parent\n         * @param {Object} uiClass\n         * @return {Boolean}\n         */\n        mountComponents: function (uiClass) {\n            Object.keys(uiClass.components).forEach(function (key) {\n                uiClass.components[key].parent = uiClass.name;\n\n                if (_.isUndefined(uiClass.components[key].enable_condition)) {\n                    layout([uiClass.components[key]]);\n\n                    return false;\n                }\n\n                if (uiClass.components[key].enable_condition.apply(uiClass)) {\n                    layout([uiClass.components[key]]);\n                }\n            });\n\n            return true;\n        },\n\n        /**\n         * ReMounting necessary and Destroy unnecessary components into/to layout via enable_condition\n         *\n         * @description please specify \"uiClass\" environment for enable_condition params & select parent\n         * @params {Object} uiClass\n         * @return {void}\n         */\n        remountComponents: function (uiClass) {\n            uiClass.elems.each(function (component) {\n                if (!component.enable_condition.call(uiClass)) {\n                    component.destroy();\n                }\n            });\n\n            this.mountComponents(uiClass);\n        },\n\n        /**\n         * Applying Bindings in target node element\n         *\n         * @param {Object} element - node element\n         * @param {Object} context - current context\n         * @return {void}\n         */\n        applyBindings: function (element, context) {\n            _.defer(function () {\n                ko.applyBindingsToDescendants(context, element);\n                $(element).trigger('contentUpdated');\n            });\n        },\n\n        /**\n         * Components Array initialization and setting in target component\n         *\n         * @param {Array} array target uiClasses\n         * @param {Object} component current uiClass\n         * @return {void}\n         */\n        initComponentsArray: function (array, component) {\n            _.each(array, function (item) {\n                component[item.index] = item;\n            });\n        },\n\n        /**\n         * Slick Slider Position checking via subscriber\n         *\n         * @desc checking and fixing new slick sliders positions\n         * @param {Object} node - slider container node\n         * @param {Object} observer - ko observer\n         * @return {void | Boolean}\n         */\n        sliderResizeSubscribe: function (node, observer) {\n            var self = this,\n                $slider,\n                $slide,\n                sliderSpeed,\n                sliderAutoplay,\n                subscriber = observer.subscribe(function (value) {\n                    if (!value) {\n                        return false;\n                    }\n\n                    $slider = $(node).find(self.selectors.slick);\n\n                    if (!$slider.length) {\n                        subscriber.dispose();\n\n                        return false;\n                    }\n\n                    sliderAutoplay = $slider.slick('slickGetOption', 'autoplay');\n                    sliderSpeed = $slider.slick('slickGetOption', 'speed');\n                    $slide = $slider.find(self.selectors.slide).first();\n\n                    if (!parseInt(sliderAutoplay, 10) && $slide.width() && $slider.width()) {\n                        subscriber.dispose();\n\n                        return false;\n                    }\n\n                    $slider.slick('slickSetOption', 'speed', 0);\n                    $slider.slick('slickGoTo', 0);\n                    $slider.slick('setPosition');\n                    $slider.slick('setDimensions');\n                    $slider.slick('slickSetOption', 'speed', sliderSpeed);\n                });\n        },\n\n        /**\n         * Set focus on first element in target\n         *\n         * @public\n         * @param {Object} elem\n         * @return {void}\n         */\n        setItemFocus: _.debounce(function (elem) {\n            if (elem && elem.elems.length && _.isFunction(elem.elems[0].isFocused)) {\n                elem.elems[0].isFocused(true);\n            }\n        }, 500),\n\n        /**\n         * All category link element generator\n         *\n         * @desc preparing object element for 'all category' link via current data\n         * and shifting to current Array\n         * @param {Object} elem - slider container node\n         * @param {String} color - target color\n         * @return {Boolean} status\n         */\n        initAllItemLink: function (elem, color) {\n            var prototype;\n\n            if (\n                !elem.url.length ||\n                elem.elems.length && elem.elems[0].isViewAll ||\n                !_.isUndefined(elem.all_link) && !elem.all_link\n            ) {\n                return false;\n            }\n\n            prototype = {\n                name: $.mage.__('View All') + ' ' + elem.name,\n                isLinkInteractive: true,\n                index: 0,\n                isFocused: ko.observable(false),\n                isViewAll: true,\n                url: elem.url,\n                elems: [],\n                content: '',\n                hide_content: true,\n                isSubmenuVisible: ko.observable(false),\n                type: elem.type,\n                additionalClasses: ' -all-link',\n                color: ko.observable(color),\n                base_color: color,\n                isVisible: ko.observable(true),\n                level: ko.observable(elem.level()),\n                parent: elem\n            };\n\n            elem.elems.unshift(prototype);\n\n            return true;\n        }\n    };\n});\n","Amasty_MegaMenuLite/js/utils/color.js":"/**\n * Amasty MegaMenu Colors Helper Component\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($) {\n    'use strict';\n\n    return {\n\n        /**\n         * Generate darken color depending on the specified percentage\n         *\n         * @params {String} color - any color format\n         * @params {Number} percent - relative values from 0.1 to 0.9\n         *\n         * @return {String} new color in rgba\n         */\n        getDarken: function (color, percent) {\n            var currentHsla = $.Color(color).hsla();\n\n            currentHsla[2] = currentHsla[2] - percent;\n\n            return $.Color(color).hsla(currentHsla).toRgbaString();\n        },\n\n        /**\n         * Generate lighten color depending on the specified percentage\n         *\n         * @params {String} color - any color format\n         * @params {Number} percent - relative values from 0.1 to 0.9\n         *\n         * @return {String} new color in rgba\n         */\n        getLighten: function (color, percent) {\n            var currentHsla = $.Color(color).hsla();\n\n            currentHsla[2] = currentHsla[2] + percent;\n\n            return $.Color(color).hsla(currentHsla).toRgbaString();\n        },\n\n        /**\n         * Generate altered color depending on the specified percentage\n         * and side of changes depends on brightness\n         *\n         * @params {String} color - any color format\n         * @params {Number} percent - relative values from 0.1 to 0.9\n         *\n         * @return {String} new color in rgba\n         */\n        getAltered: function (color, percent) {\n            var currentHsla = $.Color(color).hsla(),\n                currentBrightness = currentHsla[2];\n\n            if (currentBrightness > 0.7) {\n                return this.getDarken(color, percent);\n            }\n\n            return this.getLighten(color, percent);\n        }\n    };\n});\n\n","Amasty_MegaMenuLite/js/sidebar_menu/sidebar_menu.js":"/**\n *  Amasty Sidebar Menu UI Component\n */\n\ndefine([\n    'uiComponent',\n    'ammenu_helpers',\n    'underscore',\n    'mage/translate'\n], function (Component, helpers, _) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/sidebar_menu/sidebar_menu',\n            templates: {\n                itemsAccordion: 'Amasty_MegaMenuLite/sidebar_menu/accordion/items/wrapper'\n            },\n            components: [\n                'index = ammenu_wrapper'\n            ],\n            imports: {\n                hamburger_animation: 'index = ammenu_wrapper:hamburger_animation',\n                animation_time: 'index = ammenu_wrapper:animation_time',\n                root_templates: 'index = ammenu_wrapper:templates',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                settings: 'index = ammenu_wrapper:settings',\n                is_hamburger: 'index = ammenu_wrapper:is_hamburger',\n                icons: 'index = ammenu_wrapper:icons',\n                is_icons_available: 'index = ammenu_wrapper:is_icons_available',\n                mobile_class: 'index = ammenu_wrapper:mobile_class',\n                isOpen: 'index = ammenu_hamburger_toggle:isOpen',\n                activeTab: 'index = ammenu_tabs_wrapper:activeTab',\n                hide_view_all_link: 'index = ammenu_wrapper:hide_view_all_link'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            this._super();\n\n            this._initElems(this.source.data.elems);\n\n            return this;\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    elems: [],\n                    isOpen: false,\n                    activeTab: 0\n                });\n\n            return this;\n        },\n\n        /**\n         * Toggling button method\n         *\n         * @param {Object} elem\n         * @return {Boolean} for stop or continues propagation\n         */\n        toggleItem: function (elem) {\n            if (elem.isSubmenuVisible && elem.isSubmenuVisible()) {\n                elem.isActive(!elem.isActive());\n                elem.rendered(true);\n\n                if (elem.isActive()) {\n                    elem.color(elem.level()\n                        ? this.color_settings.submenu_text_hover\n                        : this.color_settings.main_menu_text_hover);\n                } else {\n                    elem.color(elem.base_color);\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @param {Object} elems\n         * @return {void}\n         */\n        _initElems: function (elems) {\n            var self = this;\n\n            _.each(elems, function (elem) {\n                if (elem.elems.length || elem.mobile_content) {\n                    self._initElems(elem.elems);\n                }\n\n                self._initElem(elem);\n            });\n        },\n\n        /**\n         * Init Target element method\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _initElem: function (elem) {\n            var isMobile = this.source.isMobile();\n\n            if (isMobile) {\n                elem.isSubmenuVisible(!elem.hide_mobile_content && (elem.elems.length || elem.mobile_content));\n            }\n\n            if (\n                isMobile && !this.hide_view_all_link &&\n                (elem.elems.length || elem.mobile_content && elem.mobile_content.trim().length > 7\n                    && !elem.hide_mobile_content)\n            ) {\n                helpers.initAllItemLink(elem, this.color_settings.third_level_menu);\n            }\n\n            // Disabling focusing on first item in case when content is first element in mobile menu\n            if (isMobile && elem.mobile_content && !elem.show_mobile_content && elem.elems.length) {\n                elem.elems[0].isFocused = false;\n            }\n            // END\n\n            if (elem.level() && !elem.current) {\n                elem.color(this.color_settings.third_level_menu);\n                elem.base_color = this.color_settings.third_level_menu;\n            }\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/submenu/simple.js":"/**\n *  Amasty simple submenu UI Component\n */\n\ndefine([\n    'uiComponent',\n    'ammenu_helpers'\n], function (Component, helpers) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            activeElem: false,\n            template: 'Amasty_MegaMenuLite/submenu/simple/wrapper',\n            imports: {\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                is_icons_available: 'index = ammenu_wrapper:is_icons_available',\n                root_templates: 'index = ammenu_wrapper:templates',\n                animation_time: 'index = ammenu_wrapper:animation_time'\n            }\n        },\n\n        /**\n         * Simple menu init method\n         *\n         * @params {Object} element - node element\n         * @params {Object} context - view model\n         * @return {void}\n         */\n        init: function (element, context) {\n            helpers.applyBindings(element, context);\n            helpers.sliderResizeSubscribe(element, context.elem.isActive);\n            helpers.updateFormKey(element);\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/top_menu/item.js":"/**\n *  Amasty Top Menu Item elements UI Component\n */\n\ndefine([\n    'ko',\n    'uiComponent',\n    'uiRegistry',\n    'underscore',\n    'ammenu_helpers'\n], function (ko, Component, registry, _, helpers) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            imports: {\n                root_templates: 'index = ammenu_wrapper:templates',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                view_port: 'index = ammenu_wrapper:view_port',\n                settings: 'index = ammenu_wrapper:settings'\n            },\n            components: [\n                'index = ammenu_wrapper'\n            ]\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            this._super();\n\n            registry.get(this.components, function () {\n                helpers.initComponentsArray(arguments, this);\n                this.item = this._getElemById(this.id);\n                this._initItem(this.item);\n            }.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Init submenu\n         * @public\n         * @returns {void}\n         */\n        _initSubmenu: function () {\n            this.item.inited = true;\n\n            if (this.item.nodes.submenu && this.item.width) {\n                if (_.isUndefined(window.ResizeObserver)) {\n                    this._setSubmenuPosition(this.item.nodes.submenu);\n                } else {\n                    this._setSubmenuResizeObserver(this.item.nodes.submenu);\n                }\n            }\n        },\n\n        /**\n         * Menu item hover handler\n         *\n         * @public\n         * @return {void}\n         */\n        onMouseenter: function () {\n            if (this.ammenu_wrapper.topMenuActiveItem()) {\n                this.ammenu_wrapper.topMenuActiveItem().isActive(false);\n            }\n\n            this.ammenu_wrapper.topMenuActiveItem(this.item);\n            this.item.isActive(true);\n            this.item.rendered(true);\n        },\n\n        /**\n         * Menu item mouse leave handler\n         *\n         * @public\n         * @return {void}\n         */\n        onMouseleave: function () {\n            this.ammenu_wrapper.topMenuActiveItem(null);\n            this.item.isActive(false);\n        },\n\n        /**\n         * Find target elem by id in source data\n         *\n         * @private\n         * @returns {Object} targetElem\n         */\n        _getElemById: function () {\n            return this.ammenu_wrapper.data.elems[this.ammenu_wrapper.maps.id_index[this.id]];\n        },\n\n        /**\n         * Set submenu resize observer\n         * for changing submenu position provided container node resized\n         *\n         * @param {Object} node\n         * @return {void}\n         */\n        _setSubmenuResizeObserver: function (node) {\n            this.submenuResizeObserver = new ResizeObserver(this._setSubmenuPosition.bind(this, node));\n            this.submenuResizeObserver.observe(node);\n        },\n\n        /**\n         * Set current opened submenu position via view port\n         * Only for root level\n         *\n         * @params {Object} node\n         * @return {Boolean} for propagation\n         */ // eslint-disable-next-line consistent-return\n        _setSubmenuPosition: _.debounce(function (node) {\n            var submenuRect,\n                inViewPort,\n                isCustomWidth = this.item.width === 2;\n\n            if (this.item.isActive() && this.item.submenu_position.left()) {\n                return false;\n            }\n\n            this.item.width_value(isCustomWidth ? this.item.width_value() : 'max-content');\n\n            this.item.submenu_position.left(false);\n\n            submenuRect = node.getBoundingClientRect();\n            inViewPort = submenuRect.right <= this.view_port.width;\n\n            if (!inViewPort) {\n                this.item.width_value(isCustomWidth ? this.item.width_value() : '100%');\n                this.item.submenu_position.left(1); // 0 is false\n            }\n        }, 300),\n\n        /**\n         * Init Target item\n         *\n         * @private\n         * @param {Object} item\n         * @return {void}\n         */\n        _initItem: function (item) {\n            item.isInteractive = !item.hide_content\n                && (!!item.elems.length || item.content && !!item.content.length)\n                || !!item.url.length;\n            item.backgroundColor = ko.observable('');\n            item.isActive.extend({ rateLimit: this.settings.delay });\n\n            if (!item.isInteractive) {\n                return;\n            }\n\n            item.submenu_position = {\n                left: ko.observable(false)\n            };\n            item.isActive.subscribe(function (value) {\n                if (value) {\n                    item.backgroundColor(this.color_settings.main_menu_background_hover);\n                    item.color(this.color_settings.main_menu_text_hover);\n                } else {\n                    item.backgroundColor('');\n                    item.color(item.base_color);\n                }\n\n                if (!item.inited) {\n                    this._initSubmenu();\n                }\n            }.bind(this));\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/hamburger_menu/hamburger_menu.js":"/**\n *  Amasty Hamburger Wrapper UI Component\n */\n\ndefine([\n    'ko',\n    'underscore',\n    'uiComponent',\n    'ammenu_helpers'\n], function (ko, _, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            templates: {\n                items: 'Amasty_MegaMenuLite/hamburger_menu/items',\n                submenu: 'Amasty_MegaMenuLite/submenu/wrapper'\n            },\n            imports: {\n                view_port: 'index = ammenu_wrapper:view_port',\n                root_templates: 'index = ammenu_wrapper:templates',\n                icons: 'index = ammenu_wrapper:icons',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                is_icons_available: 'index = ammenu_wrapper:is_icons_available',\n                mobile_class: 'index = ammenu_wrapper:mobile_class',\n                isOpen: 'index = ammenu_hamburger_toggle:isOpen',\n                activeTab: 'index = ammenu_tabs_wrapper:activeTab'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            var self = this;\n\n            self._super();\n\n            self.isOpen.subscribe(function (value) {\n                if (!value) {\n                    self._clearItems();\n                }\n            });\n\n            self._initElems();\n\n            return self;\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    activeTab: 0,\n                    isOpen: false,\n                    activeElem: false\n                });\n\n            return this;\n        },\n\n        /**\n         * Toggling button method\n         *\n         * @param {Object} elem\n         * @param {Object} node - element\n         * @return {Boolean | void}\n         */\n        toggleItem: function (elem, node) {\n            var opening = !elem.isActive(),\n                toggleRect = node.getBoundingClientRect();\n\n            this._clearItems();\n\n            elem.rendered(true);\n\n            if (!opening) {\n                return false;\n            }\n\n            elem.isActive(true);\n            elem.color(this.color_settings.main_menu_text_hover);\n            this.activeElem(elem);\n\n            if (_.isUndefined(window.ResizeObserver)) {\n                this._setSubmenuPosition(elem, toggleRect);\n            } else {\n                this._setSubmenuResizeObserver(elem, toggleRect);\n            }\n\n            return false;\n        },\n\n        /**\n         * Menu item hover handler\n         *\n         * @public\n         * @param {Object} elem\n         * @return {void}\n         */\n        onMouseenter: function (elem) {\n            elem.color(this.color_settings.main_menu_text_hover);\n        },\n\n        /**\n         * Menu item mouse leave handler\n         *\n         * @public\n         * @param {Object} elem\n         * @return {Boolean|void} for skipping\n         */\n        onMouseleave: function (elem) {\n            if (elem.isActive()) {\n                return false;\n            }\n\n            elem.color(elem.base_color);\n        },\n\n        /**\n         * Set current opened submenu position via view port\n         * Only for root level\n         *\n         * @param {Object} elem\n         * @param {Object} clickedRect - clicked element\n         * @return {Boolean} for propagation\n         */\n        _setSubmenuPosition: _.debounce(function (elem, clickedRect) {\n            var submenuRect,\n                inViewport;\n\n            elem.submenu_position.top(clickedRect.top);\n            elem.submenu_position.bottom(false);\n\n            submenuRect = elem.nodes.submenu.getBoundingClientRect();\n            inViewport = submenuRect.bottom <= this.view_port.height;\n\n            if (!inViewport) {\n                elem.submenu_position.top(false);\n                elem.submenu_position.bottom(1); // 0 is false\n            }\n        }),\n\n        /**\n         * Set submenu resize observer\n         * for changing submenu position provided container node resized\n         *\n         * @param {Object} elem\n         * @param {Object} toggleRect - submenu trigger clicked element\n         * @return {void | Boolean}\n         */\n        _setSubmenuResizeObserver: function (elem, toggleRect) {\n            this.submenuResizeObserver = new ResizeObserver(this._setSubmenuPosition.bind(this, elem, toggleRect));\n            this.submenuResizeObserver.observe(elem.nodes.submenu);\n        },\n\n        /**\n         * Remove submenu resize observer\n         * Provided menu elem closed\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _removeSubmenuResizeObserver: function (elem) {\n            if (this.submenuResizeObserver) {\n                this.submenuResizeObserver.unobserve(elem.nodes.submenu);\n            }\n        },\n\n        /**\n         * Elements init method\n         *\n         * @return {void}\n         */\n        _initElems: function () {\n            _.each(this.source.data.elems, function (elem) {\n                if (elem.is_category) {\n                    this._initRoot(elem);\n                    this.elems.push(elem);\n                }\n            }.bind(this));\n        },\n\n        /**\n         * Init root submenu element\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _initRoot: function (elem) {\n            var self = this;\n\n            elem.isActive.subscribe(function (value) {\n                if (!value) {\n                    self.onMouseleave(elem);\n                }\n            });\n\n            elem.submenu_position = {\n                top: ko.observable(false),\n                bottom: ko.observable(false)\n            };\n        },\n\n        /**\n         * Closing active element\n         *\n         * @return {void}\n         */\n        _clearItems: function () {\n            var activeElem = this.activeElem();\n\n            if (activeElem) {\n                activeElem.isActive(false);\n                this.onMouseleave(activeElem);\n                this._removeSubmenuResizeObserver(activeElem);\n                this.activeElem(false);\n            }\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/account.js":"/* eslint-disable max-len */\n/**\n *  Amasty Account UI Component\n */\n\ndefine([\n    'ko',\n    'underscore',\n    'uiComponent',\n    'Magento_Customer/js/customer-data',\n    'mage/translate'\n], function (ko, _, Component, customerData, $t) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/account/account',\n            tab_index: 1,\n            imports: {\n                mobile_class: 'index = ammenu_wrapper:color_settings',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                welcome_message: 'index = ammenu_wrapper:welcome_message',\n                settings: 'index = ammenu_wrapper:settings',\n                root_templates: 'index = ammenu_wrapper:templates',\n                icons: 'index = ammenu_wrapper:icons',\n                activeTab: 'index = ammenu_tabs_wrapper:activeTab'\n            },\n            listens: {\n                activeTab: 'tabChange'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            this._super();\n\n            this.customer(customerData.get('customer')());\n            this.wishlist(customerData.get('wishlist')());\n\n            this.items = [\n                {\n                    id: 'login',\n                    isVisible: !this.settings.account.is_logged_in,\n                    icon_template: this.icons.sign_in,\n                    name: $t('Sign In'),\n                    url: this.settings.account.login\n                },\n                {\n                    id: 'create',\n                    isVisible: !this.settings.account.is_logged_in,\n                    icon_template: this.icons.user,\n                    name: $t('Create an Account'),\n                    url: this.settings.account.create\n                },\n                {\n                    id: 'account',\n                    isVisible: this.settings.account.is_logged_in,\n                    icon_template: this.icons.create_account,\n                    name: $t('My Account'),\n                    url: this.settings.account.account\n                },\n                {\n                    id: 'wishlist',\n                    isVisible: this.settings.account.is_logged_in,\n                    counter: this.wishlist().counter,\n                    icon_template: this.icons.wishlist,\n                    name: $t('My Wish Lists'),\n                    url: '/wishlist'\n                },\n                {\n                    id: 'settings',\n                    icon_template: this.icons.settings,\n                    name: $t('Help & Settings'),\n                    elems: [\n                        {\n                            id: 'currency',\n                            icon_template: this.icons.currency,\n                            name: $t('Currency'),\n                            elems: this.mutateSetting(this.settings.currency)\n                        },\n                        {\n                            id: 'language',\n                            icon_template: this.icons.language,\n                            name: $t('Language'),\n                            elems: this.mutateSetting(this.settings.switcher)\n                        }\n                    ],\n                    content_template: 'Amasty_MegaMenuLite/account/settings/settings'\n                },\n                {\n                    id: 'logout',\n                    isVisible: this.settings.account.is_logged_in,\n                    icon_template: this.icons.exit,\n                    name: $t('Log Out'),\n                    url: this.settings.account.logout\n                }\n            ];\n\n            this._initElems(this.items, 0);\n            this.elems(this.items);\n\n            return this;\n        },\n\n        /**\n         * Check for match account tab by index\n         *\n         * @return {Boolean}\n         */\n        matchTab: function () {\n            return this.activeTab() === this.tab_index;\n        },\n\n        /**\n         * Listener for 'activeTab' value changes\n         *\n         * @return {void}\n         */\n        tabChange: _.once(function () {\n            this.rendered(this.matchTab());\n        }),\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    elems: [],\n                    customer: false,\n                    welcome_message: false,\n                    wishlist: false,\n                    activeTab: 0,\n                    rendered: false\n                });\n\n            return this;\n        },\n\n        /**\n         *  Init account elements\n         *\n         * @param {Object} elems\n         * @param {Number} level\n         * @param {Object} [parent]\n         * @return {void}\n         */\n        _initElems: function (elems, level, parent) {\n            var self = this;\n\n            _.each(elems, function (elem) {\n                elem.isVisible = ko.observable(_.isUndefined(elem.isVisible) ? true : elem.isVisible);\n                elem.isActive = ko.observable(false);\n                elem.isFocused = ko.observable(false);\n                elem.level = ko.observable(level);\n                elem.all_link = false;\n                elem.color = ko.observable(self.getElementColor(elem.id));\n                elem.base_color = elem.color();\n                elem.hide_content = false;\n                elem.url = elem.url || '';\n                elem.additionalClasses = '';\n                elem.column_count = ko.observable(1);\n                elem.content = '<!-- ko scope: \"index = ammenu_columns_wrapper\" --><!-- ko template: getTemplate() --><!-- /ko --><!-- /ko -->';\n                elem.isContentActive = ko.observable(false);\n                elem.submenu_type = 0;\n                elem.parent = parent;\n                elem.width = 1;\n                elem.elems = elem.elems || [];\n                elem.isSubmenuVisible = ko.observable(elem.elems.length);\n                elem.rendered = ko.observable(false);\n\n                if (elem.elems && elem.elems.length) {\n                    self._initElems(elem.elems, level + 1, elem);\n                }\n\n                if (level === 0) {\n                    self._initRoot(elem);\n                }\n            });\n        },\n\n        /**\n         *  Preparing target setting item\n         *\n         * @param {Object} setting\n         * @return {Array} prepared target elems list\n         */\n        mutateSetting: function (setting) {\n            var availableOptions = setting.items.filter(function (item) {\n                return item.code !== setting.current_code;\n            });\n\n            if (!setting.current_name) {\n                setting.current_name = setting.current_code;\n            }\n\n            availableOptions.forEach(function (elem) {\n                elem.id = elem.code;\n                elem.url = elem.url || elem['data-post'];\n                elem.counter = elem.code;\n            });\n\n            return [ {\n                id: setting.current_code,\n                name: setting.current_name,\n                counter: setting.current_code,\n                elems: availableOptions\n            } ];\n        },\n\n        /**\n         *  Get highlight or common account link color\n         *\n         * @param {String} type\n         * @returns {String} color\n         */\n        getElementColor: function (type) {\n            return this._isLinkActive(type)\n                ? this.color_settings.current_category_color\n                : this.color_settings.main_menu_text;\n        },\n\n        /**\n         *  Compare link with a href\n         *\n         * @param {String} type\n         * @returns {Boolean}\n         */\n        _isLinkActive: function (type) {\n            return window.location.href.indexOf(type) !== -1;\n        },\n\n        /**\n         * Init root submenu element\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _initRoot: function (elem) {\n            elem.submenu_position = {\n                top: ko.observable(),\n                bottom: ko.observable()\n            };\n\n            elem.nodes = {};\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/columns.js":"/**\n *  Amasty Category Columns UI Component\n */\n\ndefine([\n    'ko',\n    'uiComponent'\n], function (ko, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/components/tree/columns'\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @public\n         * @params {Object} elem - current data\n         * @return {void}\n         */\n        init: function (elem) {\n            this._initColumnCount(elem);\n        },\n\n        /**\n         * Init Columns Count for current Elem\n         *\n         * @public\n         * @params {Object} elem - current root element\n         * @return {void}\n         */\n        _initColumnCount: function (elem) {\n            if (elem.column_count() === 0) {\n                elem.column_count(elem.elems.length);\n            }\n\n            if (elem.column_count() > elem.elems.length) {\n                elem.column_count(elem.elems.length);\n            }\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/tabs.js":"/**\n *  Amasty Account UI Component\n */\n\ndefine([\n    'jquery',\n    'uiComponent'\n], function ($, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/sidebar_menu/tabs_switcher',\n            imports: {\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                isOpen: 'index = ammenu_hamburger_toggle:isOpen'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    activeTab: 0,\n                    isOpen: false,\n                    tabsList: [\n                        { title: $.mage.__('Menu') },\n                        { title: $.mage.__('Account') }\n                    ]\n                });\n\n            return this;\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/hamburger_toggle.js":"/**\n *  Amasty Hamburger toggle UI Component\n */\n\ndefine([\n    'uiComponent'\n], function (Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            links: {\n                color_settings: 'index = ammenu_wrapper:color_settings'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    isOpen: false\n                });\n\n            return this;\n        },\n\n        /**\n         *  Toggling open state method\n         *  @return {void}\n         */\n        toggling: function () {\n            this.isOpen(!this.isOpen());\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/overlay.js":"/**\n *  Amasty Menu Overlay UI Component\n */\n\ndefine([\n    'jquery',\n    'uiComponent'\n], function ($, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            nodes: {\n                body: $('body')\n            },\n            template: 'Amasty_MegaMenuLite/components/overlay'\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            var self = this;\n\n            self._super();\n\n            if (self.source) {\n                self.source.isOpen.subscribe(function (value) {\n                    self.isVisible(value);\n                    self.nodes.body.css({\n                        'overflow': value ? 'hidden' : ''\n                    });\n                });\n            }\n\n            return self;\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    'isVisible': false\n                });\n\n            return this;\n        },\n\n        /**\n         * Hamburger button toggling method\n         * @return {void}\n         */\n        toggling: function () {\n            this.source.isOpen(!this.source.isOpen());\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/tree.js":"/**\n *  Amasty Category Tree UI Component\n */\n\ndefine([\n    'ko',\n    'uiComponent',\n    'underscore',\n    'ammenu_helpers'\n], function (ko, Component, _, helpers) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/components/tree/tree',\n            templates: {\n                title: 'Amasty_MegaMenuLite/components/tree/title',\n                active_level: 'Amasty_MegaMenuLite/components/tree/active_level'\n            },\n            imports: {\n                root_templates: 'index = ammenu_wrapper:templates',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                icons: 'index = ammenu_wrapper:icons',\n                is_icons_available: 'index = ammenu_wrapper:is_icons_available',\n                hide_view_all_link: 'index = ammenu_wrapper:hide_view_all_link'\n            }\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @public\n         * @params {Object} data - current data {activeLevel, columns}\n         * @return {void}\n         */\n        init: function (data) {\n            this._initElems(data.activeLevel);\n            this.setCurrentColor(data.activeLevel, this.color_settings.submenu_text);\n            data.activeLevel = ko.observable(data.activeLevel);\n\n            helpers.setItemFocus(data.activeLevel().parent);\n            data.activeLevel.subscribe(function (elem) {\n                helpers.setItemFocus(elem);\n            });\n        },\n\n        /**\n         * Set prev level from current active level parent\n         *\n         * @public\n         * @params {Object} activeLevel - current active level\n         * @return {Boolean} for stop or continuous propagation\n         */\n        setPreviousLevel: function (activeLevel) {\n            if (activeLevel().level() > 1) {\n                this.setCurrentColor(activeLevel(), activeLevel().base_color);\n                activeLevel(activeLevel().parent);\n\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * Set next level from current active level elems\n         *\n         * @public\n         * @params {Object} activeLevel - current active level\n         * @params {Object} elem - target elem\n         * @return {Boolean} for continuous propagation if this link\n         */\n        setNextLevel: function (activeLevel, elem) {\n            this.setCurrentColor(elem, this.color_settings.submenu_text);\n            activeLevel(elem);\n\n            return false;\n        },\n\n        /**\n         * Menu item hover handler\n         *\n         * @public\n         * @params {Object} elem\n         * @return {void}\n         */\n        onMouseenter: function (elem) {\n            this.setCurrentColor(elem, this.color_settings.submenu_text_hover);\n        },\n\n        /**\n         * Menu item mouse leave handler\n         *\n         * @public\n         * @params {Object} elem\n         * @return {void}\n         */\n        onMouseleave: function (elem) {\n            this.setCurrentColor(elem, elem.base_color);\n        },\n\n        /**\n         * Set Menu Elem Target Color\n         *\n         * @public\n         * @params {Object} elem\n         * @params {String} color\n         * @return {void}\n         */\n        setCurrentColor: function (elem, color) {\n            if (elem.current) {\n                elem.color(this.color_settings.current_category_color);\n            } else {\n                elem.color(color);\n            }\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @private\n         * @params {Object} elems\n         * @return {void}\n         */\n        _initElems: function (element) {\n            var self = this;\n\n            _.each(element.elems, function (elem) {\n                if (elem.elems.length) {\n                    self._initElems(elem);\n                }\n\n                self._initElem(elem);\n            });\n\n            if (element.elems.length && !this.hide_view_all_link) {\n                helpers.initAllItemLink(element, this.color_settings.third_level_menu);\n            }\n\n            self._initElem(element);\n        },\n\n        /**\n         * Init Target element method\n         *\n         * @params {Object} elem\n         * @return {void}\n         */\n        _initElem: function (elem) {\n            elem.isSubmenuVisible = ko.observable(elem.elems.length && !elem.hide_content);\n            this.setCurrentColor(elem, this.color_settings.third_level_menu);\n            elem.base_color = this.color_settings.third_level_menu;\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/tree/columns.js":"/**\n *  Amasty Category Columns UI Component\n */\n\ndefine([\n    'ko',\n    'uiComponent'\n], function (ko, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/components/tree/columns'\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @public\n         * @params {Object} elem - current data\n         * @return {void}\n         */\n        init: function (elem) {\n            this._initColumnCount(elem);\n        },\n\n        /**\n         * Init Columns Count for current Elem\n         *\n         * @public\n         * @params {Object} elem - current root element\n         * @return {void}\n         */\n        _initColumnCount: function (elem) {\n            if (elem.column_count() === 0) {\n                elem.column_count(elem.elems.length);\n            }\n\n            if (elem.column_count() > elem.elems.length) {\n                elem.column_count(elem.elems.length);\n            }\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/tree/tree.js":"/**\n *  Amasty Category Tree UI Component\n */\n\ndefine([\n    'ko',\n    'uiComponent',\n    'underscore',\n    'ammenu_helpers'\n], function (ko, Component, _, helpers) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/components/tree/tree',\n            templates: {\n                title: 'Amasty_MegaMenuLite/components/tree/title',\n                active_level: 'Amasty_MegaMenuLite/components/tree/active_level'\n            },\n            imports: {\n                root_templates: 'index = ammenu_wrapper:templates',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                icons: 'index = ammenu_wrapper:icons',\n                is_icons_available: 'index = ammenu_wrapper:is_icons_available',\n                hide_view_all_link: 'index = ammenu_wrapper:hide_view_all_link'\n            }\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @public\n         * @params {Object} data - current data {activeLevel, columns}\n         * @return {void}\n         */\n        init: function (data) {\n            this._initElems(data.activeLevel);\n            this.setCurrentColor(data.activeLevel, this.color_settings.submenu_text);\n            data.activeLevel = ko.observable(data.activeLevel);\n\n            helpers.setItemFocus(data.activeLevel().parent);\n            data.activeLevel.subscribe(function (elem) {\n                helpers.setItemFocus(elem);\n            });\n        },\n\n        /**\n         * Set prev level from current active level parent\n         *\n         * @public\n         * @params {Object} activeLevel - current active level\n         * @return {Boolean} for stop or continuous propagation\n         */\n        setPreviousLevel: function (activeLevel) {\n            if (activeLevel().level() > 1) {\n                this.setCurrentColor(activeLevel(), activeLevel().base_color);\n                activeLevel(activeLevel().parent);\n\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * Set next level from current active level elems\n         *\n         * @public\n         * @params {Object} activeLevel - current active level\n         * @params {Object} elem - target elem\n         * @return {Boolean} for continuous propagation if this link\n         */\n        setNextLevel: function (activeLevel, elem) {\n            this.setCurrentColor(elem, this.color_settings.submenu_text);\n            activeLevel(elem);\n\n            return false;\n        },\n\n        /**\n         * Menu item hover handler\n         *\n         * @public\n         * @params {Object} elem\n         * @return {void}\n         */\n        onMouseenter: function (elem) {\n            this.setCurrentColor(elem, this.color_settings.submenu_text_hover);\n        },\n\n        /**\n         * Menu item mouse leave handler\n         *\n         * @public\n         * @params {Object} elem\n         * @return {void}\n         */\n        onMouseleave: function (elem) {\n            this.setCurrentColor(elem, elem.base_color);\n        },\n\n        /**\n         * Set Menu Elem Target Color\n         *\n         * @public\n         * @params {Object} elem\n         * @params {String} color\n         * @return {void}\n         */\n        setCurrentColor: function (elem, color) {\n            if (elem.current) {\n                elem.color(this.color_settings.current_category_color);\n            } else {\n                elem.color(color);\n            }\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @private\n         * @params {Object} elems\n         * @return {void}\n         */\n        _initElems: function (element) {\n            var self = this;\n\n            _.each(element.elems, function (elem) {\n                if (elem.elems.length) {\n                    self._initElems(elem);\n                }\n\n                self._initElem(elem);\n            });\n\n            if (element.elems.length && !this.hide_view_all_link) {\n                helpers.initAllItemLink(element, this.color_settings.third_level_menu);\n            }\n\n            self._initElem(element);\n        },\n\n        /**\n         * Init Target element method\n         *\n         * @params {Object} elem\n         * @return {void}\n         */\n        _initElem: function (elem) {\n            elem.isSubmenuVisible = ko.observable(elem.elems.length && !elem.hide_content);\n            this.setCurrentColor(elem, this.color_settings.third_level_menu);\n            elem.base_color = this.color_settings.third_level_menu;\n        }\n    });\n});\n","Magento_Swatches/js/swatch-renderer.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'mage/template',\n    'mage/smart-keyboard-handler',\n    'mage/translate',\n    'priceUtils',\n    'jquery-ui-modules/widget',\n    'jquery/jquery.parsequery',\n    'mage/validation/validation'\n], function ($, _, mageTemplate, keyboardHandler, $t, priceUtils) {\n    'use strict';\n\n    /**\n     * Extend form validation to support swatch accessibility\n     */\n    $.widget('mage.validation', $.mage.validation, {\n        /**\n         * Handle form with swatches validation. Focus on first invalid swatch block.\n         *\n         * @param {jQuery.Event} event\n         * @param {Object} validation\n         */\n        listenFormValidateHandler: function (event, validation) {\n            var swatchWrapper, firstActive, swatches, swatch, successList, errorList, firstSwatch;\n\n            this._superApply(arguments);\n\n            swatchWrapper = '.swatch-attribute-options';\n            swatches = $(event.target).find(swatchWrapper);\n\n            if (!swatches.length) {\n                return;\n            }\n\n            swatch = '.swatch-attribute';\n            firstActive = $(validation.errorList[0].element || []);\n            successList = validation.successList;\n            errorList = validation.errorList;\n            firstSwatch = $(firstActive).parent(swatch).find(swatchWrapper);\n\n            keyboardHandler.focus(swatches);\n\n            $.each(successList, function (index, item) {\n                $(item).parent(swatch).find(swatchWrapper).attr('aria-invalid', false);\n            });\n\n            $.each(errorList, function (index, item) {\n                $(item.element).parent(swatch).find(swatchWrapper).attr('aria-invalid', true);\n            });\n\n            if (firstSwatch.length) {\n                $(firstSwatch).trigger('focus');\n            }\n        }\n    });\n\n    /**\n     * Render tooltips by attributes (only to up).\n     * Required element attributes:\n     *  - data-option-type (integer, 0-3)\n     *  - data-option-label (string)\n     *  - data-option-tooltip-thumb\n     *  - data-option-tooltip-value\n     *  - data-thumb-width\n     *  - data-thumb-height\n     */\n    $.widget('mage.SwatchRendererTooltip', {\n        options: {\n            delay: 200,                             //how much ms before tooltip to show\n            tooltipClass: 'swatch-option-tooltip'  //configurable, but remember about css\n        },\n\n        /**\n         * @private\n         */\n        _init: function () {\n            var $widget = this,\n                $this = this.element,\n                $element = $('.' + $widget.options.tooltipClass),\n                timer,\n                type = parseInt($this.data('option-type'), 10),\n                label = $this.data('option-label'),\n                thumb = $this.data('option-tooltip-thumb'),\n                value = $this.data('option-tooltip-value'),\n                width = $this.data('thumb-width'),\n                height = $this.data('thumb-height'),\n                $image,\n                $title,\n                $corner;\n\n            if (!$element.length) {\n                $element = $('<div class=\"' +\n                    $widget.options.tooltipClass +\n                    '\"><div class=\"image\"></div><div class=\"title\"></div><div class=\"corner\"></div></div>'\n                );\n                $('body').append($element);\n            }\n\n            $image = $element.find('.image');\n            $title = $element.find('.title');\n            $corner = $element.find('.corner');\n\n            $this.on('mouseenter', function () {\n                if (!$this.hasClass('disabled')) {\n                    timer = setTimeout(\n                        function () {\n                            var leftOpt = null,\n                                leftCorner = 0,\n                                left,\n                                $window;\n\n                            if (type === 2) {\n                                // Image\n                                $image.css({\n                                    'background': 'url(\"' + thumb + '\") no-repeat center', //Background case\n                                    'background-size': 'initial',\n                                    'width': width + 'px',\n                                    'height': height + 'px'\n                                });\n                                $image.show();\n                            } else if (type === 1) {\n                                // Color\n                                $image.css({\n                                    background: value\n                                });\n                                $image.show();\n                            } else if (type === 0 || type === 3) {\n                                // Default\n                                $image.hide();\n                            }\n\n                            $title.text(label);\n\n                            leftOpt = $this.offset().left;\n                            left = leftOpt + $this.width() / 2 - $element.width() / 2;\n                            $window = $(window);\n\n                            // the numbers (5 and 5) is magick constants for offset from left or right page\n                            if (left < 0) {\n                                left = 5;\n                            } else if (left + $element.width() > $window.width()) {\n                                left = $window.width() - $element.width() - 5;\n                            }\n\n                            // the numbers (6,  3 and 18) is magick constants for offset tooltip\n                            leftCorner = 0;\n\n                            if ($element.width() < $this.width()) {\n                                leftCorner = $element.width() / 2 - 3;\n                            } else {\n                                leftCorner = (leftOpt > left ? leftOpt - left : left - leftOpt) + $this.width() / 2 - 6;\n                            }\n\n                            $corner.css({\n                                left: leftCorner\n                            });\n                            $element.css({\n                                left: left,\n                                top: $this.offset().top - $element.height() - $corner.height() - 18\n                            }).show();\n                        },\n                        $widget.options.delay\n                    );\n                }\n            });\n\n            $this.on('mouseleave', function () {\n                $element.hide();\n                clearTimeout(timer);\n            });\n\n            $(document).on('tap', function () {\n                $element.hide();\n                clearTimeout(timer);\n            });\n\n            $this.on('tap', function (event) {\n                event.stopPropagation();\n            });\n        }\n    });\n\n    /**\n     * Render swatch controls with options and use tooltips.\n     * Required two json:\n     *  - jsonConfig (magento's option config)\n     *  - jsonSwatchConfig (swatch's option config)\n     *\n     *  Tuning:\n     *  - numberToShow (show \"more\" button if options are more)\n     *  - onlySwatches (hide selectboxes)\n     *  - moreButtonText (text for \"more\" button)\n     *  - selectorProduct (selector for product container)\n     *  - selectorProductPrice (selector for change price)\n     */\n    $.widget('mage.SwatchRenderer', {\n        options: {\n            classes: {\n                attributeClass: 'swatch-attribute',\n                attributeLabelClass: 'swatch-attribute-label',\n                attributeSelectedOptionLabelClass: 'swatch-attribute-selected-option',\n                attributeOptionsWrapper: 'swatch-attribute-options',\n                attributeInput: 'swatch-input',\n                optionClass: 'swatch-option',\n                selectClass: 'swatch-select',\n                moreButton: 'swatch-more',\n                loader: 'swatch-option-loading'\n            },\n            // option's json config\n            jsonConfig: {},\n\n            // swatch's json config\n            jsonSwatchConfig: {},\n\n            // selector of parental block of prices and swatches (need to know where to seek for price block)\n            selectorProduct: '.product-info-main',\n\n            // selector of price wrapper (need to know where set price)\n            selectorProductPrice: '[data-role=priceBox]',\n\n            //selector of product images gallery wrapper\n            mediaGallerySelector: '[data-gallery-role=gallery-placeholder]',\n\n            // selector of category product tile wrapper\n            selectorProductTile: '.product-item',\n\n            // number of controls to show (false or zero = show all)\n            numberToShow: false,\n\n            // show only swatch controls\n            onlySwatches: false,\n\n            // enable label for control\n            enableControlLabel: true,\n\n            // control label id\n            controlLabelId: '',\n\n            // text for more button\n            moreButtonText: $t('More'),\n\n            // Callback url for media\n            mediaCallback: '',\n\n            // Local media cache\n            mediaCache: {},\n\n            // Cache for BaseProduct images. Needed when option unset\n            mediaGalleryInitial: [{}],\n\n            // Use ajax to get image data\n            useAjax: false,\n\n            /**\n             * Defines the mechanism of how images of a gallery should be\n             * updated when user switches between configurations of a product.\n             *\n             * As for now value of this option can be either 'replace' or 'prepend'.\n             *\n             * @type {String}\n             */\n            gallerySwitchStrategy: 'replace',\n\n            // whether swatches are rendered in product list or on product page\n            inProductList: false,\n\n            // sly-old-price block selector\n            slyOldPriceSelector: '.sly-old-price',\n\n            // tier prise selectors start\n            tierPriceTemplateSelector: '#tier-prices-template',\n            tierPriceBlockSelector: '[data-role=\"tier-price-block\"]',\n            tierPriceTemplate: '',\n            // tier prise selectors end\n\n            // A price label selector\n            normalPriceLabelSelector: '.product-info-main .normal-price .price-label',\n            qtyInfo: '#qty'\n        },\n\n        /**\n         * Get chosen product\n         *\n         * @returns int|null\n         */\n        getProduct: function () {\n            var products = this._CalcProducts();\n\n            return _.isArray(products) ? products[0] : null;\n        },\n\n        /**\n         * Get chosen product id\n         *\n         * @returns int|null\n         */\n        getProductId: function () {\n            var products = this._CalcProducts();\n\n            return _.isArray(products) && products.length === 1 ? products[0] : null;\n        },\n\n        /**\n         * @private\n         */\n        _init: function () {\n            // Don't render the same set of swatches twice\n            if ($(this.element).attr('data-rendered')) {\n                return;\n            }\n\n            $(this.element).attr('data-rendered', true);\n\n            if (_.isEmpty(this.options.jsonConfig.images)) {\n                this.options.useAjax = true;\n                // creates debounced variant of _LoadProductMedia()\n                // to use it in events handlers instead of _LoadProductMedia()\n                this._debouncedLoadProductMedia = _.debounce(this._LoadProductMedia.bind(this), 500);\n            }\n\n            this.options.tierPriceTemplate = $(this.options.tierPriceTemplateSelector).html();\n\n            if (this.options.jsonConfig !== '' && this.options.jsonSwatchConfig !== '') {\n                // store unsorted attributes\n                this.options.jsonConfig.mappedAttributes = _.clone(this.options.jsonConfig.attributes);\n                this._sortAttributes();\n                this._RenderControls();\n                this._setPreSelectedGallery();\n                $(this.element).trigger('swatch.initialized');\n            } else {\n                console.log('SwatchRenderer: No input data received');\n            }\n        },\n\n        /**\n         * @private\n         */\n        _sortAttributes: function () {\n            this.options.jsonConfig.attributes = _.sortBy(this.options.jsonConfig.attributes, function (attribute) {\n                return parseInt(attribute.position, 10);\n            });\n        },\n\n        /**\n         * @private\n         */\n        _create: function () {\n            var options = this.options,\n                gallery = $('[data-gallery-role=gallery-placeholder]', '.column.main'),\n                productData = this._determineProductData(),\n                $main = productData.isInProductView ?\n                    this.element.parents('.column.main') :\n                    this.element.parents('.product-item-info');\n\n            if (productData.isInProductView) {\n                gallery.data('gallery') ?\n                    this._onGalleryLoaded(gallery) :\n                    gallery.on('gallery:loaded', this._onGalleryLoaded.bind(this, gallery));\n            } else {\n                options.mediaGalleryInitial = [{\n                    'img': $main.find('.product-image-photo').attr('src')\n                }];\n            }\n\n            this.productForm = this.element.parents(this.options.selectorProductTile).find('form:first');\n            this.inProductList = this.productForm.length > 0;\n            $(this.options.qtyInfo).on('input', this._onQtyChanged.bind(this));\n        },\n\n        /**\n         * Determine product id and related data\n         *\n         * @returns {{productId: *, isInProductView: bool}}\n         * @private\n         */\n        _determineProductData: function () {\n            // Check if product is in a list of products.\n            var productId,\n                isInProductView = false;\n\n            productId = this.element.parents('.product-item-details')\n                    .find('.price-box.price-final_price').attr('data-product-id');\n\n            if (!productId) {\n                // Check individual product.\n                productId = $('[name=product]').val();\n                isInProductView = productId > 0;\n            }\n\n            return {\n                productId: productId,\n                isInProductView: isInProductView\n            };\n        },\n\n        /**\n         * Render controls\n         *\n         * @private\n         */\n        _RenderControls: function () {\n            var $widget = this,\n                container = this.element,\n                classes = this.options.classes,\n                chooseText = this.options.jsonConfig.chooseText,\n                showTooltip = this.options.showTooltip;\n\n            $widget.optionsMap = {};\n\n            $.each(this.options.jsonConfig.attributes, function () {\n                var item = this,\n                    controlLabelId = 'option-label-' + item.code + '-' + item.id,\n                    options = $widget._RenderSwatchOptions(item, controlLabelId),\n                    select = $widget._RenderSwatchSelect(item, chooseText),\n                    input = $widget._RenderFormInput(item),\n                    listLabel = '',\n                    label = '';\n\n                // Show only swatch controls\n                if ($widget.options.onlySwatches && !$widget.options.jsonSwatchConfig.hasOwnProperty(item.id)) {\n                    return;\n                }\n\n                if ($widget.options.enableControlLabel) {\n                    label +=\n                        '<span id=\"' + controlLabelId + '\" class=\"' + classes.attributeLabelClass + '\">' +\n                        $('<i></i>').text(item.label).html() +\n                        '</span>' +\n                        '<span class=\"' + classes.attributeSelectedOptionLabelClass + '\"></span>';\n                }\n\n                if ($widget.inProductList) {\n                    $widget.productForm.append(input);\n                    input = '';\n                    listLabel = 'aria-label=\"' + $('<i></i>').text(item.label).html() + '\"';\n                } else {\n                    listLabel = 'aria-labelledby=\"' + controlLabelId + '\"';\n                }\n\n                // Create new control\n                container.append(\n                    '<div class=\"' + classes.attributeClass + ' ' + item.code + '\" ' +\n                         'data-attribute-code=\"' + item.code + '\" ' +\n                         'data-attribute-id=\"' + item.id + '\">' +\n                        label +\n                        '<div aria-activedescendant=\"\" ' +\n                             'tabindex=\"0\" ' +\n                             'aria-invalid=\"false\" ' +\n                             'aria-required=\"true\" ' +\n                             'role=\"listbox\" ' + listLabel +\n                             'class=\"' + classes.attributeOptionsWrapper + ' clearfix\">' +\n                            options + select +\n                        '</div>' + input +\n                    '</div>'\n                );\n\n                $widget.optionsMap[item.id] = {};\n\n                // Aggregate options array to hash (key => value)\n                $.each(item.options, function () {\n                    if (this.products.length > 0) {\n                        $widget.optionsMap[item.id][this.id] = {\n                            price: parseInt(\n                                $widget.options.jsonConfig.optionPrices[this.products[0]].finalPrice.amount,\n                                10\n                            ),\n                            products: this.products\n                        };\n                    }\n                });\n            });\n\n            if (showTooltip === 1) {\n                // Connect Tooltip\n                container\n                    .find('[data-option-type=\"1\"], [data-option-type=\"2\"],' +\n                        ' [data-option-type=\"0\"], [data-option-type=\"3\"]')\n                    .SwatchRendererTooltip();\n            }\n\n            // Hide all elements below more button\n            $('.' + classes.moreButton).nextAll().hide();\n\n            // Handle events like click or change\n            $widget._EventListener();\n\n            // Rewind options\n            $widget._Rewind(container);\n\n            //Emulate click on all swatches from Request\n            $widget._EmulateSelected($.parseQuery());\n            $widget._EmulateSelected($widget._getSelectedAttributes());\n        },\n\n        disableSwatchForOutOfStockProducts: function () {\n            let $widget = this, container = this.element;\n\n            $.each(this.options.jsonConfig.attributes, function () {\n                let item = this;\n\n                if ($widget.options.jsonConfig.canDisplayShowOutOfStockStatus) {\n                    let salableProducts = $widget.options.jsonConfig.salable[item.id],\n                        swatchOptions = $(container).find(`[data-attribute-id='${item.id}']`).find('.swatch-option');\n\n                    swatchOptions.each(function (key, value) {\n                        let optionId = $(value).data('option-id');\n\n                        if (!salableProducts.hasOwnProperty(optionId)) {\n                            $(value).attr('disabled', true).addClass('disabled');\n                        }\n                    });\n                }\n            });\n        },\n\n        /**\n         * Render swatch options by part of config\n         *\n         * @param {Object} config\n         * @param {String} controlId\n         * @returns {String}\n         * @private\n         */\n        _RenderSwatchOptions: function (config, controlId) {\n            var optionConfig = this.options.jsonSwatchConfig[config.id],\n                optionClass = this.options.classes.optionClass,\n                sizeConfig = this.options.jsonSwatchImageSizeConfig,\n                moreLimit = parseInt(this.options.numberToShow, 10),\n                moreClass = this.options.classes.moreButton,\n                moreText = this.options.moreButtonText,\n                countAttributes = 0,\n                html = '';\n\n            if (!this.options.jsonSwatchConfig.hasOwnProperty(config.id)) {\n                return '';\n            }\n\n            $.each(config.options, function (index) {\n                var id,\n                    type,\n                    value,\n                    thumb,\n                    label,\n                    width,\n                    height,\n                    attr,\n                    swatchImageWidth,\n                    swatchImageHeight;\n\n                if (!optionConfig.hasOwnProperty(this.id)) {\n                    return '';\n                }\n\n                // Add more button\n                if (moreLimit === countAttributes++) {\n                    html += '<a href=\"#\" class=\"' + moreClass + '\"><span>' + moreText + '</span></a>';\n                }\n\n                id = this.id;\n                type = parseInt(optionConfig[id].type, 10);\n                value = optionConfig[id].hasOwnProperty('value') ?\n                    $('<i></i>').text(optionConfig[id].value).html() : '';\n                thumb = optionConfig[id].hasOwnProperty('thumb') ? optionConfig[id].thumb : '';\n                width = _.has(sizeConfig, 'swatchThumb') ? sizeConfig.swatchThumb.width : 110;\n                height = _.has(sizeConfig, 'swatchThumb') ? sizeConfig.swatchThumb.height : 90;\n                label = this.label ? $('<i></i>').text(this.label).html() : '';\n                attr =\n                    ' id=\"' + controlId + '-item-' + id + '\"' +\n                    ' index=\"' + index + '\"' +\n                    ' aria-checked=\"false\"' +\n                    ' aria-describedby=\"' + controlId + '\"' +\n                    ' tabindex=\"0\"' +\n                    ' data-option-type=\"' + type + '\"' +\n                    ' data-option-id=\"' + id + '\"' +\n                    ' data-option-label=\"' + label + '\"' +\n                    ' aria-label=\"' + label + '\"' +\n                    ' role=\"option\"' +\n                    ' data-thumb-width=\"' + width + '\"' +\n                    ' data-thumb-height=\"' + height + '\"';\n\n                attr += thumb !== '' ? ' data-option-tooltip-thumb=\"' + thumb + '\"' : '';\n                attr += value !== '' ? ' data-option-tooltip-value=\"' + value + '\"' : '';\n\n                swatchImageWidth = _.has(sizeConfig, 'swatchImage') ? sizeConfig.swatchImage.width : 30;\n                swatchImageHeight = _.has(sizeConfig, 'swatchImage') ? sizeConfig.swatchImage.height : 20;\n\n                if (!this.hasOwnProperty('products') || this.products.length <= 0) {\n                    attr += ' data-option-empty=\"true\"';\n                }\n\n                if (type === 0) {\n                    // Text\n                    html += '<div class=\"' + optionClass + ' text\" ' + attr + '>' + (value ? value : label) +\n                        '</div>';\n                } else if (type === 1) {\n                    // Color\n                    html += '<div class=\"' + optionClass + ' color\" ' + attr +\n                        ' style=\"background: ' + value +\n                        ' no-repeat center; background-size: initial;\">' + '' +\n                        '</div>';\n                } else if (type === 2) {\n                    // Image\n                    html += '<div class=\"' + optionClass + ' image\" ' + attr +\n                        ' style=\"background: url(' + value + ') no-repeat center; background-size: initial;width:' +\n                        swatchImageWidth + 'px; height:' + swatchImageHeight + 'px\">' + '' +\n                        '</div>';\n                } else if (type === 3) {\n                    // Clear\n                    html += '<div class=\"' + optionClass + '\" ' + attr + '></div>';\n                } else {\n                    // Default\n                    html += '<div class=\"' + optionClass + '\" ' + attr + '>' + label + '</div>';\n                }\n            });\n\n            return html;\n        },\n\n        /**\n         * Render select by part of config\n         *\n         * @param {Object} config\n         * @param {String} chooseText\n         * @returns {String}\n         * @private\n         */\n        _RenderSwatchSelect: function (config, chooseText) {\n            var html;\n\n            if (this.options.jsonSwatchConfig.hasOwnProperty(config.id)) {\n                return '';\n            }\n\n            html =\n                '<select class=\"' + this.options.classes.selectClass + ' ' + config.code + '\">' +\n                '<option value=\"0\" data-option-id=\"0\">' + chooseText + '</option>';\n\n            $.each(config.options, function () {\n                var label = this.label,\n                    attr = ' value=\"' + this.id + '\" data-option-id=\"' + this.id + '\"';\n\n                if (!this.hasOwnProperty('products') || this.products.length <= 0) {\n                    attr += ' data-option-empty=\"true\"';\n                }\n\n                html += '<option ' + attr + '>' + label + '</option>';\n            });\n\n            html += '</select>';\n\n            return html;\n        },\n\n        /**\n         * Input for submit form.\n         * This control shouldn't have \"type=hidden\", \"display: none\" for validation work :(\n         *\n         * @param {Object} config\n         * @private\n         */\n        _RenderFormInput: function (config) {\n            return '<input class=\"' + this.options.classes.attributeInput + ' super-attribute-select\" ' +\n                'name=\"super_attribute[' + config.id + ']\" ' +\n                'type=\"text\" ' +\n                'value=\"\" ' +\n                'data-selector=\"super_attribute[' + config.id + ']\" ' +\n                'data-validate=\"{required: true}\" ' +\n                'aria-required=\"true\" ' +\n                'aria-invalid=\"false\">';\n        },\n\n        /**\n         * Event listener\n         *\n         * @private\n         */\n        _EventListener: function () {\n            var $widget = this,\n                options = this.options.classes,\n                target;\n\n            $widget.element.on('click', '.' + options.optionClass, function () {\n                return $widget._OnClick($(this), $widget);\n            });\n\n            $widget.element.on('change', '.' + options.selectClass, function () {\n                return $widget._OnChange($(this), $widget);\n            });\n\n            $widget.element.on('click', '.' + options.moreButton, function (e) {\n                e.preventDefault();\n\n                return $widget._OnMoreClick($(this));\n            });\n\n            $widget.element.on('keydown', function (e) {\n                if (e.which === 13) {\n                    target = $(e.target);\n\n                    if (target.is('.' + options.optionClass)) {\n                        return $widget._OnClick(target, $widget);\n                    } else if (target.is('.' + options.selectClass)) {\n                        return $widget._OnChange(target, $widget);\n                    } else if (target.is('.' + options.moreButton)) {\n                        e.preventDefault();\n\n                        return $widget._OnMoreClick(target);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Load media gallery using ajax or json config.\n         *\n         * @private\n         */\n        _loadMedia: function () {\n            var $main = this.inProductList ?\n                    this.element.parents('.product-item-info') :\n                    this.element.parents('.column.main'),\n                images;\n\n            if (this.options.useAjax) {\n                this._debouncedLoadProductMedia();\n            }  else {\n                images = this.options.jsonConfig.images[this.getProduct()];\n\n                if (!images) {\n                    images = this.options.mediaGalleryInitial;\n                }\n                this.updateBaseImage(this._sortImages(images), $main, !this.inProductList);\n            }\n        },\n\n        /**\n         * Sorting images array\n         *\n         * @private\n         */\n        _sortImages: function (images) {\n            return _.sortBy(images, function (image) {\n                return parseInt(image.position, 10);\n            });\n        },\n\n        /**\n         * Event for swatch options\n         *\n         * @param {Object} $this\n         * @param {Object} $widget\n         * @private\n         */\n        _OnClick: function ($this, $widget) {\n            var $parent = $this.parents('.' + $widget.options.classes.attributeClass),\n                $wrapper = $this.parents('.' + $widget.options.classes.attributeOptionsWrapper),\n                $label = $parent.find('.' + $widget.options.classes.attributeSelectedOptionLabelClass),\n                attributeId = $parent.data('attribute-id'),\n                $input = $parent.find('.' + $widget.options.classes.attributeInput),\n                checkAdditionalData = JSON.parse(this.options.jsonSwatchConfig[attributeId]['additional_data']),\n                $priceBox = $widget.element.parents($widget.options.selectorProduct)\n                    .find(this.options.selectorProductPrice);\n\n            if ($widget.inProductList) {\n                $input = $widget.productForm.find(\n                    '.' + $widget.options.classes.attributeInput + '[name=\"super_attribute[' + attributeId + ']\"]'\n                );\n            }\n\n            if ($this.hasClass('disabled')) {\n                return;\n            }\n\n            if ($this.hasClass('selected')) {\n                $parent.removeAttr('data-option-selected').find('.selected').removeClass('selected');\n                $input.val('');\n                $label.text('');\n                $this.attr('aria-checked', false);\n            } else {\n                $parent.attr('data-option-selected', $this.data('option-id')).find('.selected').removeClass('selected');\n                $label.text($this.data('option-label'));\n                $input.val($this.data('option-id'));\n                $input.attr('data-attr-name', this._getAttributeCodeById(attributeId));\n                $this.addClass('selected');\n                $widget._toggleCheckedAttributes($this, $wrapper);\n            }\n\n            $widget._Rebuild();\n\n            if ($priceBox.is(':data(mage-priceBox)')) {\n                $widget._UpdatePrice();\n            }\n\n            $(document).trigger('updateMsrpPriceBlock',\n                [\n                    this._getSelectedOptionPriceIndex(),\n                    $widget.options.jsonConfig.optionPrices,\n                    $priceBox\n                ]);\n\n            if (parseInt(checkAdditionalData['update_product_preview_image'], 10) === 1) {\n                $widget._loadMedia();\n            }\n\n            $input.trigger('change');\n        },\n\n        /**\n         * Get selected option price index\n         *\n         * @return {String|undefined}\n         * @private\n         */\n        _getSelectedOptionPriceIndex: function () {\n            var allowedProduct = this._getAllowedProductWithMinPrice(this._CalcProducts());\n\n            if (_.isEmpty(allowedProduct)) {\n                return undefined;\n            }\n\n            return allowedProduct;\n        },\n\n        /**\n         * Get human readable attribute code (eg. size, color) by it ID from configuration\n         *\n         * @param {Number} attributeId\n         * @returns {*}\n         * @private\n         */\n        _getAttributeCodeById: function (attributeId) {\n            var attribute = this.options.jsonConfig.mappedAttributes[attributeId];\n\n            return attribute ? attribute.code : attributeId;\n        },\n\n        /**\n         * Toggle accessibility attributes\n         *\n         * @param {Object} $this\n         * @param {Object} $wrapper\n         * @private\n         */\n        _toggleCheckedAttributes: function ($this, $wrapper) {\n            $wrapper.attr('aria-activedescendant', $this.attr('id'))\n                    .find('.' + this.options.classes.optionClass).attr('aria-checked', false);\n            $this.attr('aria-checked', true);\n        },\n\n        /**\n         * Event for select\n         *\n         * @param {Object} $this\n         * @param {Object} $widget\n         * @private\n         */\n        _OnChange: function ($this, $widget) {\n            var $parent = $this.parents('.' + $widget.options.classes.attributeClass),\n                attributeId = $parent.data('attribute-id'),\n                $input = $parent.find('.' + $widget.options.classes.attributeInput);\n\n            if ($widget.productForm.length > 0) {\n                $input = $widget.productForm.find(\n                    '.' + $widget.options.classes.attributeInput + '[name=\"super_attribute[' + attributeId + ']\"]'\n                );\n            }\n\n            if ($this.val() > 0) {\n                $parent.attr('data-option-selected', $this.val());\n                $input.val($this.val());\n            } else {\n                $parent.removeAttr('data-option-selected');\n                $input.val('');\n            }\n\n            $widget._Rebuild();\n            $widget._UpdatePrice();\n            $widget._loadMedia();\n            $input.trigger('change');\n        },\n\n        /**\n         * Event for more switcher\n         *\n         * @param {Object} $this\n         * @private\n         */\n        _OnMoreClick: function ($this) {\n            $this.nextAll().show();\n            $this.trigger('blur').remove();\n        },\n\n        /**\n         * Rewind options for controls\n         *\n         * @private\n         */\n        _Rewind: function (controls) {\n            controls.find('div[data-option-id], option[data-option-id]')\n                .removeClass('disabled')\n                .prop('disabled', false);\n            controls.find('div[data-option-empty], option[data-option-empty]')\n                .attr('disabled', true)\n                .addClass('disabled')\n                .attr('tabindex', '-1');\n            this.disableSwatchForOutOfStockProducts();\n        },\n\n        /**\n         * Rebuild container\n         *\n         * @private\n         */\n        _Rebuild: function () {\n            var $widget = this,\n                controls = $widget.element.find('.' + $widget.options.classes.attributeClass + '[data-attribute-id]'),\n                selected = controls.filter('[data-option-selected]');\n\n            // Enable all options\n            $widget._Rewind(controls);\n\n            // done if nothing selected\n            if (selected.length <= 0) {\n                return;\n            }\n\n            // Disable not available options\n            controls.each(function () {\n                var $this = $(this),\n                    id = $this.data('attribute-id'),\n                    products = $widget._CalcProducts(id);\n\n                if (selected.length === 1 && selected.first().data('attribute-id') === id) {\n                    return;\n                }\n\n                $this.find('[data-option-id]').each(function () {\n                    var $element = $(this),\n                        option = $element.data('option-id');\n\n                    if (!$widget.optionsMap.hasOwnProperty(id) || !$widget.optionsMap[id].hasOwnProperty(option) ||\n                        $element.hasClass('selected') ||\n                        $element.is(':selected')) {\n                        return;\n                    }\n\n                    if (_.intersection(products, $widget.optionsMap[id][option].products).length <= 0) {\n                        $element.attr('disabled', true).addClass('disabled');\n                    }\n                });\n            });\n        },\n\n        /**\n         * Get selected product list\n         *\n         * @returns {Array}\n         * @private\n         */\n        _CalcProducts: function ($skipAttributeId) {\n            var $widget = this,\n                selectedOptions = '.' + $widget.options.classes.attributeClass + '[data-option-selected]',\n                products = [];\n\n            // Generate intersection of products\n            $widget.element.find(selectedOptions).each(function () {\n                var id = $(this).data('attribute-id'),\n                    option = $(this).attr('data-option-selected');\n\n                if ($skipAttributeId !== undefined && $skipAttributeId === id) {\n                    return;\n                }\n\n                if (!$widget.optionsMap.hasOwnProperty(id) || !$widget.optionsMap[id].hasOwnProperty(option)) {\n                    return;\n                }\n\n                if (products.length === 0) {\n                    products = $widget.optionsMap[id][option].products;\n                } else {\n                    products = _.intersection(products, $widget.optionsMap[id][option].products);\n                }\n            });\n\n            return products;\n        },\n\n        /**\n         * Update total price\n         *\n         * @private\n         */\n        _UpdatePrice: function () {\n            var $widget = this,\n                $product = $widget.element.parents($widget.options.selectorProduct),\n                $productPrice = $product.find(this.options.selectorProductPrice),\n                result = $widget._getNewPrices(),\n                tierPriceHtml,\n                isShow;\n\n            $productPrice.trigger(\n                'updatePrice',\n                {\n                    'prices': $widget._getPrices(result, $productPrice.priceBox('option').prices)\n                }\n            );\n\n            isShow = typeof result != 'undefined' && result.oldPrice.amount !== result.finalPrice.amount;\n\n            $productPrice.find('span:first').toggleClass('special-price', isShow);\n\n            $product.find(this.options.slyOldPriceSelector)[isShow ? 'show' : 'hide']();\n\n            if (typeof result != 'undefined' && result.tierPrices && result.tierPrices.length) {\n                if (this.options.tierPriceTemplate) {\n                    tierPriceHtml = mageTemplate(\n                        this.options.tierPriceTemplate,\n                        {\n                            'tierPrices': result.tierPrices,\n                            '$t': $t,\n                            'currencyFormat': this.options.jsonConfig.currencyFormat,\n                            'priceUtils': priceUtils\n                        }\n                    );\n                    $(this.options.tierPriceBlockSelector).html(tierPriceHtml).show();\n                }\n            } else {\n                $(this.options.tierPriceBlockSelector).hide();\n            }\n\n            $(this.options.normalPriceLabelSelector).hide();\n\n            _.each($('.' + this.options.classes.attributeOptionsWrapper), function (attribute) {\n                if ($(attribute).find('.' + this.options.classes.optionClass + '.selected').length === 0) {\n                    if ($(attribute).find('.' + this.options.classes.selectClass).length > 0) {\n                        _.each($(attribute).find('.' + this.options.classes.selectClass), function (dropdown) {\n                            if ($(dropdown).val() === '0') {\n                                $(this.options.normalPriceLabelSelector).show();\n                            }\n                        }.bind(this));\n                    } else {\n                        $(this.options.normalPriceLabelSelector).show();\n                    }\n                }\n            }.bind(this));\n        },\n\n        /**\n         * Get new prices for selected options\n         *\n         * @returns {*}\n         * @private\n         */\n        _getNewPrices: function () {\n            var $widget = this,\n                newPrices = $widget.options.jsonConfig.prices,\n                allowedProduct = this._getAllowedProductWithMinPrice(this._CalcProducts());\n\n            if (!_.isEmpty(allowedProduct)) {\n                newPrices = this.options.jsonConfig.optionPrices[allowedProduct];\n            }\n\n            return newPrices;\n        },\n\n        /**\n         * Get prices\n         *\n         * @param {Object} newPrices\n         * @param {Object} displayPrices\n         * @returns {*}\n         * @private\n         */\n        _getPrices: function (newPrices, displayPrices) {\n            var $widget = this;\n\n            if (_.isEmpty(newPrices)) {\n                newPrices = $widget._getNewPrices();\n            }\n            _.each(displayPrices, function (price, code) {\n\n                if (newPrices[code]) {\n                    displayPrices[code].amount = newPrices[code].amount - displayPrices[code].amount;\n                }\n            });\n\n            return displayPrices;\n        },\n\n        /**\n         * Get product with minimum price from selected options.\n         *\n         * @param {Array} allowedProducts\n         * @returns {String}\n         * @private\n         */\n        _getAllowedProductWithMinPrice: function (allowedProducts) {\n            var optionPrices = this.options.jsonConfig.optionPrices,\n                product = {},\n                optionFinalPrice, optionMinPrice;\n\n            _.each(allowedProducts, function (allowedProduct) {\n                optionFinalPrice = parseFloat(optionPrices[allowedProduct].finalPrice.amount);\n\n                if (_.isEmpty(product) || optionFinalPrice < optionMinPrice) {\n                    optionMinPrice = optionFinalPrice;\n                    product = allowedProduct;\n                }\n            }, this);\n\n            return product;\n        },\n\n        /**\n         * Gets all product media and change current to the needed one\n         *\n         * @private\n         */\n        _LoadProductMedia: function () {\n            var $widget = this,\n                $this = $widget.element,\n                productData = this._determineProductData(),\n                mediaCallData,\n                mediaCacheKey,\n\n                /**\n                 * Processes product media data\n                 *\n                 * @param {Object} data\n                 * @returns void\n                 */\n                mediaSuccessCallback = function (data) {\n                    if (!(mediaCacheKey in $widget.options.mediaCache)) {\n                        $widget.options.mediaCache[mediaCacheKey] = data;\n                    }\n                    $widget._ProductMediaCallback($this, data, productData.isInProductView);\n                    setTimeout(function () {\n                        $widget._DisableProductMediaLoader($this);\n                    }, 300);\n                };\n\n            if (!$widget.options.mediaCallback) {\n                return;\n            }\n\n            mediaCallData = {\n                'product_id': this.getProduct()\n            };\n\n            mediaCacheKey = JSON.stringify(mediaCallData);\n\n            if (mediaCacheKey in $widget.options.mediaCache) {\n                $widget._XhrKiller();\n                $widget._EnableProductMediaLoader($this);\n                mediaSuccessCallback($widget.options.mediaCache[mediaCacheKey]);\n            } else {\n                mediaCallData.isAjax = true;\n                $widget._XhrKiller();\n                $widget._EnableProductMediaLoader($this);\n                $widget.xhr = $.ajax({\n                    url: $widget.options.mediaCallback,\n                    cache: true,\n                    type: 'GET',\n                    dataType: 'json',\n                    data: mediaCallData,\n                    success: mediaSuccessCallback\n                }).done(function () {\n                    $widget._XhrKiller();\n                });\n            }\n        },\n\n        /**\n         * Enable loader\n         *\n         * @param {Object} $this\n         * @private\n         */\n        _EnableProductMediaLoader: function ($this) {\n            var $widget = this;\n\n            if ($('body.catalog-product-view').length > 0) {\n                $this.parents('.column.main').find('.photo.image')\n                    .addClass($widget.options.classes.loader);\n            } else {\n                //Category View\n                $this.parents('.product-item-info').find('.product-image-photo')\n                    .addClass($widget.options.classes.loader);\n            }\n        },\n\n        /**\n         * Disable loader\n         *\n         * @param {Object} $this\n         * @private\n         */\n        _DisableProductMediaLoader: function ($this) {\n            var $widget = this;\n\n            if ($('body.catalog-product-view').length > 0) {\n                $this.parents('.column.main').find('.photo.image')\n                    .removeClass($widget.options.classes.loader);\n            } else {\n                //Category View\n                $this.parents('.product-item-info').find('.product-image-photo')\n                    .removeClass($widget.options.classes.loader);\n            }\n        },\n\n        /**\n         * Callback for product media\n         *\n         * @param {Object} $this\n         * @param {String} response\n         * @param {Boolean} isInProductView\n         * @private\n         */\n        _ProductMediaCallback: function ($this, response, isInProductView) {\n            var $main = isInProductView ? $this.parents('.column.main') : $this.parents('.product-item-info'),\n                $widget = this,\n                images = [],\n\n                /**\n                 * Check whether object supported or not\n                 *\n                 * @param {Object} e\n                 * @returns {*|Boolean}\n                 */\n                support = function (e) {\n                    return e.hasOwnProperty('large') && e.hasOwnProperty('medium') && e.hasOwnProperty('small');\n                };\n\n            if (_.size($widget) < 1 || !support(response)) {\n                this.updateBaseImage(this.options.mediaGalleryInitial, $main, isInProductView);\n\n                return;\n            }\n\n            images.push({\n                full: response.large,\n                img: response.medium,\n                thumb: response.small,\n                isMain: true\n            });\n\n            if (response.hasOwnProperty('gallery')) {\n                $.each(response.gallery, function () {\n                    if (!support(this) || response.large === this.large) {\n                        return;\n                    }\n                    images.push({\n                        full: this.large,\n                        img: this.medium,\n                        thumb: this.small\n                    });\n                });\n            }\n\n            this.updateBaseImage(images, $main, isInProductView);\n        },\n\n        /**\n         * Check if images to update are initial and set their type\n         * @param {Array} images\n         */\n        _setImageType: function (images) {\n\n            images.map(function (img) {\n                if (!img.type) {\n                    img.type = 'image';\n                }\n            });\n\n            return images;\n        },\n\n        /**\n         * Update [gallery-placeholder] or [product-image-photo]\n         * @param {Array} images\n         * @param {jQuery} context\n         * @param {Boolean} isInProductView\n         */\n        updateBaseImage: function (images, context, isInProductView) {\n            var justAnImage = images[0],\n                initialImages = this.options.mediaGalleryInitial,\n                imagesToUpdate,\n                gallery = context.find(this.options.mediaGallerySelector).data('gallery'),\n                isInitial;\n\n            if (isInProductView) {\n                if (_.isUndefined(gallery)) {\n                    context.find(this.options.mediaGallerySelector).on('gallery:loaded', function () {\n                        this.updateBaseImage(images, context, isInProductView);\n                    }.bind(this));\n\n                    return;\n                }\n\n                imagesToUpdate = images.length ? this._setImageType($.extend(true, [], images)) : [];\n                isInitial = _.isEqual(imagesToUpdate, initialImages);\n\n                if (this.options.gallerySwitchStrategy === 'prepend' && !isInitial) {\n                    imagesToUpdate = imagesToUpdate.concat(initialImages);\n                }\n\n                imagesToUpdate = this._setImageIndex(imagesToUpdate);\n\n                gallery.updateData(imagesToUpdate);\n                this._addFotoramaVideoEvents(isInitial);\n            } else if (justAnImage && justAnImage.img) {\n                context.find('.product-image-photo').attr('src', justAnImage.img);\n            }\n        },\n\n        /**\n         * Add video events\n         *\n         * @param {Boolean} isInitial\n         * @private\n         */\n        _addFotoramaVideoEvents: function (isInitial) {\n            if (_.isUndefined($.mage.AddFotoramaVideoEvents)) {\n                return;\n            }\n\n            if (isInitial) {\n                $(this.options.mediaGallerySelector).AddFotoramaVideoEvents();\n\n                return;\n            }\n\n            $(this.options.mediaGallerySelector).AddFotoramaVideoEvents({\n                selectedOption: this.getProduct(),\n                dataMergeStrategy: this.options.gallerySwitchStrategy\n            });\n        },\n\n        /**\n         * Set correct indexes for image set.\n         *\n         * @param {Array} images\n         * @private\n         */\n        _setImageIndex: function (images) {\n            var length = images.length,\n                i;\n\n            for (i = 0; length > i; i++) {\n                images[i].i = i + 1;\n            }\n\n            return images;\n        },\n\n        /**\n         * Kill doubled AJAX requests\n         *\n         * @private\n         */\n        _XhrKiller: function () {\n            var $widget = this;\n\n            if ($widget.xhr !== undefined && $widget.xhr !== null) {\n                $widget.xhr.abort();\n                $widget.xhr = null;\n            }\n        },\n\n        /**\n         * Emulate mouse click on all swatches that should be selected\n         * @param {Object} [selectedAttributes]\n         * @private\n         */\n        _EmulateSelected: function (selectedAttributes) {\n            $.each(selectedAttributes, $.proxy(function (attributeCode, optionId) {\n                var elem = this.element.find('.' + this.options.classes.attributeClass +\n                    '[data-attribute-code=\"' + attributeCode + '\"] [data-option-id=\"' + optionId + '\"]'),\n                    parentInput = elem.parent();\n\n                if (elem.hasClass('selected')) {\n                    return;\n                }\n\n                if (parentInput.hasClass(this.options.classes.selectClass)) {\n                    parentInput.val(optionId);\n                    parentInput.trigger('change');\n                } else {\n                    elem.trigger('click');\n                }\n            }, this));\n        },\n\n        /**\n         * Emulate mouse click or selection change on all swatches that should be selected\n         * @param {Object} [selectedAttributes]\n         * @private\n         */\n        _EmulateSelectedByAttributeId: function (selectedAttributes) {\n            $.each(selectedAttributes, $.proxy(function (attributeId, optionId) {\n                var elem = this.element.find('.' + this.options.classes.attributeClass +\n                    '[data-attribute-id=\"' + attributeId + '\"] [data-option-id=\"' + optionId + '\"]'),\n                    parentInput = elem.parent();\n\n                if (elem.hasClass('selected')) {\n                    return;\n                }\n\n                if (parentInput.hasClass(this.options.classes.selectClass)) {\n                    parentInput.val(optionId);\n                    parentInput.trigger('change');\n                } else {\n                    elem.trigger('click');\n                }\n            }, this));\n        },\n\n        /**\n         * Get default options values settings with either URL query parameters\n         * @private\n         */\n        _getSelectedAttributes: function () {\n            var hashIndex = window.location.href.indexOf('#'),\n                selectedAttributes = {},\n                params;\n\n            if (hashIndex !== -1) {\n                params = $.parseQuery(window.location.href.substr(hashIndex + 1));\n\n                selectedAttributes = _.invert(_.mapObject(_.invert(params), function (attributeId) {\n                    var attribute = this.options.jsonConfig.mappedAttributes[attributeId];\n\n                    return attribute ? attribute.code : attributeId;\n                }.bind(this)));\n            }\n\n            return selectedAttributes;\n        },\n\n        /**\n         * Callback which fired after gallery gets initialized.\n         *\n         * @param {HTMLElement} element - DOM element associated with a gallery.\n         */\n        _onGalleryLoaded: function (element) {\n            var galleryObject = element.data('gallery');\n\n            this.options.mediaGalleryInitial = galleryObject.returnCurrentImages();\n        },\n\n        /**\n         * Sets mediaCache for cases when jsonConfig contains preSelectedGallery on layered navigation result pages\n         *\n         * @private\n         */\n        _setPreSelectedGallery: function () {\n            var mediaCallData;\n\n            if (this.options.jsonConfig.preSelectedGallery) {\n                mediaCallData = {\n                    'product_id': this.getProduct()\n                };\n\n                this.options.mediaCache[JSON.stringify(mediaCallData)] = this.options.jsonConfig.preSelectedGallery;\n            }\n        },\n\n        /**\n         * Callback for quantity change event.\n         */\n        _onQtyChanged: function () {\n            var $price = this.element.parents(this.options.selectorProduct)\n                .find(this.options.selectorProductPrice);\n\n            $price.trigger(\n                'updatePrice',\n                {\n                    'prices': this._getPrices(this._getNewPrices(), $price.priceBox('option').prices)\n                }\n            );\n        }\n    });\n\n    return $.mage.SwatchRenderer;\n});\n","Magento_Swatches/js/catalog-add-to-cart.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\nrequire([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    /**\n     * Add selected swatch attributes to redirect url\n     *\n     * @see Magento_Catalog/js/catalog-add-to-cart\n     */\n    $('body').on('catalogCategoryAddToCartRedirect', function (event, data) {\n        $(data.form).find('[name*=\"super\"]').each(function (index, item) {\n            var $item = $(item),\n                attr;\n\n            if ($item.attr('data-attr-name')) {\n                attr = $item.attr('data-attr-name');\n            } else {\n                attr = $item.parent().attr('attribute-code');\n            }\n            data.redirectParameters.push(attr + '=' + $item.val());\n\n        });\n    });\n});\n","Magento_Swatches/js/configurable-customer-data.js":"require([\n    'jquery',\n    'Magento_ConfigurableProduct/js/options-updater'\n], function ($, Updater) {\n    'use strict';\n\n    var selectors = {\n            formSelector: '#product_addtocart_form',\n            swatchSelector: '.swatch-opt'\n        },\n        swatchWidgetName = 'mage-SwatchRenderer',\n        widgetInitEvent = 'swatch.initialized',\n\n    /**\n    * Sets all configurable swatch attribute's selected values\n    */\n    updateSwatchOptions = function () {\n        var swatchWidget = $(selectors.swatchSelector).data(swatchWidgetName);\n\n        if (!swatchWidget || !swatchWidget._EmulateSelectedByAttributeId) {\n            return;\n        }\n        swatchWidget._EmulateSelectedByAttributeId(this.productOptions);\n    },\n    updater = new Updater(widgetInitEvent, updateSwatchOptions);\n\n    updater.listen();\n});\n","Magento_Weee/js/tax-toggle.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    /**\n     * @param {Object} config\n     * @param {jQuery.Event} e\n     */\n    function onToggle(config, e) {\n        var elem = $(e.currentTarget),\n            expandedClassName = config.expandedClassName || 'cart-tax-total-expanded';\n\n        elem.toggleClass(expandedClassName);\n\n        $(config.itemTaxId).toggle();\n    }\n\n    return function (data, el) {\n        $(el).on('click', onToggle.bind(null, data));\n    };\n});\n","Magento_Weee/js/price/adjustment.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/grid/columns/column'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            bodyTmpl: 'Magento_Weee/price/adjustment',\n            dataSource: '${ $.parentName }.provider',\n            //Weee configuration constants can be configured from backend\n            inclFptWithDesc: 1,//show FPT and description\n            inclFpt: 0, //show FPT attribute\n            exclFpt: 2, //do not show FPT\n            bothFptPrices: 3 //show price without FPT and with FPT and with description\n        },\n\n        /**\n         * Get Weee attributes.\n         *\n         * @param {Object} row\n         * @return {HTMLElement} Weee html\n         */\n        getWeeeAttributes: function (row) {\n            return row['price_info']['extension_attributes']['weee_attributes'];\n        },\n\n        /**\n         * Get Weee without Tax attributes.\n         *\n         * @param {Object} taxAmount\n         * @return {HTMLElement} Weee html\n         */\n        getWeeeTaxWithoutTax: function (taxAmount) {\n            return taxAmount['amount_excl_tax'];\n        },\n\n        /**\n         * UnsanitizedHtml version of getWeeeTaxWithoutTax.\n         *\n         * @param {Object} taxAmount\n         * @return {HTMLElement} Weee html\n         */\n        getWeeeTaxWithoutTaxUnsanitizedHtml: function (taxAmount) {\n            return this.getWeeeTaxWithoutTax(taxAmount);\n        },\n\n        /**\n         * Get Weee with Tax attributes.\n         *\n         * @param {Object} taxAmount\n         * @return {HTMLElement} Weee html\n         */\n        getWeeeTaxWithTax: function (taxAmount) {\n            return taxAmount['tax_amount_incl_tax'];\n        },\n\n        /**\n         * UnsanitizedHtml version of getWeeeTaxWithTax.\n         *\n         * @param {Object} taxAmount\n         * @return {HTMLElement} Weee html\n         */\n        getWeeeTaxWithTaxUnsanitizedHtml: function (taxAmount) {\n            return this.getWeeeTaxWithTax(taxAmount);\n        },\n\n        /**\n         * Get Weee Tax name.\n         *\n         * @param {String} taxAmount\n         * @return {String} Weee name\n         */\n        getWeeTaxAttributeName: function (taxAmount) {\n            return taxAmount['attribute_code'];\n        },\n\n        /**\n         * Set price type.\n         *\n         * @param {String} priceType\n         * @return {Object}\n         */\n        setPriceType: function (priceType) {\n            this.taxPriceType = priceType;\n\n            return this;\n        },\n\n        /**\n         * Check if Weee Tax must be shown.\n         *\n         * @param {Object} row\n         * @return {Boolean}\n         */\n        isShown: function (row) {\n            return row['price_info']['extension_attributes']['weee_attributes'].length;\n        },\n\n        /**\n         * Get Weee final price.\n         *\n         * @param {Object} row\n         * @return {HTMLElement} Weee final price html\n         */\n        getWeeeAdjustment: function (row) {\n            return row['price_info']['extension_attributes']['weee_adjustment'];\n        },\n\n        /**\n         * UnsanitizedHtml version of getWeeeAdjustment.\n         *\n         * @param {Object} row\n         * @return {HTMLElement} Weee final price html\n         */\n        getWeeeAdjustmentUnsanitizedHtml: function (row) {\n            return this.getWeeeAdjustment(row);\n        },\n\n        /**\n         * Return whether display setting is to display price including FPT only.\n         *\n         * @return {Boolean}\n         */\n        displayPriceInclFpt: function () {\n            return +this.source.data.displayWeee === this.inclFpt;\n        },\n\n        /**\n         * Return whether display setting is to display\n         * price including FPT and FPT description.\n         *\n         * @return {Boolean}\n         */\n        displayPriceInclFptDescr: function () {\n            return +this.source.data.displayWeee === this.inclFptWithDesc;\n        },\n\n        /**\n         * Return whether display setting is to display price\n         * excluding FPT but including FPT description and final price.\n         *\n         * @return {Boolean}\n         */\n        displayPriceExclFptDescr: function () {\n            return +this.source.data.displayWeee === this.exclFpt;\n        },\n\n        /**\n         * Return whether display setting is to display price excluding FPT.\n         *\n         * @return {Boolean}\n         */\n        displayPriceExclFpt: function () {\n            return +this.source.data.displayWeee === this.bothFptPrices;\n        },\n\n        /**\n         * Return whether display setting is to display price excluding tax.\n         *\n         * @return {Boolean}\n         */\n        displayPriceExclTax: function () {\n            return +this.source.data.displayTaxes === this.inclFptWithDesc;\n        },\n\n        /**\n         * Return whether display setting is to display price including tax.\n         *\n         * @return {Boolean}\n         */\n        displayPriceInclTax: function () {\n            return +this.source.data.displayTaxes === this.exclFpt;\n        },\n\n        /**\n         * Return whether display setting is to display\n         * both price including tax and price excluding tax.\n         *\n         * @return {Boolean}\n         */\n        displayBothPricesTax: function () {\n            return +this.source.data.displayTaxes === this.bothFptPrices;\n        }\n    });\n});\n","Magento_Weee/js/view/cart/totals/weee.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Weee/js/view/checkout/summary/weee'\n], function (Component) {\n    'use strict';\n\n    return Component.extend({\n\n        /**\n         * @override\n         */\n        isFullMode: function () {\n            return true;\n        }\n    });\n});\n","Magento_Weee/js/view/checkout/summary/weee.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Checkout/js/view/summary/abstract-total',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/model/totals',\n    'Magento_Catalog/js/price-utils'\n], function (Component, quote, totals) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Weee/checkout/summary/weee'\n        },\n        isIncludedInSubtotal: window.checkoutConfig.isIncludedInSubtotal,\n        totals: totals.totals,\n\n        /**\n         * @returns {Number}\n         */\n        getWeeeTaxSegment: function () {\n            var weee = totals.getSegment('weee_tax') || totals.getSegment('weee');\n\n            if (weee !== null && weee.hasOwnProperty('value')) {\n                return weee.value;\n            }\n\n            return 0;\n        },\n\n        /**\n         * Get weee value\n         * @returns {String}\n         */\n        getValue: function () {\n            return this.getFormattedPrice(this.getWeeeTaxSegment());\n        },\n\n        /**\n         * Weee display flag\n         * @returns {Boolean}\n         */\n        isDisplayed: function () {\n            return this.isFullMode() && this.getWeeeTaxSegment() > 0;\n        }\n    });\n});\n","Magento_Weee/js/view/checkout/summary/item/price/row_excl_tax.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Weee/js/view/checkout/summary/item/price/weee'\n], function (weee) {\n    'use strict';\n\n    return weee.extend({\n        defaults: {\n            template: 'Magento_Weee/checkout/summary/item/price/row_excl_tax'\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Number}\n         */\n        getFinalRowDisplayPriceExclTax: function (item) {\n            var rowTotalExclTax = parseFloat(item['row_total']);\n\n            if (!window.checkoutConfig.getIncludeWeeeFlag) {\n                rowTotalExclTax += parseFloat(item['qty']) *\n                    parseFloat(item['weee_tax_applied_amount']);\n            }\n\n            return rowTotalExclTax;\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Number}\n         */\n        getRowDisplayPriceExclTax: function (item) {\n            var rowTotalExclTax = parseFloat(item['row_total']);\n\n            if (window.checkoutConfig.getIncludeWeeeFlag) {\n                rowTotalExclTax += this.getRowWeeeTaxExclTax(item);\n            }\n\n            return rowTotalExclTax;\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Number}\n         */\n        getRowWeeeTaxExclTax: function (item) {\n            var totalWeeeTaxExclTaxApplied = 0,\n                weeeTaxAppliedAmounts;\n\n            if (item['weee_tax_applied']) {\n                weeeTaxAppliedAmounts = JSON.parse(item['weee_tax_applied']);\n                weeeTaxAppliedAmounts.forEach(function (weeeTaxAppliedAmount) {\n                    totalWeeeTaxExclTaxApplied += parseFloat(Math.max(weeeTaxAppliedAmount['row_amount'], 0));\n                });\n            }\n\n            return totalWeeeTaxExclTaxApplied;\n        }\n\n    });\n});\n","Magento_Weee/js/view/checkout/summary/item/price/row_incl_tax.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Weee/js/view/checkout/summary/item/price/weee'\n], function (weee) {\n    'use strict';\n\n    return weee.extend({\n        defaults: {\n            template: 'Magento_Weee/checkout/summary/item/price/row_incl_tax',\n            displayArea: 'row_incl_tax'\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Number}\n         */\n        getFinalRowDisplayPriceInclTax: function (item) {\n            var rowTotalInclTax = parseFloat(item['row_total_incl_tax']);\n\n            if (!window.checkoutConfig.getIncludeWeeeFlag) {\n                rowTotalInclTax += this.getRowWeeeTaxInclTax(item);\n            }\n\n            return rowTotalInclTax;\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Number}\n         */\n        getRowDisplayPriceInclTax: function (item) {\n            var rowTotalInclTax = parseFloat(item['row_total_incl_tax']);\n\n            if (window.checkoutConfig.getIncludeWeeeFlag) {\n                rowTotalInclTax += this.getRowWeeeTaxInclTax(item);\n            }\n\n            return rowTotalInclTax;\n        },\n\n        /**\n         * @param {Object}item\n         * @return {Number}\n         */\n        getRowWeeeTaxInclTax: function (item) {\n            var totalWeeeTaxInclTaxApplied = 0,\n                weeeTaxAppliedAmounts;\n\n            if (item['weee_tax_applied']) {\n                weeeTaxAppliedAmounts = JSON.parse(item['weee_tax_applied']);\n                weeeTaxAppliedAmounts.forEach(function (weeeTaxAppliedAmount) {\n                    totalWeeeTaxInclTaxApplied += parseFloat(Math.max(weeeTaxAppliedAmount['row_amount_incl_tax'], 0));\n                });\n            }\n\n            return totalWeeeTaxInclTaxApplied;\n        }\n\n    });\n});\n","Magento_Weee/js/view/checkout/summary/item/price/weee.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Checkout/js/view/summary/abstract-total',\n    'Magento_Checkout/js/model/quote'\n], function (Component) {\n    'use strict';\n\n    return Component.extend({\n        /**\n         * @param {Object} item\n         * @return {Boolean}\n         */\n        isDisplayPriceWithWeeeDetails: function (item) {\n            if (!parseFloat(item['weee_tax_applied_amount']) || parseFloat(item['weee_tax_applied_amount'] <= 0)) {\n                return false;\n            }\n\n            return window.checkoutConfig.isDisplayPriceWithWeeeDetails;\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Boolean}\n         */\n        isDisplayFinalPrice: function (item) {\n            if (!parseFloat(item['weee_tax_applied_amount'])) {\n                return false;\n            }\n\n            return window.checkoutConfig.isDisplayFinalPrice;\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Array}\n         */\n        getWeeeTaxApplied: function (item) {\n            if (item['weee_tax_applied']) {\n                return JSON.parse(item['weee_tax_applied']);\n            }\n\n            return [];\n        }\n    });\n});\n","Amasty_JetTheme/storybook-build/main.e9a46862aa8612ad440e.bundle.min.js":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{122:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+\"static/media/primary-image-1.70c56379.jpg\"},123:function(module){module.exports=JSON.parse('{\"@color-black\":\"#070605\",\"@color-brown\":\"#3d3731\",\"@color-gray\":\"#a8a69f\",\"@color-gray-dark\":\"#4a4948\",\"@color-gray-light\":\"#dfdedd\",\"@color-gray-lighter\":\"#f5f5f5\",\"@color-green\":\"#86af28\",\"@color-lemon\":\"#fafce2\",\"@color-olive\":\"#536131\",\"@color-orange\":\"#ff9a02\",\"@color-purple\":\"#6b26fd\",\"@color-red\":\"#f23b3b\",\"@color-white\":\"#fff\",\"@amtheme__error__color\":\"#fce0e0\",\"@amtheme__error-text__color\":\"#C01313\",\"@amtheme__note__color\":\"#ffd43e\",\"@amtheme__note-text__color\":\"#fff\",\"@amtheme__success__color\":\"#e8fad5\",\"@amtheme__success-text__color\":\"#41710d\"}')},283:function(module,exports){module.exports='<div class=\"breadcrumbs\">\\n    <ul class=\"items\">\\n        <li class=\"item\">\\n                <a href=\"#\" title=\"Go to Home Page\">\\n                    Home\\n                </a>\\n            </li>\\n        <li class=\"item\">\\n                <a href=\"#\" title=\"Women\">\\n                    Women\\n                </a>\\n            </li>\\n        <li class=\"item\">\\n                <a href=\"#\" title=\"Tops\">\\n                    Tops\\n                </a>\\n            </li>\\n        <li class=\"item\">\\n                <strong>Hoodies &amp; Sweatshirts</strong>\\n        </li>\\n    </ul>\\n</div>\\n'},284:function(module,exports){module.exports='<button class=\"size-l\" title=\"Button\" aria-label=\"Button\">\\n    Button Secondary Large\\n</button>\\n<br><br>\\n<button title=\"Button\" aria-label=\"Button\">\\n    Button Secondary default\\n</button>\\n<br><br>\\n<button class=\"size-s\" title=\"Button\" aria-label=\"Button\">\\n    Button Secondary Small\\n</button>\\n'},285:function(module,exports){module.exports='<button class=\"action primary\" title=\"Button\" aria-label=\"Button\">\\n    Button Primary default\\n</button>\\n<br>\\n<br>\\n<button class=\"action primary size-xl\" title=\"Button\" aria-label=\"Button\">\\n    Button Primary Large\\n</button>\\n<br>\\n<br>\\n<button class=\"action primary size-xl size-responsive\" title=\"Button\" aria-label=\"Button\">\\n    Button Responsive\\n</button>\\n'},286:function(module,exports){module.exports='<button class=\"action outline\" title=\"Button\" aria-label=\"Button\">\\n    Button outline\\n</button>\\n'},287:function(module,exports){module.exports='<a href=\"#\" class=\"action primary\" title=\"Button\" aria-label=\"Button\">\\n    Link as button\\n</a>\\n'},288:function(module,exports){module.exports='<button class=\"size-s button-as-link\" title=\"Button\" aria-label=\"Button\">\\n    Button as link\\n</button>\\n'},289:function(module,exports){module.exports='<a href=\"#\" class=\"action back\" title=\"Back to Shopping Cart\">\\n    <svg class=\"amtheme-icon\">\\n        <use xlink:href=\"#icon-arrow-left-min\"></use>\\n    </svg>\\n    Back to Cart\\n</a>\\n'},290:function(module,exports){module.exports='<div class=\"amtheme-row\" data-amtheme-js=\"row\">\\n    <div class=\"amtheme-label\">\\n        <strong class=\"amtheme-variable\" data-amtheme-js=\"variable\">\\n            @color\\n        </strong>\\n        <span class=\"amtheme-text\">\\n            <code data-amtheme-js=\"color\">\\n                #000\\n            </code>\\n        </span>\\n    </div>\\n    <div class=\"amtheme-color\" aria-label=\"color\" data-amtheme-js=\"color-palette\">\\n    </div>\\n</div>\\n'},291:function(module,exports){module.exports='<form class=\"form _am-form-divider\"\\n      action=\"\">\\n    <fieldset class=\"fieldset\">\\n        <legend class=\"legend\">\\n            fieldset legend\\n        </legend>\\n        <div class=\"fields -double\">\\n            <div class=\"field\">\\n                <label class=\"label\" for=\"name\">\\n                    Name\\n                </label>\\n                <div class=\"control\">\\n                    <input type=\"text\"\\n                           name=\"name\"\\n                           id=\"name\"\\n                           value=\"\"\\n                           title=\"Name\"\\n                           class=\"input-text\"\\n                    />\\n                </div>\\n            </div>\\n            <div class=\"field\">\\n                <label class=\"label\" for=\"Lastname\">\\n                    Lastname\\n                </label>\\n                <div class=\"control\">\\n                    <input type=\"text\"\\n                           name=\"Lastname\"\\n                           id=\"Lastname\"\\n                           value=\"\"\\n                           title=\"Lastname\"\\n                           class=\"input-text\"\\n                    />\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\"field\">\\n            <label class=\"label\" for=\"addres1\">\\n                Address 1\\n            </label>\\n            <div class=\"control\">\\n                <input type=\"text\"\\n                       name=\"addres1\"\\n                       id=\"addres1\"\\n                       value=\"\"\\n                       title=\"addres1\"\\n                       class=\"input-text\"\\n                />\\n            </div>\\n        </div>\\n\\n        <div class=\"field\">\\n            <label class=\"label\" for=\"addres2\">\\n                Address 2\\n            </label>\\n            <div class=\"control\">\\n                <input type=\"text\"\\n                       name=\"addres2\"\\n                       id=\"addres2\"\\n                       value=\"\"\\n                       title=\"addres2\"\\n                       class=\"input-text\"\\n                />\\n            </div>\\n        </div>\\n    </fieldset>\\n\\n    <fieldset class=\"fieldset\">\\n        <div class=\"fields -double\">\\n            <div class=\"field date field-dob\">\\n                <label class=\"label\" for=\"dob\">Date of Birth</label>\\n                <div class=\"control customer-dob\">\\n                    <input type=\"text\" name=\"dob\" id=\"dob\" value=\"7/7/1936\"\\n                           class=\"_has-datepicker\"\\n                            autocomplete=\"on\">\\n                    <button type=\"button\" class=\"ui-datepicker-trigger v-middle\">\\n                        Select Date\\n                    </button>\\n                 </div>\\n            </div>\\n\\n            <div class=\"field number\">\\n                <label class=\"label\" for=\"number\">Age</label>\\n                <div class=\"control\">\\n                    <input type=\"number\"\\n                           name=\"number\"\\n                           id=\"number\"\\n                    />\\n                </div>\\n            </div>\\n        </div>\\n    </fieldset>\\n\\n    <fieldset class=\"fieldset\">\\n        <legend class=\"legend\">\\n            fieldset legend\\n        </legend>\\n        <div class=\"fields -double\">\\n            <div class=\"field email required\">\\n                <label class=\"label\" for=\"email\">\\n                    New Email\\n                </label>\\n                <div class=\"control\">\\n                    <input type=\"email\"\\n                           name=\"email\"\\n                           id=\"email\"\\n                           value=\"\"\\n                           title=\"Email\"\\n                           class=\"input-text\"\\n                    />\\n                </div>\\n            </div>\\n            <div class=\"field password\">\\n                <label class=\"label\" for=\"current-password\">\\n                    Password\\n                </label>\\n                <div class=\"control\">\\n                    <input type=\"password\"\\n                           class=\"input-text\"\\n                           name=\"current_password\"\\n                           id=\"current-password\"\\n                    />\\n                </div>\\n            </div>\\n        </div>\\n    </fieldset>\\n</form>\\n'},292:function(module,exports){module.exports='<form action=\"#\" method=\"post\">\\n    <h2>Standart Select</h2>\\n    <div class=\"flex-wrap\">\\n        <div class=\"field\">\\n            <label class=\"label\" for=\"select-choice-test\">Standart Select Dropdown:</label>\\n            <select class=\"\" name=\"select-choice-test\" id=\"select-choice-test\" tabindex=\"-1\">\\n                <option value=\"\">Please select</option>\\n                <option value=\"1\">Choice 1</option>\\n                <option value=\"2\">Choice 2</option>\\n                <option value=\"3\">Choice 3</option>\\n            </select>\\n        </div>\\n        <div class=\"field\">\\n            <label class=\"label\" for=\"multiselect-choice-test\">Standart Multiselect Dropdown Choice:</label>\\n            <select class=\"\" name=\"multiselect-choice-test\" id=\"multiselect-choice-test\" multiple=\"multiple\" tabindex=\"-1\">\\n                <option value=\"choice-1\">Choice 1</option>\\n                <option value=\"choice-2\">Choice 2</option>\\n                <option value=\"choice-3\">Choice 3</option>\\n            </select>\\n        </div>\\n    </div>\\n\\n    <h2>Custom Select</h2>\\n    <div class=\"flex-wrap\">\\n        <div class=\"field\">\\n            <label class=\"label\">Normal Custom Select </label>\\n            <div class=\"amtheme-select-block\" data-amselect-js=\"select\">\\n                <span role=\"button\" tabindex=\"0\" class=\"amtheme-placeholder\" data-amselect-js=\"placeholder\">Please select</span>\\n            </div>\\n        </div>\\n\\n        <div class=\"field\">\\n            <label class=\"label\">Error Custom Select </label>\\n            <div class=\"mage-error\"></div>\\n            <div generated=\"true\" class=\"mage-error\" >This is a required field.</div>\\n            <div class=\"amtheme-select-block\" data-amselect-js=\"select\">\\n                <span role=\"button\" tabindex=\"0\" class=\"amtheme-placeholder\" data-amselect-js=\"placeholder\">Please select</span>\\n            </div>\\n        </div>\\n\\n        <div class=\"field margin\">\\n            <label class=\"label\">Active Custom Select </label>\\n            <div class=\"amtheme-select-block -active\" data-amselect-js=\"select\">\\n                <span role=\"button\" tabindex=\"0\" class=\"amtheme-placeholder\" data-amselect-js=\"placeholder\">Please select</span>\\n                <ul role=\"list\" class=\"amtheme-select-options\" data-amselect-js=\"options\" >\\n                    <li class=\"amtheme-option\"\\n                        tabindex=\"0\"\\n                        aria-label=\"Please select\"\\n                        data-amselect-js=\"item\">\\n                        Please select\\n                    </li>\\n                    <li class=\"amtheme-option\"\\n                        tabindex=\"0\"\\n                        data-amselect-js=\"item\"\\n                        data-amtheme-value=\"1\"\\n                    >\\n                        <span class=\"amtheme-title\">option 1</span>\\n                    </li>\\n                    <li class=\"amtheme-option\"\\n                        tabindex=\"0\"\\n                        data-amselect-js=\"item\"\\n                        data-amtheme-value=\"2\"\\n                    >\\n                        <span class=\"amtheme-title\">option 2</span>\\n                    </li>\\n                    <li class=\"amtheme-option\"\\n                        tabindex=\"0\"\\n                        data-amselect-js=\"item\"\\n                        data-amtheme-value=\"3\"\\n                    >\\n                        <span class=\"amtheme-title\">option 3</span>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n\\n        <div class=\"field margin\">\\n            <label class=\"label\">Custom MultiSelect</label>\\n            <div class=\"amtheme-select-block -multiple -active\" data-amselect-js=\"select\">\\n                <span role=\"button\" tabindex=\"0\" class=\"amtheme-placeholder\" data-amselect-js=\"placeholder\">Please select</span>\\n                <ul role=\"list\" class=\"amtheme-select-options\" data-amselect-js=\"options\">\\n                    <li class=\"amtheme-option\" tabindex=\"0\" data-amselect-js=\"item\" data-amtheme-value=\"choice-1\">\\n                        <span class=\"amtheme-title\">Lorem ipsum dolor sit amet, consectetur adipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingv elit. Dolore ex fuga hic incidunt nesciunt possimus quod sed sint velit voluptatibus. Ab at eaque eligendi excepturi facilis molestiae, porro praesentium ut. Aliquam autem beatae dicta id minima quae quam? Accusamus ad inventore minima molestias nam necessitatibus nesciunt nobis quidem sequi ut?</span>\\n                    </li>\\n                    <li class=\"amtheme-option -selected\" tabindex=\"0\" data-amselect-js=\"item\" data-amtheme-value=\"choice-2\">\\n                        <span class=\"amtheme-title\">option 2</span>\\n                    </li>\\n                    <li class=\"amtheme-option\" tabindex=\"0\" data-amselect-js=\"item\" data-amtheme-value=\"choice-3\">\\n                        <span class=\"amtheme-title\">option 3</span>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n\\n        <div class=\"field\">\\n            <label class=\"label\">Custom MultiSelect Added</label>\\n            <div class=\"amtheme-select-block -multiple\" data-amselect-js=\"select\">\\n                <span role=\"button\" tabindex=\"0\" class=\"amtheme-placeholder\" data-amselect-js=\"placeholder\">Please select</span>\\n                <ul role=\"list\" class=\"amtheme-select-options\" data-amselect-js=\"options\">\\n                    <li class=\"amtheme-option\" tabindex=\"0\" data-amselect-js=\"item\" data-amtheme-value=\"choice-1\">\\n                        <span class=\"amtheme-title\">Lorem ipsum dolor sit amet, consectetur adipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingadipisicingv elit. Dolore ex fuga hic incidunt nesciunt possimus quod sed sint velit voluptatibus. Ab at eaque eligendi excepturi facilis molestiae, porro praesentium ut. Aliquam autem beatae dicta id minima quae quam? Accusamus ad inventore minima molestias nam necessitatibus nesciunt nobis quidem sequi ut?</span>\\n                    </li>\\n                    <li class=\"amtheme-option -selected\" tabindex=\"0\" data-amselect-js=\"item\" data-amtheme-value=\"choice-2\">\\n                        <span class=\"amtheme-title\">option 2</span>\\n                    </li>\\n                    <li class=\"amtheme-option\" tabindex=\"0\" data-amselect-js=\"item\" data-amtheme-value=\"choice-3\">\\n                        <span class=\"amtheme-title\">option 3</span>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            \\x3c!--   Tags generates by js   --\\x3e\\n            <ul class=\"amtheme-tags-block\" data-amselect-js=\"tags\">\\n                <li class=\"amtheme-option -selected\" tabindex=\"-1\" data-amselect-js=\"item\" data-amtheme-value=\"choice-1\">\\n                    <span class=\"amtheme-title\">Lorem ipsum siseus</span>\\n                    <button class=\"amtheme-delete-button\"\\n                            aria-label=\"delete\"\\n                            type=\"button\"\\n                            tabindex=\"0\">delete</button>\\n                </li>\\n                <li class=\"amtheme-option -selected\" tabindex=\"-1\" data-amselect-js=\"item\" data-amtheme-value=\"choice-3\">\\n                    <span class=\"amtheme-title\">option 3</span>\\n                    <button class=\"amtheme-delete-button\"\\n                            type=\"button\"\\n                            aria-label=\"delete\"\\n                            tabindex=\"0\">delete</button>\\n                </li>\\n            </ul>\\n            \\x3c!--  END Tags generates by js   --\\x3e\\n        </div>\\n    </div>\\n\\n    <hr style=\"margin-top: 150px;\">\\n    <h2>Source code</h2>\\n    <div class=\"source-wrap\">\\n        <h3>Custom select</h3>\\n        <xmp class=\"source-code\">\\n            <div class=\"field\">\\n                <label class=\"label\" for=\"select-choice\">Select Dropdown Choice:</label>\\n                <select required=\"true\"\\n                        class=\"amtheme-select\"\\n                        name=\"select-choice\"\\n                        id=\"select-choice\"\\n                        tabindex=\"-1\">\\n                    <option value=\"\">Please select</option>\\n                    <option value=\"1\">Choice 1</option>\\n                    <option value=\"2\">Choice 2</option>\\n                    <option value=\"3\">Choice 3</option>\\n                </select>\\n\\n                <div class=\"amtheme-select-block\"\\n                     data-mage-init=\\'{\"amSelect\": {\"selectId\": \"select-choice\"}}\\'\\n                     data-amselect-js=\"select\">\\n                    <span role=\"button\"\\n                          tabindex=\"0\"\\n                          class=\"amtheme-placeholder\"\\n                          data-amselect-js=\"placeholder\">\\n                        <span class=\"amtheme-content\"\\n                              data-amselect-js=\"placeholder-content\">\\n                            Please select\\n                        </span>\\n                    </span>\\n                    <ul role=\"list\"\\n                        class=\"amtheme-select-options\"\\n                        data-amselect-js=\"options\">\\n                        <li class=\"amtheme-option\"\\n                            tabindex=\"0\"\\n                            data-amselect-js=\"item\">\\n                            Please select\\n                        </li>\\n                        <li class=\"amtheme-option\"\\n                            tabindex=\"0\"\\n                            data-amselect-js=\"item\"\\n                            data-amselect-value=\"1\">\\n                            <span class=\"amtheme-title\">option 1</span>\\n                        </li>\\n                        <li class=\"amtheme-option\"\\n                            tabindex=\"0\"\\n                            data-amselect-js=\"item\"\\n                            data-amselect-value=\"2\">\\n                            <span class=\"amtheme-title\">option 2</span>\\n                        </li>\\n                        <li class=\"amtheme-option\"\\n                            tabindex=\"0\"\\n                            data-amselect-js=\"item\"\\n                            data-amselect-value=\"3\">\\n                            <span class=\"amtheme-title\">option 3</span>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </xmp>\\n        <h3>Custom multiselect</h3>\\n        <xmp class=\"source-code\">\\n            <div class=\"field\">\\n                <label class=\"label\" for=\"multiselect-choice\">Multiselect Dropdown Choice:</label>\\n                <select required=\"true\"\\n                        class=\"amtheme-select\"\\n                        name=\"multiselect-choice\"\\n                        id=\"multiselect-choice\"\\n                        multiple=\"multiple\" tabindex=\"-1\">\\n                    <option value=\"choice-1\">Choice 1</option>\\n                    <option value=\"choice-2\">Choice 2</option>\\n                    <option value=\"choice-3\">Choice 3</option>\\n                </select>\\n\\n                <div class=\"amtheme-select-block\"\\n                     data-mage-init=\\'{\"amSelect\": {\"selectId\": \"multiselect-choice\", \"selectType\": \"multiple\"}}\\'\\n                     data-amselect-js=\"select\">\\n                    <span role=\"button\"\\n                          tabindex=\"0\"\\n                          class=\"amtheme-placeholder\"\\n                          data-amselect-js=\"placeholder\">\\n                        <span class=\"amtheme-content\"\\n                              data-amselect-js=\"placeholder-content\">\\n                            Please select\\n                        </span>\\n                    </span>\\n                    <ul role=\"list\"\\n                        class=\"amtheme-select-options\"\\n                        data-amselect-js=\"options\">\\n                        <li class=\"amtheme-option\"\\n                            tabindex=\"0\"\\n                            data-amselect-js=\"item\"\\n                            data-amselect-value=\"choice-1\">\\n                            <span class=\"amtheme-title\">Lorem ipsum dolorequi ut?</span>\\n                        </li>\\n                        <li class=\"amtheme-option\"\\n                            tabindex=\"0\"\\n                            data-amselect-js=\"item\"\\n                            data-amselect-value=\"choice-2\">\\n                            <span class=\"amtheme-title\">option 2</span>\\n                        </li>\\n                        <li class=\"amtheme-option\"\\n                            tabindex=\"0\"\\n                            data-amselect-js=\"item\"\\n                            data-amselect-value=\"choice-3\">\\n                            <span class=\"amtheme-title\">option 3</span>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </xmp>\\n    </div>\\n</form>\\n'},293:function(module,exports){module.exports='<form action=\"#\" method=\"post\">\\n    <h2>Radio Button</h2>\\n    <div class=\"field\">\\n        <input type=\"radio\"\\n               name=\"radio-choice-1\"\\n               id=\"radio-choice-1\"\\n               tabindex=\"0\"\\n               value=\"choice-1\" />\\n        <label class=\"label\" for=\"radio-choice-1\">Choice 1</label>\\n\\n        <input class=\"\"\\n               type=\"radio\"\\n               name=\"radio-choice-1\"\\n               id=\"radio-choice-2\"\\n               tabindex=\"0\"\\n               value=\"choice-2\" />\\n        <label class=\"label\" for=\"radio-choice-2\">Choice 2</label>\\n\\n        <input class=\"mage-error\"\\n               type=\"radio\"\\n               name=\"radio-choice-1\"\\n               id=\"radio-choice-3\"\\n               tabindex=\"0\"\\n               value=\"choice-2\" />\\n        <label class=\"label\" for=\"radio-choice-3\">Choice 3 - error</label>\\n\\n        <div generated=\"true\" class=\"mage-error\">This is a required field.</div>\\n    </div>\\n\\n    <h2>Checkbox</h2>\\n    <div class=\"field\">\\n        <input type=\"checkbox\" name=\"checkbox\" id=\"checkbox1\" />\\n        <label class=\"label\" for=\"checkbox1\">Checkbox 1</label>\\n\\n        <input class=\"\" type=\"checkbox\" name=\"checkbox\" id=\"checkbox2\" />\\n        <label class=\"label\" for=\"checkbox2\">Checkbox 2</label>\\n\\n        <input class=\"mage-error\" type=\"checkbox\" name=\"checkbox\" id=\"checkbox3\" />\\n        <label class=\"label\" for=\"checkbox3\">Checkbox 3 - error</label>\\n\\n        <div generated=\"true\" class=\"mage-error\">This is a required field.</div>\\n    </div>\\n\\n    <hr>\\n\\n    <h2>Alternative html Radio Button</h2>\\n    <div class=\"field\">\\n        <label class=\"label\">Alt choice radio button</label>\\n        <div class=\"control\">\\n            <label for=\"rad-1\">\\n                <input type=\"radio\" name=\"rd\" id=\"rad-1\">\\n                <span>choice one</span>\\n            </label>\\n            <label for=\"rad-2\">\\n                <input class=\"required\" type=\"radio\" name=\"rd\" id=\"rad-2\">\\n                <span>choice two</span>\\n            </label>\\n        </div>\\n    </div>\\n    <div class=\"field required\">\\n        <label class=\"label\">This is your last chance. After this, there is no turning back.</label>\\n        <div class=\"control\">\\n            <label class=\"label\" for=\"rad-3\">\\n                <input type=\"radio\" name=\"rd2\" id=\"rad-3\">\\n                <span>red pill</span>\\n            </label>\\n            <label class=\"label\" for=\"rad-4\">\\n                <input class=\"required\" type=\"radio\" name=\"rd2\" id=\"rad-4\">\\n                <span>blue pill</span>\\n            </label>\\n        </div>\\n    </div>\\n\\n    <h2>Alternative html Checkbox</h2>\\n    <div class=\"field required\">\\n        <label class=\"label\">Alt choice checkbox</label>\\n        <div class=\"control\">\\n            <label for=\"ch-1\">\\n                <input type=\"checkbox\" name=\"ch1\" id=\"ch-1\">\\n                <span>choice one</span>\\n            </label>\\n            <label for=\"ch-2\">\\n                <input class=\"required\" type=\"checkbox\" name=\"ch2\" id=\"ch-2\">\\n                <span>choice two</span>\\n            </label>\\n        </div>\\n    </div>\\n    <div class=\"field choice\">\\n        <label class=\"label\">Alt choice checkbox</label>\\n        <div class=\"control\">\\n            <label class=\"label\" for=\"ch-3\">\\n                <input type=\"checkbox\" name=\"ch3\" id=\"ch-3\">\\n                <span>another choice</span>\\n            </label>\\n            <label class=\"label\" for=\"ch-4\">\\n                <input type=\"checkbox\" name=\"ch4\" id=\"ch-4\">\\n                <span>and another choice</span>\\n            </label>\\n        </div>\\n    </div>\\n</form>\\n'},294:function(module,exports){module.exports='<form action=\"#\" method=\"post\">\\n    <h2>Text input</h2>\\n    <div class=\"flex-wrap\">\\n        <div class=\"field\">\\n            <label class=\"label\" for=\"name\">Normal Text Input:</label>\\n            <input type=\"text\" name=\"name\" id=\"name\" value=\"\" tabindex=\"0\" />\\n        </div>\\n\\n        <div class=\"field\">\\n            <label class=\"label\" for=\"name1\">Error Text Input:</label>\\n            <input class=\"mage-error\" type=\"text\" name=\"name1\" id=\"name1\" value=\"\" tabindex=\"0\" />\\n            <div for=\"name1\" generated=\"true\" class=\"mage-error\" id=\"name1-error\">This is a required field.</div>\\n        </div>\\n    </div>\\n\\n    <h2>Textarea</h2>\\n    <div class=\"flex-wrap\">\\n        <div class=\"field\">\\n            <label class=\"label\" for=\"textarea\">Label</label>\\n            <textarea cols=\"55\" rows=\"3\" name=\"textarea\" id=\"textarea\"></textarea>\\n        </div>\\n\\n        <div class=\"field\">\\n            <label class=\"label\" for=\"textarea1\">Label error</label>\\n            <textarea class=\"mage-error\" cols=\"55\" rows=\"3\" name=\"textarea1\" id=\"textarea1\"></textarea>\\n            <div generated=\"true\" class=\"mage-error\">This is a required field.</div>\\n        </div>\\n    </div>\\n\\n    <h2>Datepicker</h2>\\n    <div class=\"flex-wrap\">\\n        <div class=\"field date field-dob\">\\n            <label class=\"label\" for=\"dob\">Date of Birth</label>\\n            <div class=\"control customer-dob\">\\n                <input type=\"text\" name=\"dob\" id=\"dob\" value=\"7/7/1936\"\\n                       class=\"_has-datepicker\"\\n                       autocomplete=\"on\">\\n                <button type=\"button\" class=\"ui-datepicker-trigger v-middle\">\\n                    Select Date\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h2>File</h2>\\n    <div class=\"flex-wrap\">\\n        <div class=\"field file\">\\n            <label class=\"label\">\\n                type File\\n            </label>\\n            <div class=\"control\" id=\"input-box-option_1_file\">\\n                <input type=\"file\"\\n                       name=\"option_1_file\"\\n                       id=\"option_1_file\"\\n                       tabindex=\"-1\"\\n                       class=\"amtheme-file product-custom-option required\"\\n                       aria-required=\"true\">\\n                <div class=\"amtheme-wrapper\">\\n                    <label class=\"action outline\"\\n                           tabindex=\"0\"\\n                           title=\"select\"\\n                           aria-label=\"select\"\\n                           data-amtheme-js=\"input-trigger\"\\n                           for=\"option_1_file\"\\n                           id=\"option_1_file-label\">\\n                        <svg class=\"amtheme-icon\">\\n                            <use xlink:href=\"#icon-plus\"></use>\\n                        </svg>\\n                        select\\n                    </label>\\n                    <span class=\"amtheme-file-output\">\\n                    <span data-amtheme-js=\"file-output\" class=\"-has-content\">some-file.png</span>\\n                    <button type=\"button\"\\n                            title=\"Remove\"\\n                            aria-label=\"Remove\"\\n                            class=\"amtheme-clear-input -icon-action\"\\n                            data-amtheme-js=\"clear-output\">\\n                        <svg class=\"amtheme-icon\">\\n                            <use xlink:href=\"#icon-close\"></use>\\n                        </svg>\\n                    </button>\\n                </span>\\n                </div>\\n                <input type=\"hidden\" name=\"option_1_file_action\" value=\"save_new\" aria-required=\"true\">\\n            </div>\\n            <p class=\"note\">\\n                Compatible file extensions to upload: png, jpg, gif\\n            </p>\\n            <p class=\"note\">\\n                Maximum image width: 1000px.\\n            </p>\\n            <p class=\"note\">\\n                Maximum image height: %1px.\\n            </p>\\n        </div>\\n    </div>\\n</form>\\n\\n<hr style=\"margin-top: 50px;\">\\n<h2>Source code</h2>\\n<div class=\"source-wrap\">\\n    <h3>Datepicker</h3>\\n    <xmp class=\"source-code\">\\n        <script>\\n            require([\\n                \\'jquery\\',\\n                \\'mage/translate\\',\\n                \\'mage/calendar\\'\\n            ], function ($, $t) {\\n                $(\\'#example-date\\').calendar({\\n                    changeMonth: true,\\n                    changeYear: true,\\n                    showButtonPanel: true,\\n                    currentText: $t(\\'Go Today\\'),\\n                    closeText: $t(\\'Close\\'),\\n                    showWeek: true\\n                });\\n            })\\n        <\\/script>\\n    </xmp>\\n</div>\\n'},295:function(module,exports){module.exports='<div class=\"amtheme-icon-block\" data-amtheme-js=\"icon\">\\n    <svg class=\"amtheme-icon\" data-amtheme-js=\"svg\">\\n        <use xlink:href=\"#id\" data-amtheme-js=\"id\"/>\\n    </svg>\\n    <p class=\"amtheme-label\" data-amtheme-js=\"label\">Icon name</p>\\n</div>\\n'},296:function(module){module.exports=JSON.parse('[\"icon-account\",\"icon-arrow-bottom\",\"icon-arrow-left-min\",\"icon-arrow-left\",\"icon-arrow-right-min\",\"icon-arrow-right\",\"icon-arrow-top\",\"icon-calendar\",\"icon-cart\",\"icon-check-big\",\"icon-check\",\"icon-close\",\"icon-compare\",\"icon-currency\",\"icon-facebook\",\"icon-filter\",\"icon-google\",\"icon-language\",\"icon-link\",\"icon-mail\",\"icon-menu\",\"icon-minus\",\"icon-plus\",\"icon-review-star\",\"icon-search\",\"icon-settings\",\"icon-share\",\"icon-sort-view\",\"icon-trash\",\"icon-twitter\",\"icon-update\",\"icon-view-block\",\"icon-view-list\",\"icon-wishlist\",\"icon-youtube\"]')},297:function(module,exports){module.exports='<div class=\"message-success success message\">\\n    <div>Success Message</div>\\n</div>\\n<div class=\"message-info info message\">\\n    <div>Information Message</div>\\n</div>\\n<div class=\"message-notice notice message\">\\n    <div>Notice Message</div>\\n</div>\\n<div class=\"message-warning warning message\">\\n    <div>Warning Message</div>\\n</div>\\n<div class=\"message-error error message\">\\n    <div>Error Message</div>\\n</div>\\n\\n'},298:function(module,exports){module.exports='<aside class=\"modal-popup confirm _show\" aria-describedby=\"modal-content-23\" data-role=\"modal\" data-type=\"popup\" tabindex=\"0\" style=\"z-index: 902;\">\\n    <div data-role=\"focusable-start\" tabindex=\"0\"></div>\\n    <div class=\"modal-inner-wrap\" data-role=\"focusable-scope\">\\n        <header class=\"modal-header\">\\n            <h1 id=\"modal-title-1231\" class=\"modal-title\" data-role=\"title\">\\n                Modal Title\\n                <span class=\"modal-subtitle\" data-role=\"subtitle\">Modal subtitle</span>\\n            </h1>\\n            <button class=\"action-close\" data-role=\"closeBtn\" type=\"button\">\\n                <span>Close</span>\\n            </button>\\n        </header>\\n        <div id=\"modal-content-23\" class=\"modal-content\" data-role=\"content\"><div>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</div></div>\\n        <footer class=\"modal-footer\">\\n            <button class=\"action-secondary action-dismiss\" type=\"button\" data-role=\"action\"><span>Cancel</span></button>\\n            <button class=\"action-primary action-accept\" type=\"button\" data-role=\"action\"><span>OK</span></button>\\n        </footer>\\n    </div>\\n    <div data-role=\"focusable-end\" tabindex=\"0\"></div>\\n</aside>\\n<div class=\"modals-overlay\" style=\"z-index: 901;\"></div>\\n'},299:function(module,exports){module.exports='<aside class=\"modal-popup modal-slide _inner-scroll _show\"\\n       aria-labelledby=\"modal-title-1\"\\n       aria-describedby=\"modal-content-1\"\\n       data-role=\"modal\"\\n       data-type=\"popup\"\\n       tabindex=\"0\"\\n       style=\"z-index: 902;\">\\n    <div data-role=\"focusable-start\" tabindex=\"0\"></div>\\n    <div class=\"modal-inner-wrap\" data-role=\"focusable-scope\">\\n        <header class=\"modal-header\">\\n            <h1 id=\"modal-title-1\" class=\"modal-title\" data-role=\"title\">\\n                Modal Title\\n            </h1>\\n            <button class=\"action-close\" data-role=\"closeBtn\" type=\"button\">\\n                <span>Close</span>\\n            </button>\\n        </header>\\n        <div id=\"modal-content-1\" class=\"modal-content\" data-role=\"content\">\\n            <form class=\"form _am-form-divider\"\\n                  style=\"max-width: 100%;\"\\n                  action=\"\">\\n                <fieldset class=\"fieldset\">\\n                    <legend class=\"legend\">\\n                        fieldset legend\\n                    </legend>\\n                    <div class=\"fields -double\">\\n                        <div class=\"field\">\\n                            <label class=\"label\" for=\"name\">\\n                                Name\\n                            </label>\\n                            <div class=\"control\">\\n                                <input type=\"text\"\\n                                       name=\"name\"\\n                                       id=\"name\"\\n                                       value=\"\"\\n                                       title=\"Name\"\\n                                       class=\"input-text\"\\n                                />\\n                            </div>\\n                        </div>\\n                        <div class=\"field\">\\n                            <label class=\"label\" for=\"lastname\">\\n                                Lastname\\n                            </label>\\n                            <div class=\"control\">\\n                                <input type=\"text\"\\n                                       name=\"lastname\"\\n                                       id=\"lastname\"\\n                                       value=\"\"\\n                                       title=\"Lastname\"\\n                                       class=\"input-text\"\\n                                />\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\"field\">\\n                        <label class=\"label\" for=\"addres1\">\\n                            Address 1\\n                        </label>\\n                        <div class=\"control\">\\n                            <input type=\"text\"\\n                                   name=\"addres1\"\\n                                   id=\"addres1\"\\n                                   value=\"\"\\n                                   title=\"addres1\"\\n                                   class=\"input-text\"\\n                            />\\n                        </div>\\n                    </div>\\n\\n                    <div class=\"field\">\\n                        <label class=\"label\" for=\"addres2\">\\n                            Address 2\\n                        </label>\\n                        <div class=\"control\">\\n                            <input type=\"text\"\\n                                   name=\"addres2\"\\n                                   id=\"addres2\"\\n                                   value=\"\"\\n                                   title=\"addres2\"\\n                                   class=\"input-text\"\\n                            />\\n                        </div>\\n                    </div>\\n                </fieldset>\\n\\n                <fieldset class=\"fieldset\">\\n                    <div class=\"fields -double\">\\n                        <div class=\"field date field-dob\">\\n                            <label class=\"label\" for=\"dob\">Date of Birth</label>\\n                            <div class=\"control customer-dob\">\\n                                <input type=\"text\" name=\"dob\" id=\"dob\" value=\"7/7/1936\"\\n                                       class=\"_has-datepicker\"\\n                                       autocomplete=\"on\">\\n                                <button type=\"button\" class=\"ui-datepicker-trigger v-middle\">\\n                                    Select Date\\n                                </button>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\"field number\">\\n                            <label class=\"label\" for=\"number\">Age</label>\\n                            <div class=\"control\">\\n                                <input type=\"number\"\\n                                       name=\"number\"\\n                                       id=\"number\"\\n                                />\\n                            </div>\\n                        </div>\\n                    </div>\\n                </fieldset>\\n\\n                <fieldset class=\"fieldset\">\\n                    <legend class=\"legend\">\\n                        fieldset legend\\n                    </legend>\\n                    <div class=\"fields -double\">\\n                        <div class=\"field email required\">\\n                            <label class=\"label\" for=\"email\">\\n                                New Email\\n                            </label>\\n                            <div class=\"control\">\\n                                <input type=\"email\"\\n                                       name=\"email\"\\n                                       id=\"email\"\\n                                       value=\"\"\\n                                       title=\"Email\"\\n                                       class=\"input-text\"\\n                                />\\n                            </div>\\n                        </div>\\n                        <div class=\"field password\">\\n                            <label class=\"label\" for=\"current-password\">\\n                                Password\\n                            </label>\\n                            <div class=\"control\">\\n                                <input type=\"password\"\\n                                       class=\"input-text\"\\n                                       name=\"current_password\"\\n                                       id=\"current-password\"\\n                                />\\n                            </div>\\n                        </div>\\n                    </div>\\n                </fieldset>\\n            </form>\\n        </div>\\n        <footer class=\"modal-footer\">\\n            <button class=\"action primary action-save-address\" type=\"button\" data-role=\"action\"><span>Ship here</span>\\n            </button>\\n            <button class=\"action secondary action-hide-popup\" type=\"button\" data-role=\"action\"><span>Cancel</span>\\n            </button>\\n        </footer>\\n    </div>\\n    <div data-role=\"focusable-end\" tabindex=\"0\"></div>\\n</aside>\\n<div class=\"modals-overlay\" style=\"z-index: 901;\"></div>\\n'},300:function(module,exports,__webpack_require__){module.exports='<style>\\n    .newsletter .amtheme-label {\\n        position: absolute;\\n        width: 0;\\n        height: 0;\\n        opacity: 0;\\n    }\\n</style>\\n\\n<div class=\"amtheme-newsletter-block\">\\n    <div class=\"amtheme-container\">\\n        <div class=\"amtheme-description\">\\n            <img class=\"amtheme-image\"\\n                 src=\"'+__webpack_require__(693)+'\"\\n                 alt=\"Newsletter image\">\\n            <h4 class=\"amtheme-title\">\\n                Join the WiseMeal club\\n            </h4>\\n            <p class=\"amtheme-text\">\\n                Be the first to know about new delicious things!\\n            </p>\\n        </div>\\n        <div class=\"amtheme-content\">\\n            <form class=\"amtheme-form subscribe\"\\n                  id=\"newsletter-validate-detail\"\\n            >\\n                <div class=\"amtheme-field newsletter\">\\n                    <label class=\"amtheme-label\" for=\"newsletter\">email</label>\\n                    <input class=\"amtheme-input\"\\n                           id=\"newsletter\"\\n                           name=\"email\"\\n                           type=\"email\"\\n                           placeholder=\"hungry@email.com\"\\n                    />\\n                </div>\\n                <button class=\"action subscribe secondary size-s\"\\n                        title=\"Join\"\\n                        aria-label=\"Join\">\\n                    Join\\n                </button>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n'},301:function(module,exports){module.exports='<nav class=\"pages\" aria-label=\"Pagination\">\\n    <a class=\"link  previous\" href=\"#\" title=\"Previous\" aria-label=\"Previous\">\\n        <svg class=\"amtheme-icon\">\\n            <use xlink:href=\"#icon-arrow-left-min\"></use>\\n        </svg>\\n        <span class=\"label\">Page</span>\\n        <span>Previous</span>\\n    </a>\\n    <ul class=\"items pages-items\">\\n        <li class=\"item jump\">\\n            <a class=\"page previous\" href=\"#\" title=\"...\" aria-label=\"...\">\\n                ...\\n            </a>\\n        </li>\\n        <li class=\"item\">\\n            <a href=\"#\" class=\"page\" title=\"Page 10\" aria-label=\"Page 10\">\\n                <span class=\"label\">Page</span>\\n                10\\n            </a>\\n        </li>\\n        <li class=\"item\">\\n            <a href=\"#\" class=\"page\" title=\"Page 11\" aria-label=\"Page 11\">\\n                <span class=\"label\">Page</span>\\n                11\\n            </a>\\n        </li>\\n        <li class=\"item current\">\\n            <strong class=\"page\">\\n                <span class=\"label\">You\\'re currently reading page</span>\\n                12\\n            </strong>\\n        </li>\\n    </ul>\\n</nav>\\n<br>\\n<br>\\n<nav class=\"pages\" aria-label=\"Pagination secondary\">\\n    <a class=\"link  previous\" href=\"#\" title=\"Previous\" aria-label=\"Previous\">\\n        <svg class=\"amtheme-icon\">\\n            <use xlink:href=\"#icon-arrow-left-min\"></use>\\n        </svg>\\n        <span class=\"label\">Page</span>\\n        <span>Previous</span>\\n    </a>\\n    <ul class=\"items pages-items\">\\n        <li class=\"item\">\\n            <a href=\"#\" class=\"page\" title=\"Page 1\" aria-label=\"Page 1\">\\n                <span class=\"label\">Page</span>\\n                1\\n            </a>\\n        </li>\\n        <li class=\"item current\">\\n            <strong class=\"page\">\\n                <span class=\"label\">You\\'re currently reading page</span>\\n                2\\n            </strong>\\n        </li>\\n        <li class=\"item\">\\n            <a href=\"#\" class=\"page\" title=\"Page 3\" aria-label=\"Page 3\">\\n                <span class=\"label\">Page</span>\\n                3\\n            </a>\\n        </li>\\n        <li class=\"item\">\\n            <a href=\"#\" class=\"page\" title=\"Page 4\" aria-label=\"Page 4\">\\n                <span class=\"label\">Page</span>\\n                4\\n            </a>\\n        </li>\\n        <li class=\"item\">\\n            <a href=\"#\" class=\"page\" title=\"Page 5\" aria-label=\"Page 5\">\\n                <span class=\"label\">Page</span>\\n                5\\n            </a>\\n        </li>\\n    </ul>\\n    <a class=\"link  next\" href=\"#\" title=\"Next\" aria-label=\"Next\">\\n        <span class=\"label\">Page</span>\\n        <span>Next</span>\\n        <svg class=\"amtheme-icon\">\\n            <use xlink:href=\"#icon-arrow-right-min\"></use>\\n        </svg>\\n    </a>\\n</nav>\\n'},302:function(module,exports){module.exports='<h2> Price Regular </h2>\\n<div class=\"price-box price-final_price\" data-role=\"priceBox\">\\n    <span class=\"price-container price-final_price tax weee\">\\n        <span data-price-amount=\"9.99\" data-price-type=\"finalPrice\" class=\"price-wrapper\">\\n            <span class=\"price\">$9.99</span>\\n        </span>\\n    </span>\\n</div>\\n\\n<h2>Minimal Price</h2>\\n<div class=\"price-box price-final_price\" data-role=\"priceBox\">\\n    <div class=\"price-box\">\\n        <p class=\"minimal-price\">\\n            <span class=\"price-label\">Starting at</span>\\n            <span class=\"price-container tax weee\">\\n                <span data-price-amount=\"0.99\" data-price-type=\"\" class=\"price-wrapper\">\\n                    <span class=\"price\">$0.99</span>\\n                </span>\\n            </span>\\n        </p>\\n    </div>\\n</div>\\n\\n<h2>Price Configurable</h2>\\n<div class=\"price-box price-final_price\" data-role=\"priceBox\">\\n    <span class=\"normal-price\">\\n        <span class=\"price-container price-final_price tax weee\">\\n            <span class=\"price-label\">As low as</span>\\n            <span data-price-amount=\"9.99\" data-price-type=\"finalPrice\" class=\"price-wrapper\">\\n                <span class=\"price\">$9.99</span>\\n            </span>\\n        </span>\\n    </span>\\n</div>\\n\\n<h2>Price From - To</h2>\\n<div class=\"price-box price-final_price\" data-role=\"priceBox\">\\n    <p class=\"price-from\">\\n        <span class=\"price-container price-final_price tax weee\">\\n            <span class=\"price-label\">From</span>\\n            <span data-price-amount=\"99\" data-price-type=\"minPrice\" class=\"price-wrapper\">\\n                <span class=\"price\">$99.99</span>\\n            </span>\\n        </span>\\n    </p>\\n    <p class=\"price-to\">\\n        <span class=\"price-container price-final_price tax weee\">\\n            <span class=\"price-label\">To</span>\\n            <span data-price-amount=\"999\" data-price-type=\"maxPrice\" class=\"price-wrapper\">\\n                <span class=\"price\">$999.00</span>\\n            </span>\\n        </span>\\n    </p>\\n</div>\\n\\n<h2>Price Special</h2>\\n<div class=\"price-box price-final_price\" data-role=\"priceBox\" >\\n    <span class=\"special-price\">\\n        <span class=\"price-container price-final_price tax weee\">\\n            <span class=\"price-label\">Special Price</span>\\n            <span data-price-amount=\"9\" data-price-type=\"finalPrice\" class=\"price-wrapper \">\\n                <span class=\"price\">$9.99</span>\\n            </span>\\n        </span>\\n    </span>\\n    <span class=\"old-price\">\\n        <span class=\"price-container price-final_price tax weee\">\\n            <span class=\"price-label\">Regular Price</span>\\n            <span data-price-amount=\"99\" data-price-type=\"oldPrice\" class=\"price-wrapper \">\\n                <span class=\"price\">$99.99</span>\\n            </span>\\n        </span>\\n    </span>\\n</div>\\n'},303:function(module,exports){module.exports='<div class=\"product info detailed\">\\n    <div class=\"product data items\"\\n         data-mage-init=\\'{\\n                \"tabs\":{\\n                    \"openedState\":\"active\",\\n                    \"icons\": {\\n                       \"header\": \"amtheme-icon\",\\n                       \"activeHeader\": \"amtheme-icon\"\\n                    }\\n                },\\n                \"amProductTabCaret\":{}\\n             }\\'>\\n        <div class=\"data item title active\"\\n             id=\"tab-label-1\"\\n             data-role=\"collapsible\"\\n             data-amtheme-js=\"item-title\">\\n            <span class=\"amtheme-icon\" data-role=\"icons\"></span>\\n            <a class=\"data switch\"\\n               id=\"tab-label-1-title\"\\n               tabindex=\"-1\"\\n               aria-label=\"label-1-title\"\\n               data-toggle=\"trigger\"\\n               href=\"#\">\\n                Details\\n            </a>\\n        </div>\\n        <div class=\"data item content\"\\n             id=\"1\"\\n             aria-labelledby=\"tab-label-1-title\"\\n             data-role=\"content\">\\n            <div class=\"value\">\\n                <p>With the Fusion Backpack strapped on, every trek is an adventure -\\n                    even a bus ride to work. That\\'s partly because two large\\n                    zippered compartments store everything you need, while a front\\n                    zippered pocket and side mesh pouches are perfect for stashing\\n                    those little extras, in case you change your mind and take the day off.\\n                </p>\\n                <ul>\\n                    <li>Durable nylon construction.</li>\\n                    <li>2 main zippered compartments.</li>\\n                    <li>1 exterior zippered pocket.</li>\\n                    <li>Mesh side pouches.</li>\\n                    <li>Padded, adjustable straps.</li>\\n                    <li>Top carry handle.</li>\\n                    <li>Dimensions: 18\" x 10\" x 6\".</li>\\n                </ul>\\n            </div>\\n        </div>\\n        <div class=\"data item title\"\\n             id=\"tab-label-2\"\\n             data-role=\"collapsible\"\\n             data-amtheme-js=\"item-title\">\\n            <span class=\"amtheme-icon\" data-role=\"icons\"></span>\\n            <a class=\"data switch\"\\n               id=\"tab-label-2-title\"\\n               tabindex=\"-1\"\\n               aria-label=\"label-2-title\"\\n               data-toggle=\"trigger\"\\n               href=\"#\">\\n                More Information\\n            </a>\\n        </div>\\n        <div class=\"data item title\"\\n             id=\"tab-label-3\"\\n             data-role=\"collapsible\"\\n             data-amtheme-js=\"item-title\">\\n            <span class=\"amtheme-icon\" data-role=\"icons\"></span>\\n            <a class=\"data switch\"\\n               id=\"tab-label-3-title\"\\n               tabindex=\"-1\"\\n               aria-label=\"label-3-title\"\\n               data-toggle=\"trigger\"\\n               href=\"#\">\\n                Reviews\\n            </a>\\n        </div>\\n        <span class=\"amtheme-caret\" style=\"left: 0; width: 52px;\"></span>\\n    </div>\\n</div>\\n'},304:function(module,exports){module.exports='<div class=\"page-layout-1column\">\\n    <a href=\"#\"\\n       class=\"action towishlist amtheme-circle-icon\"\\n       title=\"Add to Wish List\"\\n       aria-label=\"Add to Wish List\">\\n            <svg class=\"amtheme-icon -hover-bg\">\\n                <use xlink:href=\"#icon-wishlist\"></use>\\n            </svg>\\n    </a>\\n\\n    <a href=\"#\"\\n       class=\"action tocompare amtheme-circle-icon\"\\n       title=\"Add to Compare\"\\n       aria-label=\"Add to Compare\"\\n       style=\"margin-left: 15px;\">\\n            <svg class=\"amtheme-icon -hover-bg\">\\n                <use xlink:href=\"#icon-compare\"></use>\\n            </svg>\\n    </a>\\n\\n    <a href=\"#\"\\n       class=\"action mailto friend amtheme-circle-icon\"\\n       title=\"Email\"\\n       aria-label=\"Email\"\\n       style=\"margin-left: 15px;\">\\n            <svg class=\"amtheme-icon -hover-bg\">\\n                <use xlink:href=\"#icon-mail\"></use>\\n            </svg>\\n    </a>\\n</div>\\n'},305:function(module,exports){module.exports='<div class=\"box-tocart qty\" style=\"max-width: 400px;\">\\n    <div class=\"fieldset\">\\n        <div class=\"field qty amtheme-qty-wrap\">\\n            <label class=\"label amtheme-label\" for=\"qty\">Qty</label>\\n            <div class=\"control amtheme-qty-box\">\\n                <div class=\"amtheme-minus\" data-amtheme-js=\"qty-minus\" tabindex=\"0\" title=\"Minus\">\\n                    <svg class=\"amtheme-icon\">\\n                        <use xlink:href=\"#icon-minus\"></use>\\n                    </svg>\\n                </div>\\n                <div class=\"amtheme-plus\" data-amtheme-js=\"qty-plus\" tabindex=\"0\" title=\"Plus\">\\n                    <svg class=\"amtheme-icon\">\\n                        <use xlink:href=\"#icon-plus\"></use>\\n                    </svg>\\n                </div>\\n                <input type=\"number\"\\n                       name=\"qty\"\\n                       id=\"qty\"\\n                       min=\"0\"\\n                       class=\"input-text qty amtheme-qty\"\\n                       value=\"1\"\\n                       title=\"Qty\"\\n                       data-amtheme-js=\"qty-input\"\\n                       tabindex=\"0\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'},306:function(module,exports,__webpack_require__){module.exports='<h1>Product List:</h1>\\n\\n<h2>Product base</h2>\\n<div class=\"products wrapper grid products-grid amtheme-styleguide-products\">\\n    <ol class=\"products list items product-items\">\\n        <li class=\"item product product-item\">\\n            <div class=\"product-item-info\" data-amtheme-js=\"product\" data-container=\"product-grid\">\\n                <div class=\"product-photo-wrapper\">\\n                    <a href=\"#\" class=\"product photo product-item-photo\" aria-label=\"Test Product\" tabindex=\"-1\">\\n                        <span class=\"product-image-container\" style=\"width: 500px;\">\\n                            <span class=\"product-image-wrapper\" style=\"padding-bottom: 100%;\">\\n                                <img class=\"product-image-photo\" src=\"'+__webpack_require__(122)+'\" max-width=\"500\" max-height=\"500\" alt=\"Test Product\"></span>\\n                        </span>\\n                    </a>\\n                    <a href=\"#\" class=\"action towishlist\" title=\"Add to Wish List\" aria-label=\"Add to Wish List\" data-action=\"add-to-wishlist\" role=\"button\">\\n                        <svg class=\"amtheme-icon -hover-bg\">\\n                            <use xlink:href=\"#icon-wishlist\"></use>\\n                        </svg>\\n                    </a>\\n                    <a href=\"#\" class=\"action tocompare\" title=\"Add to Compare\" aria-label=\"Add to Compare\" role=\"button\">\\n                        Add to Compare\\n                    </a>\\n                </div>\\n                <div class=\"product details product-item-details\">\\n                    <strong class=\"product name product-item-name\">\\n                        <a class=\"product-item-link\" title=\"Test Product\" aria-label=\"Test Product\" href=\"#\">\\n                            Test Product\\n                        </a>\\n                    </strong>\\n                    <div class=\"price-box price-final_price\" data-role=\"priceBox\" >\\n                        <span class=\"price-container price-final_price tax weee\">\\n                            <span data-price-amount=\"9.99\" data-price-type=\"finalPrice\" class=\"price-wrapper \">\\n                                <span class=\"price\">$9.99</span>\\n                            </span>\\n                        </span>\\n                    </div>\\n                </div>\\n                <div class=\"product-item-inner\">\\n                    <div class=\"product actions product-item-actions\">\\n                        <div class=\"actions-primary\">\\n                            <form data-role=\"tocart-form\" method=\"post\">\\n                                <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">\\n                                    Add to Cart\\n                                </button>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </li>\\n        <li></li>\\n        <li class=\"item product product-item\">\\n            <div class=\"product-item-info -hover\" data-amtheme-js=\"product\" data-container=\"product-grid\">\\n                <div class=\"product-photo-wrapper\">\\n                    <a href=\"#\" class=\"product photo product-item-photo\" aria-label=\"Test Product\" tabindex=\"-1\">\\n                        <span class=\"product-image-container\" style=\"width: 500px;\">\\n                            <span class=\"product-image-wrapper\" style=\"padding-bottom: 100%;\">\\n                                <img class=\"product-image-photo\" src=\"'+__webpack_require__(122)+'\" max-width=\"500\" max-height=\"500\" alt=\"Test Product\"></span>\\n                        </span>\\n                    </a>\\n                    <a href=\"#\" class=\"action towishlist\" title=\"Add to Wish List\" aria-label=\"Add to Wish List\" data-action=\"add-to-wishlist\" role=\"button\">\\n                        <svg class=\"amtheme-icon -hover-bg\">\\n                            <use xlink:href=\"#icon-wishlist\"></use>\\n                        </svg>\\n                    </a>\\n                    <a href=\"#\" class=\"action tocompare\" title=\"Add to Compare\" aria-label=\"Add to Compare\" role=\"button\">\\n                        Add to Compare\\n                    </a>\\n                </div>\\n                <div class=\"product details product-item-details\">\\n                    <strong class=\"product name product-item-name\">\\n                        <a class=\"product-item-link\" title=\"Test Product\" aria-label=\"Test Product\" href=\"#\">\\n                            Test Product\\n                        </a>\\n                    </strong>\\n                    <div class=\"price-box price-final_price\" data-role=\"priceBox\">\\n                        <span class=\"price-container price-final_price tax weee\">\\n                            <span data-price-amount=\"9.99\" data-price-type=\"finalPrice\" class=\"price-wrapper \">\\n                                <span class=\"price\">$9.99</span>\\n                            </span>\\n                        </span>\\n                    </div>\\n                </div>\\n                <div class=\"product-item-inner\">\\n                    <div class=\"product actions product-item-actions\">\\n                        <div class=\"actions-primary\">\\n                            <form data-role=\"tocart-form\" method=\"post\">\\n                                <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">\\n                                    Add to Cart\\n                                </button>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </li>\\n    </ol>\\n</div>\\n<br>\\n<br>\\n<br>\\n<h2>Product configurable</h2>\\n<div class=\"products wrapper grid products-grid\">\\n    <ol class=\"products list items product-items\">\\n        <li class=\"item product product-item\">\\n            <div class=\"product-item-info\" data-amtheme-js=\"product\" data-container=\"product-grid\">\\n                <div class=\"product-photo-wrapper\">\\n                    <a href=\"#\" class=\"product photo product-item-photo\" aria-label=\"Product Configurable test\" tabindex=\"-1\">\\n                        <span class=\"product-image-container\" style=\"width: 500px;\">\\n                            <span class=\"product-image-wrapper\" style=\"padding-bottom: 100%;\">\\n                                <img class=\"product-image-photo\" src=\"'+__webpack_require__(122)+'\" max-width=\"500\" max-height=\"500\" alt=\"Test Configurable Product\"></span>\\n                        </span>\\n                    </a>\\n                    <a href=\"#\" class=\"action towishlist\" title=\"Add to Wish List\" aria-label=\"Add to Wish List\" data-action=\"add-to-wishlist\" role=\"button\">\\n                        <svg class=\"amtheme-icon -hover-bg\">\\n                            <use xlink:href=\"#icon-wishlist\"></use>\\n                        </svg>\\n                    </a>\\n                    <a href=\"#\" class=\"action tocompare\" title=\"Add to Compare\" aria-label=\"Add to Compare\" role=\"button\">\\n                        Add to Compare\\n                    </a>\\n                </div>\\n                <div class=\"product details product-item-details\">\\n                    <strong class=\"product name product-item-name\">\\n                        <a class=\"product-item-link\" title=\"Product Configurable test\" aria-label=\"Product Configurable test\" href=\"#\">\\n                            Product Configurable test\\n                        </a>\\n                    </strong>\\n                    <div class=\"product-reviews-summary short\">\\n                        <div class=\"rating-summary\">\\n                            <span class=\"label\"><span>Rating:</span></span>\\n                            <div class=\"rating-result\" title=\"100%\">\\n                                <span style=\"width: 100%\">>50%</span>\\n                            </div>\\n                        </div>\\n                        <div class=\"reviews-actions\">\\n                            <a class=\"action view\" href=\"#\">3&nbsp;Reviews</a>\\n                        </div>\\n                    </div>\\n                    <div class=\"price-box price-final_price\" data-role=\"priceBox\" ><span class=\"normal-price\">\\n                        <span class=\"price-container price-final_price tax weee\">\\n                            <span class=\"price-label\">As low as</span>\\n                                <span data-price-amount=\"29\" data-price-type=\"finalPrice\" class=\"price-wrapper \">\\n                                    <span class=\"price\">$999.99</span>\\n                                </span>\\n                            </span>\\n                        </span>\\n                    </div>\\n                </div>\\n                <div class=\"product-item-inner\">\\n                    <div class=\"swatch-wrapper swatch-opt-1626\" data-role=\"swatch-option-1626\">\\n                        <div class=\"swatch-attribute\">\\n                            <div aria-activedescendant=\"\" tabindex=\"0\" aria-invalid=\"false\" aria-required=\"true\"\\n                                 role=\"listbox\" aria-label=\"Size\" class=\"swatch-attribute-options clearfix\">\\n                                <div aria-checked=\"false\"\\n                                     aria-label=\"XS\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     tabindex=\"0\"\\n                                >\\n                                    XS\\n                                </div>\\n                                <div aria-checked=\"false\"\\n                                     aria-label=\"S\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     tabindex=\"0\"\\n                                >\\n                                    S\\n                                </div>\\n                                <div aria-checked=\"false\"\\n                                     aria-label=\"M\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    M\\n                                </div>\\n                                <div aria-checked=\"false\"\\n                                     aria-label=\"L\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    L\\n                                </div>\\n                                <div aria-checked=\"false\" aria-label=\"XL\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    XL\\n                                </div>\\n                                <div aria-checked=\"false\" aria-label=\"XXL\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    XXL\\n                                </div>\\n                                <div aria-checked=\"false\" aria-label=\"XXXL\"\\n                                     class=\"swatch-option text selected\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    XXXL\\n                                </div>\\n                                <div aria-checked=\"false\" aria-label=\"XXXXL\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    XXXXL\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\"swatch-attribute color\">\\n                            <div aria-activedescendant=\"\" tabindex=\"0\" aria-invalid=\"false\" aria-required=\"true\"\\n                                 role=\"listbox\" aria-label=\"Color\" class=\"swatch-attribute-options clearfix\">\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Blue\"\\n                                     role=\"option\"\\n                                     style=\"background: #1857f7 no-repeat center; background-size: initial;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Blue\"\\n                                     role=\"option\"\\n                                     style=\"background: #fff no-repeat center; background-size: initial;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Orange\"\\n                                     role=\"option\"\\n                                     style=\"background: #eb6703 no-repeat center; background-size: initial;\"></div>\\n                                <div class=\"swatch-option color selected\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Orange\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat rgb(255, 213, 0); display: inline-block;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Green\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat #7aa022; display: inline-block;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Yellow\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat #6b26fd; display: inline-block;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Purple\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat #ff6118; display: inline-block;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Red\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat #f23b3b; display: inline-block;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Black\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat #070605; display: inline-block;\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\"product actions product-item-actions\">\\n                        <div class=\"actions-primary\">\\n                            <form data-role=\"tocart-form\" method=\"post\">\\n                                <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">\\n                                    Add to Cart\\n                                </button>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </li>\\n        <li class=\"item product product-item\">\\n            <div class=\"product-item-info -hover\" data-amtheme-js=\"product\" data-container=\"product-grid\">\\n                <div class=\"product-photo-wrapper\">\\n                    <a href=\"#\" class=\"product photo product-item-photo\" aria-label=\"Product Configurable test\" tabindex=\"-1\">\\n                        <span class=\"product-image-container\" style=\"width: 500px;\">\\n                            <span class=\"product-image-wrapper\" style=\"padding-bottom: 100%;\">\\n                                <img class=\"product-image-photo\" src=\"'+__webpack_require__(122)+'\" max-width=\"500\" max-height=\"500\" alt=\"Test Configurable Product\"></span>\\n                        </span>\\n                    </a>\\n                    <a href=\"#\" class=\"action towishlist\" title=\"Add to Wish List\" aria-label=\"Add to Wish List\" data-action=\"add-to-wishlist\" role=\"button\">\\n                        <svg class=\"amtheme-icon -hover-bg\">\\n                            <use xlink:href=\"#icon-wishlist\"></use>\\n                        </svg>\\n                    </a>\\n                    <a href=\"#\" class=\"action tocompare\" title=\"Add to Compare\" aria-label=\"Add to Compare\" role=\"button\">\\n                        Add to Compare\\n                    </a>\\n                </div>\\n                <div class=\"product details product-item-details\">\\n                    <strong class=\"product name product-item-name\">\\n                        <a class=\"product-item-link\" title=\"Product Configurable test\" aria-label=\"Product Configurable test\" href=\"#\">\\n                            Product Configurable test\\n                        </a>\\n                    </strong>\\n                    <div class=\"product-reviews-summary short\">\\n                        <div class=\"rating-summary\">\\n                            <span class=\"label\"><span>Rating:</span></span>\\n                            <div class=\"rating-result\" title=\"100%\">\\n                                <span style=\"width: 100%\">>100%</span>\\n                            </div>\\n                        </div>\\n                        <div class=\"reviews-actions\">\\n                            <a class=\"action view\" href=\"#\">3&nbsp;Reviews</a>\\n                        </div>\\n                    </div>\\n                    <div class=\"price-box price-final_price\" data-role=\"priceBox\" ><span class=\"normal-price\">\\n                        <span class=\"price-container price-final_price tax weee\">\\n                            <span class=\"price-label\">As low as</span>\\n                                <span data-price-amount=\"29\" data-price-type=\"finalPrice\" class=\"price-wrapper \">\\n                                    <span class=\"price\">$999.99</span>\\n                                </span>\\n                            </span>\\n                        </span>\\n                    </div>\\n                </div>\\n                <div class=\"product-item-inner\">\\n                    <div class=\"swatch-wrapper swatch-opt-1626\" data-role=\"swatch-option-1626\">\\n                        <div class=\"swatch-attribute\">\\n                            <div aria-activedescendant=\"\" tabindex=\"0\" aria-invalid=\"false\" aria-required=\"true\"\\n                                 role=\"listbox\" aria-label=\"Size\" class=\"swatch-attribute-options clearfix\">\\n                                <div aria-checked=\"false\"\\n                                     aria-label=\"XS\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     tabindex=\"0\"\\n                                >\\n                                    XS\\n                                </div>\\n                                <div aria-checked=\"false\"\\n                                     aria-label=\"S\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     tabindex=\"0\"\\n                                >\\n                                    S\\n                                </div>\\n                                <div aria-checked=\"false\"\\n                                     aria-label=\"M\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    M\\n                                </div>\\n                                <div aria-checked=\"false\"\\n                                     aria-label=\"L\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    L\\n                                </div>\\n                                <div aria-checked=\"false\" aria-label=\"XL\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    XL\\n                                </div>\\n                                <div aria-checked=\"false\" aria-label=\"XXL\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    XXL\\n                                </div>\\n                                <div aria-checked=\"false\" aria-label=\"XXXL\"\\n                                     class=\"swatch-option text selected\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    XXXL\\n                                </div>\\n                                <div aria-checked=\"false\" aria-label=\"XXXXL\"\\n                                     class=\"swatch-option text\"\\n                                     role=\"option\"\\n                                     style=\"display: inline-block;\"\\n                                     tabindex=\"0\">\\n                                    XXXXL\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\"swatch-attribute color\">\\n                            <div aria-activedescendant=\"\" tabindex=\"0\" aria-invalid=\"false\" aria-required=\"true\"\\n                                 role=\"listbox\" aria-label=\"Color\" class=\"swatch-attribute-options clearfix\">\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Blue\"\\n                                     role=\"option\"\\n                                     style=\"background: #1857f7 no-repeat center; background-size: initial;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Blue\"\\n                                     role=\"option\"\\n                                     style=\"background: #fff no-repeat center; background-size: initial;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Orange\"\\n                                     role=\"option\"\\n                                     style=\"background: #eb6703 no-repeat center; background-size: initial;\"></div>\\n                                <div class=\"swatch-option color selected\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Orange\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat rgb(255, 213, 0); display: inline-block;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Green\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat #7aa022; display: inline-block;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Yellow\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat #6b26fd; display: inline-block;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Purple\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat #ff6118; display: inline-block;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Red\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat #f23b3b; display: inline-block;\"></div>\\n                                <div class=\"swatch-option color\"\\n                                     aria-checked=\"false\"  tabindex=\"0\"\\n                                     aria-label=\"Black\"\\n                                     role=\"option\"\\n                                     style=\"background: center center no-repeat #070605; display: inline-block;\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\"product actions product-item-actions\">\\n                        <div class=\"actions-primary\">\\n                            <form data-role=\"tocart-form\" method=\"post\">\\n                                <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">\\n                                    Add to Cart\\n                                </button>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </li>\\n    </ol>\\n</div>\\n'},307:function(module,exports,__webpack_require__){module.exports='<div class=\"products wrapper grid products-grid\">\\n    <ol class=\"products list items product-items amtheme-products-secondary\">\\n        <li class=\"item product product-item\">\\n            <div class=\"product-item-info\">\\n                <a href=\"\" title=\"Fusion Backpack\" class=\"product photo product-item-photo\" tabindex=\"0\">\\n                    <span class=\"product-image-container\" style=\"width:140px;\">\\n                        <span class=\"product-image-wrapper\" style=\"padding-bottom: 100%;\">\\n                            <img class=\"product-image-photo\" src=\"'+__webpack_require__(698)+'\" alt=\"Fusion Backpack\">\\n                        </span>\\n                    </span>\\n                </a>\\n                <div class=\"product details product-item-details\">\\n                    <span class=\"product name product-item-name\">\\n                        <a class=\"product-item-link\" title=\"Fusion Backpack\" href=\"\" tabindex=\"0\">\\n                            Fusion Backpack\\n                        </a>\\n                    </span>\\n                    <div class=\"price-box price-final_price\">\\n                        <span class=\"price-container price-final_price tax weee\">\\n                            <span data-label=\"Incl. Tax\" class=\"price-wrapper price-including-tax\">\\n                                <span class=\"price\">$69.00</span>\\n                            </span>\\n                            <span data-label=\"Excl. Tax\" class=\"price-wrapper price-excluding-tax\">\\n                                <span class=\"price\">$59.00</span>\\n                            </span>\\n                        </span>\\n                    </div>\\n                    <div class=\"product actions product-item-actions\">\\n                        <a href=\"\" class=\"action secondary size-m\" aria-label=\"Explore\" title=\"Explore\" tabindex=\"0\">\\n                            Explore\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n        </li>\\n        <li class=\"item product product-item\" >\\n            <div class=\"product-item-info \">\\n                <a href=\"\" title=\"Fusion Backpack\" class=\"product photo product-item-photo\" tabindex=\"0\">\\n                    <span class=\"product-image-container\" style=\"width:140px;\">\\n                        <span class=\"product-image-wrapper\" style=\"padding-bottom: 100%;\">\\n                            <img class=\"product-image-photo\" src=\"'+__webpack_require__(699)+'\" alt=\"Fusion Backpack\">\\n                        </span>\\n                    </span>\\n                </a>\\n                <div class=\"product details product-item-details\">\\n                    <span class=\"product name product-item-name\">\\n                        <a class=\"product-item-link\" title=\"Fusion Backpack\" href=\"\" tabindex=\"0\">\\n                            Impulse Duffle\\n                        </a>\\n                    </span>\\n                    <div class=\"price-box price-final_price\">\\n                        <span class=\"price-container price-final_price tax weee\">\\n                            <span data-label=\"Incl. Tax\" class=\"price-wrapper price-including-tax\">\\n                                <span class=\"price\">$999.00</span>\\n                            </span>\\n                            <span data-label=\"Excl. Tax\" class=\"price-wrapper price-excluding-tax\">\\n                                <span class=\"price\">$899.00</span>\\n                            </span>\\n                        </span>\\n                    </div>\\n                    <div class=\"product actions product-item-actions\">\\n                        <a href=\"\" class=\"action secondary size-m\" aria-label=\"Explore\" title=\"Explore\" tabindex=\"0\">\\n                            Explore\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n        </li>\\n    </ol>\\n</div>\\n'},308:function(module,exports){module.exports='<h2>Review 0%</h2>\\n<div class=\"product-reviews-summary short\">\\n    <div class=\"rating-summary\">\\n        <span class=\"label\"><span>Rating:</span></span>\\n        <div class=\"rating-result\" title=\"0%\">\\n            <span style=\"width:0%\"><span>0%</span></span>\\n        </div>\\n    </div>\\n    <div class=\"reviews-actions\">\\n        <a class=\"action view\" href=\"#\">0&nbsp;<span>Reviews</span></a>\\n    </div>\\n</div>\\n<h2>Review 50%</h2>\\n<div class=\"product-reviews-summary short\">\\n    <div class=\"rating-summary\">\\n        <span class=\"label\"><span>Rating:</span></span>\\n        <div class=\"rating-result\" title=\"0%\">\\n            <span style=\"width:50%\"><span>50%</span></span>\\n        </div>\\n    </div>\\n    <div class=\"reviews-actions\">\\n        <a class=\"action view\" href=\"#\">5&nbsp;<span>Reviews</span></a>\\n    </div>\\n</div>\\n<h2>Review 100%</h2>\\n<div class=\"product-reviews-summary short\">\\n    <div class=\"rating-summary\">\\n        <span class=\"label\"><span>Rating:</span></span>\\n        <div class=\"rating-result\" title=\"100%\">\\n            <span style=\"width:100%\"><span>100%</span></span>\\n        </div>\\n    </div>\\n    <div class=\"reviews-actions\">\\n        <a class=\"action view\" href=\"#\">10&nbsp;<span>Reviews</span></a>\\n    </div>\\n</div>\\n\\n<h2>Review secondary</h2>\\n<div class=\"star-secondary product-reviews-summary short\">\\n    <div class=\"rating-summary\">\\n        <span class=\"label\"><span>Rating:</span></span>\\n        <div class=\"rating-result\" title=\"66%\">\\n            <span style=\"width:66%\"><span>66%</span></span>\\n        </div>\\n    </div>\\n    <div class=\"reviews-actions\">\\n        <a class=\"action view\" href=\"#\">10&nbsp;<span>Reviews</span></a>\\n    </div>\\n</div>\\n'},309:function(module,exports){module.exports='<ol class=\"items review-list\">\\n    <li class=\"item review-item\">\\n        <div class=\"review-heading\">\\n            <span class=\"review-title\">\\n                I bike four miles a day to work and back\\n            </span>\\n            <time class=\"review-date\" datetime=\"1/29/20\">\\n                1/29/20\\n            </time>\\n        </div>\\n        <div class=\"review-ratings\">\\n            <div class=\"rating-summary item\">\\n                <div class=\"rating-result\" title=\"80%\">\\n                    <span style=\"width:80%\">\\n                        <span>80%</span>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\"review-content\">\\n            I bike four miles a day to work and back and I love this thing. It\\'s a good size and it\\'s pretty comfortable\\n            to wear across my back while I ride. So far I have not noticed much wear and tear on the fabric and I\\'ve had\\n            it for 6 months.\\n        </div>\\n        <div class=\"review-author\">\\n            Sadye\\n        </div>\\n    </li>\\n    <li class=\"item review-item\">\\n        <div class=\"review-heading\">\\n            <span class=\"review-title\">\\n                I would love this bag EXCEPT . . .\\n            </span>\\n            <time class=\"review-date\" datetime=\"1/29/20\">\\n                1/29/20\\n            </time>\\n        </div>\\n        <div class=\"review-ratings\">\\n            <div class=\"rating-summary item\">\\n                <div class=\"rating-result\" title=\"60%\">\\n                    <span style=\"width:60%\">\\n                        <span>60%</span>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\"review-content\">\\n            I would love this bag EXCEPT with the case on my Iphone won\\'t fit in the cell phone pocket! Why make a\\n            pocket for cell phones if it\\'s not going to fit an Iphone.\\n        </div>\\n        <div class=\"review-author\">\\n            Adena\\n        </div>\\n    </li>\\n    <li class=\"item review-item\">\\n        <div class=\"review-heading\">\\n            <span class=\"review-title\">\\n                it\\'s really ugly,\\n            </span>\\n            <time class=\"review-date\" datetime=\"1/29/20\">\\n                1/29/20\\n            </time>\\n        </div>\\n        <div class=\"review-ratings\">\\n            <div class=\"rating-summary item\">\\n                <div class=\"rating-result\" title=\"60%\">\\n                    <span style=\"width:60%\">\\n                        <span >60%</span>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\"review-content\">\\n            Its fine I guess but it\\'s really ugly, I picked out a really cute bag for college but my mom got me this one\\n            instead.\\n        </div>\\n        <div class=\"review-author\">\\n            Tracee\\n        </div>\\n    </li>\\n</ol>'},310:function(module,exports){module.exports='<h2>Review form stars</h2>\\n<div class=\"choice review-field-rating\">\\n    <div class=\"rating-stars-block\">\\n        <input type=\"radio\"\\n               name=\"ratings[4]\"\\n               id=\"Rating_5\"\\n               value=\"20\"\\n               class=\"radio mage-error\"\\n        >\\n        <label class=\"rating-star rating-5\" for=\"Rating_5\" title=\"5 stars\" id=\"Rating_5_label\">\\n        </label>\\n        <input type=\"radio\"\\n               name=\"ratings[4]\"\\n               id=\"Rating_4\"\\n               value=\"19\"\\n               class=\"radio mage-error\"\\n        >\\n        <label class=\"rating-star rating-4\" for=\"Rating_4\" title=\"4 stars\" id=\"Rating_4_label\">\\n        </label>\\n        <input type=\"radio\"\\n               name=\"ratings[4]\"\\n               id=\"Rating_3\"\\n               value=\"18\"\\n               class=\"radio mage-error\"\\n        >\\n        <label class=\"rating-star rating-3\" for=\"Rating_3\" title=\"3 stars\" id=\"Rating_3_label\">\\n        </label>\\n        <input type=\"radio\"\\n               name=\"ratings[4]\"\\n               id=\"Rating_2\"\\n               value=\"17\"\\n               class=\"radio mage-error\"\\n        >\\n        <label class=\"rating-star rating-2\" for=\"Rating_2\" title=\"2 stars\" id=\"Rating_2_label\">\\n        </label>\\n        <input type=\"radio\"\\n               name=\"ratings[4]\"\\n               id=\"Rating_1\"\\n               value=\"16\"\\n               class=\"radio mage-error\"\\n        >\\n        <label class=\"rating-star rating-1\" for=\"Rating_1\" title=\"1 star\" id=\"Rating_1_label\">\\n        </label>\\n    </div>\\n</div>'},311:function(module,exports){module.exports='<div class=\"block block-search\" data-amtheme-js=\"search\">\\n    <div class=\"block block-title\"><strong>Search</strong></div>\\n    <div class=\"block block-content\">\\n        <form class=\"form minisearch\" id=\"search_mini_form\" action=\"#\" method=\"get\" data-amtheme-js=\"search-form\">\\n            <div class=\"field search\">\\n                <label class=\"label\" for=\"search\" data-role=\"minisearch-label\">\\n                    Search\\n                </label>\\n                <div class=\"control\">\\n                    <input id=\"search\" type=\"text\" name=\"q\" value=\"\" placeholder=\"Search entire store here...\" class=\"input-text\" maxlength=\"128\" role=\"combobox\" aria-haspopup=\"false\" aria-autocomplete=\"both\" autocomplete=\"off\" aria-expanded=\"false\" data-amtheme-js=\"search-input\">\\n                    <div id=\"search_autocomplete\" class=\"search-autocomplete\" style=\"display: none;\"></div>\\n                </div>\\n            </div>\\n            <div class=\"actions\">\\n                <button type=\"submit\" title=\"Search\" class=\"action search no-display-mobile\" aria-label=\"Search\" data-amtheme-js=\"search-btn\" disabled=\"\">\\n                    <svg class=\"amtheme-icon\">\\n                        <use xlink:href=\"#icon-search\"></use>\\n                    </svg>\\n                </button>\\n            </div>\\n            <button type=\"button\" title=\"Reset\" class=\"action amtheme-reset opacity-clear\" aria-label=\"Reset\" data-amtheme-js=\"search-reset\">\\n                <svg class=\"amtheme-icon -circle -reset\">\\n                    <use xlink:href=\"#icon-close\"></use>\\n                </svg>\\n            </button>\\n            <button type=\"reset\" title=\"Close\" class=\"action amtheme-close no-display-desktop\" aria-label=\"Close\" data-amtheme-js=\"search-close\">\\n                <svg class=\"amtheme-icon\">\\n                    <use xlink:href=\"#icon-arrow-left-min\"></use>\\n                </svg>\\n            </button>\\n        </form>\\n    </div>\\n</div>\\n'},312:function(module,exports){module.exports='<div class=\"block block-search\" data-amtheme-js=\"search\">\\n    <div class=\"block block-title\"><strong>Search</strong></div>\\n    <div class=\"block block-content\">\\n        <form class=\"form minisearch active\" id=\"search_mini_form\" action=\"#\" method=\"get\" data-amtheme-js=\"search-form\">\\n            <div class=\"field search\">\\n                <label class=\"label\" for=\"search\" data-role=\"minisearch-label\">\\n                    Search\\n                </label>\\n                <div class=\"control\">\\n                    <input id=\"search\" type=\"text\" name=\"q\" value=\"\" placeholder=\"Search entire store here...\" class=\"input-text\" maxlength=\"128\" role=\"combobox\" aria-haspopup=\"false\" aria-autocomplete=\"both\" autocomplete=\"off\" aria-expanded=\"false\" data-amtheme-js=\"search-input\">\\n                    <div id=\"search_autocomplete\" class=\"search-autocomplete\"\\n                         style=\"width: 100%;\">\\n                        <ul>\\n                            <li>\\n                                <span class=\"qs-option-name\"> Te</span>\\n                                <span aria-hidden=\"true\" class=\"amount\">187</span>\\n                            </li>\\n                            <li>\\n                                <span class=\"qs-option-name\"> Tes</span>\\n                                <span aria-hidden=\"true\" class=\"amount\">2</span>\\n                            </li>\\n                            <li>\\n                                <span class=\"qs-option-name\"> Test</span>\\n                                <span aria-hidden=\"true\" class=\"amount\">15</span>\\n                            </li>\\n                            <li>\\n                                <span class=\"qs-option-name\"> Testimonial</span>\\n                                <span aria-hidden=\"true\" class=\"amount\">2</span>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"actions\">\\n                <button type=\"submit\" title=\"Search\" class=\"action search no-display-mobile\" aria-label=\"Search\" data-amtheme-js=\"search-btn\">\\n                    <svg class=\"amtheme-icon\">\\n                        <use xlink:href=\"#icon-search\"></use>\\n                    </svg>\\n                </button>\\n            </div>\\n            <button type=\"button\" title=\"Reset\" class=\"action amtheme-reset\" aria-label=\"Reset\" data-amtheme-js=\"search-reset\">\\n                <svg class=\"amtheme-icon -circle -reset\">\\n                    <use xlink:href=\"#icon-close\"></use>\\n                </svg>\\n            </button>\\n            <button type=\"reset\" title=\"Close\" class=\"action amtheme-close no-display-desktop\" aria-label=\"Close\" data-amtheme-js=\"search-close\">\\n                <svg class=\"amtheme-icon\">\\n                    <use xlink:href=\"#icon-arrow-left-min\"></use>\\n                </svg>\\n            </button>\\n        </form>\\n    </div>\\n</div>\\n'},313:function(module,exports){module.exports='<div class=\"page-header\">\\n    <div class=\"block block-search -header\" data-amtheme-js=\"search\">\\n        <div class=\"block block-title\"><strong>Search</strong></div>\\n        <div class=\"block block-content\">\\n            <form class=\"form minisearch\" id=\"search_mini_form\" action=\"#\" method=\"get\" data-amtheme-js=\"search-form\">\\n                <div class=\"field search\">\\n                    <label class=\"label\" for=\"search\" data-role=\"minisearch-label\">\\n                        Search\\n                    </label>\\n                    <div class=\"control\">\\n                        <input id=\"search\" type=\"text\" name=\"q\" value=\"\" placeholder=\"Search entire store here...\" class=\"input-text\" maxlength=\"128\" role=\"combobox\" aria-haspopup=\"false\" aria-autocomplete=\"both\" autocomplete=\"off\" aria-expanded=\"false\" data-amtheme-js=\"search-input\">\\n                    </div>\\n                </div>\\n                <div class=\"actions\">\\n                    <button type=\"submit\" title=\"Search\" class=\"action search no-display-mobile\" aria-label=\"Search\" data-amtheme-js=\"search-btn\">\\n                        <svg class=\"amtheme-icon\">\\n                            <use xlink:href=\"#icon-search\"></use>\\n                        </svg>\\n                    </button>\\n                </div>\\n                <button type=\"button\" title=\"Reset\" class=\"action amtheme-reset\" aria-label=\"Reset\" data-amtheme-js=\"search-reset\">\\n                    <svg class=\"amtheme-icon -circle -reset\">\\n                        <use xlink:href=\"#icon-close\"></use>\\n                    </svg>\\n                </button>\\n                <button type=\"reset\" title=\"Close\" class=\"action amtheme-close no-display-desktop\" aria-label=\"Close\" data-amtheme-js=\"search-close\">\\n                    <svg class=\"amtheme-icon\">\\n                        <use xlink:href=\"#icon-arrow-left-min\"></use>\\n                    </svg>\\n                </button>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n'},314:function(module,exports){module.exports='<div class=\"page-header\">\\n    <div class=\"block block-search -header\" data-amtheme-js=\"search\">\\n        <div class=\"block block-title\"><strong>Search</strong></div>\\n        <div class=\"block block-content\">\\n            <form class=\"form minisearch active\" id=\"search_mini_form\" action=\"#\" method=\"get\" data-amtheme-js=\"search-form\">\\n                <div class=\"field search\">\\n                    <label class=\"label\" for=\"search\" data-role=\"minisearch-label\">\\n                        Search\\n                    </label>\\n                    <div class=\"control\">\\n                        <input id=\"search\" type=\"text\" name=\"q\" value=\"\" placeholder=\"Search entire store here...\" class=\"input-text\" maxlength=\"128\" role=\"combobox\" aria-haspopup=\"false\" aria-autocomplete=\"both\" autocomplete=\"off\" aria-expanded=\"false\" data-amtheme-js=\"search-input\">\\n                        <div id=\"search_autocomplete\" class=\"search-autocomplete\"\\n                             style=\"width: 100%;\">\\n                            <ul>\\n                                <li>\\n                                    <span class=\"qs-option-name\"> Te</span>\\n                                    <span aria-hidden=\"true\" class=\"amount\">187</span>\\n                                </li>\\n                                <li>\\n                                    <span class=\"qs-option-name\"> Tes</span>\\n                                    <span aria-hidden=\"true\" class=\"amount\">2</span>\\n                                </li>\\n                                <li>\\n                                    <span class=\"qs-option-name\"> Test</span>\\n                                    <span aria-hidden=\"true\" class=\"amount\">15</span>\\n                                </li>\\n                                <li>\\n                                    <span class=\"qs-option-name\"> Testimonial</span>\\n                                    <span aria-hidden=\"true\" class=\"amount\">2</span>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\"actions\">\\n                    <button type=\"submit\" title=\"Search\" class=\"action search no-display-mobile\" aria-label=\"Search\" data-amtheme-js=\"search-btn\">\\n                        <svg class=\"amtheme-icon\">\\n                            <use xlink:href=\"#icon-search\"></use>\\n                        </svg>\\n                    </button>\\n                </div>\\n                <button type=\"button\" title=\"Reset\" class=\"action amtheme-reset\" aria-label=\"Reset\" data-amtheme-js=\"search-reset\">\\n                    <svg class=\"amtheme-icon -circle -reset\">\\n                        <use xlink:href=\"#icon-close\"></use>\\n                    </svg>\\n                </button>\\n                <button type=\"reset\" title=\"Close\" class=\"action amtheme-close no-display-desktop\" aria-label=\"Close\" data-amtheme-js=\"search-close\">\\n                    <svg class=\"amtheme-icon\">\\n                        <use xlink:href=\"#icon-arrow-left-min\"></use>\\n                    </svg>\\n                </button>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n'},315:function(module,exports){module.exports='<dl class=\"amtheme-search-terms\">\\n    <dt class=\"amtheme-title\">Related search terms</dt>\\n    <dd class=\"amtheme-item\">\\n        <a class=\"amtheme-link\"\\n           href=\"#\"\\n           aria-label=\"Test\"\\n           title=\"Test\">\\n            Test\\n            <span class=\"amtheme-count\">1</span>\\n        </a>\\n    </dd>\\n    <dd class=\"amtheme-item\">\\n        <a class=\"amtheme-link\"\\n           href=\"#\"\\n           aria-label=\"Test\"\\n           title=\"Test\">\\n            Test\\n            <span class=\"amtheme-count\">10</span>\\n        </a>\\n    </dd>\\n    <dd class=\"amtheme-item\">\\n        <a class=\"amtheme-link\"\\n           href=\"#\"\\n           aria-label=\"Test\"\\n           title=\"Test\">\\n            Test\\n            <span class=\"amtheme-count\">99</span>\\n        </a>\\n    </dd>\\n    <dd class=\"amtheme-item\">\\n        <a class=\"amtheme-link\"\\n           href=\"#\"\\n           aria-label=\"Test\"\\n           title=\"Test\">\\n            Test\\n            <span class=\"amtheme-count\">100</span>\\n        </a>\\n    </dd>\\n    <dd class=\"amtheme-item\">\\n        <a class=\"amtheme-link\"\\n           href=\"#\"\\n           aria-label=\"Test\"\\n           title=\"Test\">\\n            Test\\n            <span class=\"amtheme-count\">1000</span>\\n        </a>\\n    </dd>\\n</dl>\\n'},316:function(module,exports){module.exports='<ul class=\"amtheme-socials-list\">\\n    <li class=\"amtheme-item\">\\n        <a href=\"#\" class=\"amtheme-action google\" title=\"Google\" aria-label=\"Google\">\\n            <svg class=\"amtheme-icon -active-bg\">\\n                <use xlink:href=\"#icon-google\"></use>\\n            </svg>\\n        </a>\\n    </li>\\n    <li class=\"amtheme-item\">\\n        <a href=\"#\" class=\"amtheme-action youtube\" title=\"Youtube\" aria-label=\"Youtube\">\\n            <svg class=\"amtheme-icon -active-bg\">\\n                <use xlink:href=\"#icon-youtube\"></use>\\n            </svg>\\n        </a>\\n    </li>\\n    <li class=\"amtheme-item\">\\n        <a href=\"#\" class=\"amtheme-action facebook\" title=\"Facebook\" aria-label=\"Facebook\">\\n            <svg class=\"amtheme-icon -active-bg\">\\n                <use xlink:href=\"#icon-facebook\"></use>\\n            </svg>\\n        </a>\\n    </li>\\n    <li class=\"amtheme-item\">\\n        <a href=\"#\" class=\"amtheme-action twitter\" title=\"Twitter\" aria-label=\"Twitter\">\\n            <svg class=\"amtheme-icon -active-bg\">\\n                <use xlink:href=\"#icon-twitter\"></use>\\n            </svg>\\n        </a>\\n    </li>\\n</ul>\\n'},317:function(module,exports){module.exports='<div class=\"swatch-attribute\">\\n    <div aria-activedescendant=\"\" tabindex=\"0\" aria-invalid=\"false\" aria-required=\"true\"\\n         role=\"listbox\" aria-label=\"Size\" class=\"swatch-attribute-options clearfix\">\\n        <div aria-checked=\"false\"\\n             aria-label=\"XS\"\\n             class=\"swatch-option text\"\\n             role=\"option\"\\n             tabindex=\"0\"\\n        >\\n            XS\\n        </div>\\n        <div aria-checked=\"false\"\\n             aria-label=\"S\"\\n             class=\"swatch-option text\"\\n             role=\"option\"\\n             tabindex=\"0\"\\n        >\\n            S\\n        </div>\\n        <div aria-checked=\"false\"\\n             aria-label=\"M\"\\n             class=\"swatch-option text\"\\n             role=\"option\"\\n             style=\"display: inline-block;\"\\n             tabindex=\"0\">\\n            M\\n        </div>\\n        <div aria-checked=\"false\"\\n             aria-label=\"L\"\\n             class=\"swatch-option text\"\\n             role=\"option\"\\n             style=\"display: inline-block;\"\\n             tabindex=\"0\">\\n            L\\n        </div>\\n        <div aria-checked=\"false\" aria-label=\"XL\"\\n             class=\"swatch-option text\"\\n             role=\"option\"\\n             style=\"display: inline-block;\"\\n             tabindex=\"0\">\\n            XL\\n        </div>\\n        <div aria-checked=\"false\" aria-label=\"XXL\"\\n             class=\"swatch-option text\"\\n             role=\"option\"\\n             style=\"display: inline-block;\"\\n             tabindex=\"0\">\\n            XXL\\n        </div>\\n        <div aria-checked=\"false\" aria-label=\"XXXL\"\\n             class=\"swatch-option text selected\"\\n             role=\"option\"\\n             style=\"display: inline-block;\"\\n             tabindex=\"0\">\\n            XXXL\\n        </div>\\n        <div aria-checked=\"false\" aria-label=\"XXXXL\"\\n             class=\"swatch-option text\"\\n             role=\"option\"\\n             style=\"display: inline-block;\"\\n             tabindex=\"0\">\\n            XXXXL\\n        </div>\\n    </div>\\n</div>\\n'},318:function(module,exports){module.exports='<div class=\"swatch-attribute color\">\\n    <div aria-activedescendant=\"\" tabindex=\"0\" aria-invalid=\"false\" aria-required=\"true\"\\n         role=\"listbox\" aria-label=\"Color\" class=\"swatch-attribute-options clearfix\">\\n        <div class=\"swatch-option color\"\\n             aria-checked=\"false\"  tabindex=\"0\"\\n             aria-label=\"Blue\"\\n             role=\"option\"\\n             style=\"background: #1857f7 no-repeat center; background-size: initial;\"></div>\\n        <div class=\"swatch-option color\"\\n             aria-checked=\"false\"  tabindex=\"0\"\\n             aria-label=\"Blue\"\\n             role=\"option\"\\n             style=\"background: #fff no-repeat center; background-size: initial;\"></div>\\n        <div class=\"swatch-option color\"\\n             aria-checked=\"false\"  tabindex=\"0\"\\n             aria-label=\"Orange\"\\n             role=\"option\"\\n             style=\"background: #eb6703 no-repeat center; background-size: initial;\"></div>\\n        <div class=\"swatch-option color selected\"\\n             aria-checked=\"false\"  tabindex=\"0\"\\n             aria-label=\"Orange\"\\n             role=\"option\"\\n             style=\"background: center center no-repeat rgb(255, 213, 0); display: inline-block;\"></div>\\n        <div class=\"swatch-option color\"\\n             aria-checked=\"false\"  tabindex=\"0\"\\n             aria-label=\"Green\"\\n             role=\"option\"\\n             style=\"background: center center no-repeat #7aa022; display: inline-block;\"></div>\\n        <div class=\"swatch-option color\"\\n             aria-checked=\"false\"  tabindex=\"0\"\\n             aria-label=\"Yellow\"\\n             role=\"option\"\\n             style=\"background: center center no-repeat #6b26fd; display: inline-block;\"></div>\\n        <div class=\"swatch-option color\"\\n             aria-checked=\"false\"  tabindex=\"0\"\\n             aria-label=\"Purple\"\\n             role=\"option\"\\n             style=\"background: center center no-repeat #ff6118; display: inline-block;\"></div>\\n        <div class=\"swatch-option color\"\\n             aria-checked=\"false\"  tabindex=\"0\"\\n             aria-label=\"Red\"\\n             role=\"option\"\\n             style=\"background: center center no-repeat #f23b3b; display: inline-block;\"></div>\\n        <div class=\"swatch-option color\"\\n             aria-checked=\"false\"  tabindex=\"0\"\\n             aria-label=\"Black\"\\n             role=\"option\"\\n             style=\"background: center center no-repeat #070605; display: inline-block;\"></div>\\n    </div>\\n</div>\\n'},319:function(module,exports){module.exports='<div class=\"table-wrapper\">\\n    <table class=\"items data table\" id=\"multiship-addresses-table\">\\n        <caption class=\"table-caption\">\\n            Please select a shipping address for applicable items.\\n        </caption>\\n        <thead>\\n            <tr>\\n                <th class=\"col product\" scope=\"col\">Product</th>\\n                <th class=\"col address\" id=\"address-column-header\" scope=\"col\">\\n                    Send To\\n                </th>\\n                <th class=\"col actions\" scope=\"col\"></th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr>\\n                <td class=\"col product\" data-th=\"Product\">\\n                    name 1\\n                </td>\\n                <td class=\"col address\" data-th=\"Send To\">\\n                    A shipping selection is not applicable.\\n                </td>\\n                <td class=\"col actions\" data-th=\"Actions\">\\n                    <a href=\"\"\\n                       title=\"Remove Item\"\\n                       class=\"action delete\">\\n                        Remove\\n                    </a>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td class=\"col product\" data-th=\"Product\">\\n                    name 2\\n                </td>\\n                <td class=\"col address\" data-th=\"Send To\">\\n                    A shipping selection is not applicable.\\n                </td>\\n                <td class=\"col actions\" data-th=\"Actions\">\\n                    <a href=\"\"\\n                       title=\"Remove Item\"\\n                       class=\"action delete\">\\n                        Remove\\n                    </a>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td class=\"col product\" data-th=\"Product\">\\n                    name 3\\n                </td>\\n                <td class=\"col address\" data-th=\"Send To\">\\n                    A shipping selection is not applicable.\\n                </td>\\n                <td class=\"col actions\" data-th=\"Actions\">\\n                    <a href=\"\"\\n                       title=\"Remove Item\"\\n                       class=\"action delete\">\\n                        Remove\\n                    </a>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n'},320:function(module,exports){module.exports='<h1>Header Level 1</h1>\\n<p><strong>Pellentesque habitant morbi tristique</strong> senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. <em>Aenean ultricies mi vitae est.</em> Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, <code>commodo vitae</code>, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. <a href=\"#test\">Donec non enim</a> in turpis pulvinar facilisis. Ut felis.</p>\\n<h2>Header Level 2</h2>\\n<ol>\\n    <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</li>\\n    <li>Aliquam tincidunt mauris eu risus.</li>\\n</ol>\\n<p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat <kbd>Keyboard input</kbd> vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus</p>\\n<blockquote>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus magna. Cras in mi at felis aliquet congue. Ut a est eget ligula molestie gravida. Curabitur massa. Donec eleifend, libero at sagittis mollis, tellus est malesuada tellus, at luctus turpis elit sit amet quam. Vivamus pretium ornare est.</p>\\n    <a href=\"#test\"> Aenean fermentum, elit eget tincidunt condimentum</a>\\n</blockquote>\\n<h3>Header Level 3</h3>\\n<ul>\\n    <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</li>\\n    <li>Aliquam tincidunt mauris eu risus.</li>\\n</ul>\\n<p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.</p>\\n<pre><code> #header h1 a {\\n      display: block;\\n      width: 300px;\\n      height: 80px;\\n  } </code></pre>\\n<p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.</p>\\n<h4>Header Level 4</h4>\\n<ul>\\n    <li>Morbi in sem quis dui placerat ornare. Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed arcu. Cras consequat.</li>\\n    <li>Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus.\\n        <ul>\\n            <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</li>\\n            <li>Aliquam tincidunt mauris eu risus.</li>\\n            <li>Vestibulum auctor dapibus neque.</li>\\n        </ul>\\n    </li>\\n    <li>Phasellus ultrices nulla quis nibh. Quisque a lectus. Donec consectetuer ligula vulputate sem tristique cursus. Nam nulla quam, gravida non, commodo a, sodales sit amet, nisi.\\n        <ol>\\n            <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</li>\\n            <li>Aliquam tincidunt mauris eu risus.</li>\\n            <li>Vestibulum auctor dapibus neque.</li>\\n        </ol>\\n    </li>\\n    <li>Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</li>\\n</ul>\\n<h5>Header Level 5</h5>\\n<dl><dt>Definition list</dt><dd>Consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</dd><dt>Lorem ipsum dolor sit amet</dt><dd>Consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</dd></dl>\\n<h5 id=\"test\">Header Level 6</h5>\\n'},321:function(module,exports){module.exports='<section class=\"story-utils\">\\n    <h2>Helpers from _utils.less</h2>\\n\\n    <div class=\"item\">\\n        <h3>.am-opacity-clear</h3>\\n        <span>Clear the opacity and set z-index</span>\\n    </div>\\n    <div class=\"item\">\\n        <h3>.am-vertical-center</h3>\\n        <span>\u0421enters the element vertically</span>\\n    </div>\\n    <div class=\"item\">\\n        <h3>.am-no-display-desktop</h3>\\n        <span>To hide the element on desktop</span>\\n    </div>\\n    <div class=\"item\">\\n        <h3>.no-display</h3>\\n        <span>To hide the element</span>\\n    </div>\\n\\n    <div class=\"item\">\\n        <h3>.am-visually-hidden</h3>\\n        <span>Extend magento visually hidden</span>\\n    </div>\\n    <div class=\"item\">\\n        <h3>.am-visually-hidden-reset</h3>\\n        <span>Extend magento visually hidden reset</span>\\n    </div>\\n\\n    <div class=\"item\">\\n        <h3>.am-custom-scrollbar</h3>\\n        <span>Add a custom scroll to the element</span>\\n    </div>\\n\\n    <div class=\"item\">\\n        <h3>.am-text-uppercase</h3>\\n        <span>Add uppercase element styles</span>\\n    </div>\\n\\n    <div class=\"item\">\\n        <h3>.am-float-clear</h3>\\n        <span>Clear float</span>\\n    </div>\\n\\n    <div class=\"item\">\\n        <h3>.am-word-break</h3>\\n        <span>Add the word breaking</span>\\n    </div>\\n\\n    <div class=\"item\">\\n        <h3>.am-overflow-fade</h3>\\n        <span>Add the fade gradient effect to block with overflow content</span>\\n    </div>\\n\\n    <div class=\"item\">\\n        <h3>._am-message-icon-inner</h3>\\n        <span>extend the message with inner icon</span>\\n    </div>\\n\\n    <div class=\"item\">\\n        <h3>.am-product-options</h3>\\n        <span>Product options list styles</span>\\n    </div>\\n\\n    <div class=\"item\">\\n        <h3>.am-no-display-mobile</h3>\\n        <span>To hide the element on mobile</span>\\n    </div>\\n\\n    <div class=\"item\">\\n        <h3>.am-layout-negative-offset</h3>\\n        <span>Adding layout offset to the element: on mobile view the element will take 100% width of viewport despite of page container.</span>\\n    </div>\\n</section>\\n'},322:function(module,exports){module.exports='<section class=\"story-utils\">\\n    <h2>Mixins from _mixins.less</h2>\\n\\n    <h3>.amtheme-input-placeholder() <span>Placeholder mixin</span></h3>\\n    <form action=\"\">\\n        <div class=\"field\">\\n            <label class=\"label\" for=\"placeholder\">Placeholder example:</label>\\n            <input type=\"text\" id=\"placeholder\" placeholder=\"test placeholder\" />\\n        </div>\\n    </form>\\n    <hr>\\n\\n    <h3>.lib-button-xl() <span>Button extra large mixin</span></h3>\\n    <hr>\\n\\n    <h3>.amtheme-select-inline() <span>Inline select mixin</span></h3>\\n    <form action=\"\">\\n        <div class=\"field limiter\">\\n            <label class=\"label\" for=\"limiter\">\\n                <span>Show</span>\\n            </label>\\n            <select id=\"limiter\" data-role=\"limiter\" class=\"limiter-options\">\\n                <option value=\"12\" selected=\"selected\">12</option>\\n                <option value=\"24\">24</option>\\n                <option value=\"36\">36</option>\\n            </select>\\n        </div>\\n    </form>\\n    <hr>\\n\\n    <h3>.am-ellipsis() <span>Cut text with ellipsis mixin</span></h3>\\n    <div class=\"amtheme-select-block\" style=\"max-width: 300px;\">\\n        <div class=\"amtheme-title\">VeryLongPieceOfTextVeryLongPieceOfTextVeryLongPieceOfTextVeryLongPieceOfText</div>\\n    </div>\\n    <hr>\\n\\n    <h3>.am-grid-col-width() <span>Grid column width calc mixin</span></h3>\\n    <hr>\\n\\n    <h3>.am-cross-icon() <span>Css based cross icon</span></h3>\\n    <div class=\"amtheme-select-block -multiple -active\">\\n        <div class=\"amtheme-placeholder\">icon example -></div>\\n    </div>\\n    <hr>\\n\\n    <h3>.am-full-width() <span>Full width in container through pseudo elements</span></h3>\\n    <hr>\\n\\n    <h3>.am-status-indicator() <span>Status Indicators</span></h3>\\n    <div class=\"amtheme-status -processing\">processing</div>\\n    <div class=\"amtheme-status -closed\">closed</div>\\n    <div class=\"amtheme-status -new\">new</div>\\n    <div class=\"amtheme-status -holded\">holded</div>\\n    <hr>\\n\\n    <h3>.am-back-button() <span>Back Button mixin</span></h3>\\n    <a href=\"\" class=\"action back\">\\n        back\\n        <svg class=\"amtheme-icon\">\\n            <use xlink:href=\"#icon-arrow-left-min\"></use>\\n        </svg>\\n    </a>\\n</section>\\n'},323:function(module,exports){module.exports='<div class=\"amtheme-collapsible-block active\" data-mage-init=\\'{\\n        \"amCollapsible\":{\\n            \"isMobileOnly\": false,\\n            \"isActive\": \"true\"\\n        }}\\'>\\n    <div class=\"block-title\" data-amcollapsible=\"title\">\\n        Collapsible title\\n        <svg class=\"amtheme-icon\">\\n            <use xlink:href=\"#icon-arrow-bottom\"></use>\\n        </svg>\\n    </div>\\n    <div class=\"block-content amtheme-address-method\" data-amcollapsible=\"content\">\\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\\n            Distinctio exercitationem libero officia possimus reiciendis.\\n            Est exercitationem fuga laboriosam sunt temporibus!\\n        </p>\\n    </div>\\n</div>\\n\\n<div class=\"amtheme-collapsible-block _am-mobile\" data-mage-init=\\'{\\n        \"amCollapsible\":{\\n            \"isMobileOnly\": true,\\n            \"isActive\": \"false\"\\n        }}\\'>\\n    <div class=\"block-title\" data-amcollapsible=\"title\">\\n        Collapsible title only mobile\\n        <svg class=\"amtheme-icon\">\\n            <use xlink:href=\"#icon-arrow-bottom\"></use>\\n        </svg>\\n    </div>\\n    <div class=\"block-content amtheme-address-method\" data-amcollapsible=\"content\" style=\"display: none;\">\\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\\n            Distinctio exercitationem libero officia possimus reiciendis.\\n            Est exercitationem fuga laboriosam sunt temporibus!\\n        </p>\\n    </div>\\n</div>\\n'},324:function(module,exports,__webpack_require__){__webpack_require__(325),__webpack_require__(471),__webpack_require__(472),module.exports=__webpack_require__(679)},389:function(module,exports){},472:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__);var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_whitespace_storybook_addon_html_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(280),_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(281),_storybook_addon_viewport__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(282);__webpack_require__(676),__webpack_require__(677),__webpack_require__(678);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.addParameters)({viewport:{viewports:_storybook_addon_viewport__WEBPACK_IMPORTED_MODULE_3__.INITIAL_VIEWPORTS,defaultViewport:\"responsive\"},paddings:[{name:\"Small\",value:\"16px\"},{name:\"Medium\",value:\"32px\",default:!0},{name:\"Large\",value:\"64px\"}],a11y:{element:\"#root\",config:{rules:[{id:\"color-contrast\",enabled:!1}]}}}),Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.addDecorator)(_whitespace_storybook_addon_html_html__WEBPACK_IMPORTED_MODULE_1__.withHTML),Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.addDecorator)(_storybook_addon_a11y__WEBPACK_IMPORTED_MODULE_2__.withA11y)},676:function(module,exports,__webpack_require__){},677:function(module,exports,__webpack_require__){},678:function(module,exports,__webpack_require__){},679:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1);module._StorybookPreserveDecorators=!0,Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.configure)([__webpack_require__(680)],module)}.call(this,__webpack_require__(9)(module))},680:function(module,exports,__webpack_require__){var map={\"./breadcrumbs/breadcrumbs.stories.js\":681,\"./buttons/buttons.stories.js\":682,\"./colors/colors.stories.js\":683,\"./forms/form.stories.js\":685,\"./icons/icons.stories.js\":687,\"./messages/messages.stories.js\":690,\"./modals/modals.stories.js\":691,\"./newsletter/newsletter.stories.js\":692,\"./pagination/pagination.stories.js\":694,\"./price/price.stories.js\":695,\"./product /product.stories.js\":696,\"./product-item/product.stories.js\":697,\"./review/review.stories.js\":701,\"./search/search.stories.js\":702,\"./socials/socials.stories.js\":703,\"./swatches/swatches.stories.js\":704,\"./tables/tables.stories.js\":705,\"./typography/typography.stories.js\":706,\"./utils/utils.stories.js\":707,\"./widgets/widgets.stories.js\":709};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error(\"Cannot find module '\"+req+\"'\");throw e.code=\"MODULE_NOT_FOUND\",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=680},681:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_breadcrumbs_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(283),_breadcrumbs_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_breadcrumbs_html__WEBPACK_IMPORTED_MODULE_1__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Breadcrumbs\",module).addParameters({a11y:{element:\".breadcrumbs li:last-child\"}}).add(\"Breadcrumbs\",(function(){return _breadcrumbs_html__WEBPACK_IMPORTED_MODULE_1___default.a}))}.call(this,__webpack_require__(9)(module))},682:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_button_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(284),_button_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_button_html__WEBPACK_IMPORTED_MODULE_1__),_button_primary_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(285),_button_primary_html__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_button_primary_html__WEBPACK_IMPORTED_MODULE_2__),_button_outline_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(286),_button_outline_html__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_button_outline_html__WEBPACK_IMPORTED_MODULE_3__),_link_as_button_html__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(287),_link_as_button_html__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_link_as_button_html__WEBPACK_IMPORTED_MODULE_4__),_button_as_link_html__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(288),_button_as_link_html__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_button_as_link_html__WEBPACK_IMPORTED_MODULE_5__),_button_back_html__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(289),_button_back_html__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(_button_back_html__WEBPACK_IMPORTED_MODULE_6__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Buttons\",module).add(\"Button default\",(function(){return _button_html__WEBPACK_IMPORTED_MODULE_1___default.a})).add(\"Button primary\",(function(){return _button_primary_html__WEBPACK_IMPORTED_MODULE_2___default.a})).add(\"Button outline\",(function(){return _button_outline_html__WEBPACK_IMPORTED_MODULE_3___default.a})).add(\"Link as button\",(function(){return _link_as_button_html__WEBPACK_IMPORTED_MODULE_4___default.a})).add(\"Button as link\",(function(){return _button_as_link_html__WEBPACK_IMPORTED_MODULE_5___default.a})).add(\"Button Back\",(function(){return _button_back_html__WEBPACK_IMPORTED_MODULE_6___default.a}))}.call(this,__webpack_require__(9)(module))},683:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__(22),__webpack_require__(24),__webpack_require__(25),__webpack_require__(41),__webpack_require__(31),__webpack_require__(23),__webpack_require__(58),__webpack_require__(75),__webpack_require__(32),__webpack_require__(76),__webpack_require__(35),__webpack_require__(33),__webpack_require__(12),__webpack_require__(34),__webpack_require__(26),__webpack_require__(27);var _storybook_html__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(1),_colors_json__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(123),_colors_html__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(290),_colors_html__WEBPACK_IMPORTED_MODULE_18___default=__webpack_require__.n(_colors_html__WEBPACK_IMPORTED_MODULE_18__);__webpack_require__(684);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if(\"string\"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);\"Object\"===n&&o.constructor&&(n=o.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var createColorRow=function(colorRow,key){var row=colorRow.cloneNode(!0),variableNode=row.querySelector('[data-amtheme-js=\"variable\"]'),colorNode=row.querySelector('[data-amtheme-js=\"color\"]'),colorPaletteNode=row.querySelector('[data-amtheme-js=\"color-palette\"]');return variableNode.innerHTML=key,colorNode.innerHTML=_colors_json__WEBPACK_IMPORTED_MODULE_17__[key],colorPaletteNode.classList.add(key.slice(1)),colorPaletteNode.setAttribute(\"aria-label\",key.slice(1)),colorPaletteNode.style.background=_colors_json__WEBPACK_IMPORTED_MODULE_17__[key],row};Object(_storybook_html__WEBPACK_IMPORTED_MODULE_16__.storiesOf)(\"Colors scheme\",module).add(\"Colors variables\",(function(){var fragment=document.createElement(\"div\");fragment.classList.add(\"amtheme-palette\"),fragment.innerHTML=_colors_html__WEBPACK_IMPORTED_MODULE_18___default.a;var colorRow=fragment.querySelector('[data-amtheme-js=\"row\"]'),nodes=Object.keys(_colors_json__WEBPACK_IMPORTED_MODULE_17__).map(createColorRow.bind(null,colorRow));return fragment.innerHTML=\"\",fragment.append.apply(fragment,_toConsumableArray(nodes)),fragment}))}.call(this,__webpack_require__(9)(module))},684:function(module,exports,__webpack_require__){},685:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_form_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(291),_form_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_form_html__WEBPACK_IMPORTED_MODULE_1__),_form_select_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(292),_form_select_html__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_form_select_html__WEBPACK_IMPORTED_MODULE_2__),_form_radio_checkbox_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(293),_form_radio_checkbox_html__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_form_radio_checkbox_html__WEBPACK_IMPORTED_MODULE_3__),_form_fields_html__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(294),_form_fields_html__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_form_fields_html__WEBPACK_IMPORTED_MODULE_4__);__webpack_require__(686);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Form\",module).add(\"Form\",(function(){return _form_html__WEBPACK_IMPORTED_MODULE_1___default.a})).add(\"Select\",(function(){return _form_select_html__WEBPACK_IMPORTED_MODULE_2___default.a})).add(\"Radio and Checkbox\",(function(){return _form_radio_checkbox_html__WEBPACK_IMPORTED_MODULE_3___default.a})).add(\"Fields\",(function(){return _form_fields_html__WEBPACK_IMPORTED_MODULE_4___default.a}))}.call(this,__webpack_require__(9)(module))},686:function(module,exports,__webpack_require__){},687:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__(18),__webpack_require__(92),__webpack_require__(19);var _storybook_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(1),_icons_html__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(295),_icons_html__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_icons_html__WEBPACK_IMPORTED_MODULE_4__),_web_svg_sprite_svg_sprite_json__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(296),twoColorIcons=(__webpack_require__(688),__webpack_require__(689),[\"icon-cart\",\"icon-compare\",\"icon-mail\",\"icon-review-star\",\"icon-wishlist\"]);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_3__.storiesOf)(\"Icons\",module).add(\"Icons\",(function(){var iconsBox=document.createElement(\"div\");return iconsBox.innerHTML=_icons_html__WEBPACK_IMPORTED_MODULE_4___default.a,function(template){var id,svg,icon,iconsHtml;return(iconsHtml=document.createElement(\"div\")).classList.add(\"amtheme-icons-pack\"),_web_svg_sprite_svg_sprite_json__WEBPACK_IMPORTED_MODULE_5__.forEach((function(iconName){id=\"#\"+iconName,(icon=template.cloneNode(!0)).querySelector('[data-amtheme-js=\"id\"]').setAttribute(\"xlink:href\",id),icon.querySelector('[data-amtheme-js=\"label\"]').innerText=iconName,svg=icon.querySelector('[data-amtheme-js=\"svg\"]'),twoColorIcons.includes(iconName)?svg.classList.add(\"-hover-bg\"):svg.classList.add(\"-hover\"),iconsHtml.append(icon)})),iconsHtml}(iconsBox.querySelector('[data-amtheme-js=\"icon\"]'))}))}.call(this,__webpack_require__(9)(module))},688:function(module,exports){var l;(l=document.createElement(\"div\")).innerHTML='<svg xmlns=\"http://www.w3.org/2000/svg\"><symbol viewBox=\"0 0 30 30\" id=\"icon-account\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15 26.5c6.351 0 11.5-5.149 11.5-11.5S21.351 3.5 15 3.5 3.5 8.649 3.5 15 8.649 26.5 15 26.5zm0 1.5c7.18 0 13-5.82 13-13S22.18 2 15 2 2 7.82 2 15s5.82 13 13 13z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15 14.5a3.5 3.5 0 100-7 3.5 3.5 0 000 7zm0 1.5a5 5 0 100-10 5 5 0 000 10zM15 18.75a8.254 8.254 0 00-7.78 5.5l-1.415-.5a9.754 9.754 0 0118.39 0l-1.414.5A8.254 8.254 0 0015 18.75z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-arrow-bottom\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.722 12.633l-6.05 6.087a.947.947 0 01-1.344 0l-6.05-6.087a.96.96 0 010-1.353.946.946 0 011.345 0L15 16.69l5.377-5.41a.946.946 0 011.345 0 .96.96 0 010 1.353z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-arrow-left-min\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.959 23.642l-7.609-7.778a1.241 1.241 0 010-1.728l7.609-7.778a1.177 1.177 0 011.69 0 1.241 1.241 0 010 1.728L12.887 15l6.764 6.914a1.241 1.241 0 010 1.728 1.177 1.177 0 01-1.691 0z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-arrow-left\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.657 22.071l-6.364-6.364a1 1 0 010-1.414l6.364-6.364A1 1 0 019.07 9.343L4.414 14H28v2H4.414l4.657 4.657a1 1 0 11-1.414 1.414z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-arrow-right-min\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.041 23.642l7.609-7.778a1.241 1.241 0 000-1.728L12.04 6.358a1.177 1.177 0 00-1.69 0 1.241 1.241 0 000 1.728L17.113 15l-6.764 6.914a1.241 1.241 0 000 1.728 1.177 1.177 0 001.691 0z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-arrow-right\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.343 22.071l6.364-6.364a1 1 0 000-1.414l-6.364-6.364a1 1 0 10-1.414 1.414L25.586 14H2v2h23.586l-4.657 4.657a1 1 0 001.414 1.414z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-arrow-top\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.722 17.367l-6.05-6.087a.947.947 0 00-1.344 0l-6.05 6.087a.96.96 0 000 1.353.946.946 0 001.345 0l5.296-5.329h.162l5.296 5.329a.946.946 0 001.345 0 .96.96 0 000-1.353z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-calendar\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 4.857c0-.789.647-1.428 1.444-1.428h23.112c.797 0 1.444.64 1.444 1.428v20.714c0 .79-.647 1.429-1.444 1.429H3.444C2.647 27 2 26.36 2 25.571V4.857zm1.444 0v20.714h23.112V4.857H3.444z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.889 11.429c0-.474.388-.858.867-.858H9.8c.479 0 .867.384.867.858v4a.862.862 0 01-.867.857H5.756a.862.862 0 01-.867-.857v-4zM6.333 12v2.857h2.89V12h-2.89zM12.111 11.429c0-.474.388-.858.867-.858h4.044c.479 0 .867.384.867.858v4a.862.862 0 01-.867.857h-4.044a.862.862 0 01-.867-.857v-4zm1.445.571v2.857h2.888V12h-2.888zM19.333 11.429c0-.474.388-.858.867-.858h4.044c.48 0 .867.384.867.858v4a.862.862 0 01-.867.857H20.2a.862.862 0 01-.867-.857v-4zm1.445.571v2.857h2.889V12h-2.89zM4.889 18.571c0-.473.388-.857.867-.857H9.8c.479 0 .867.384.867.857v4a.862.862 0 01-.867.858H5.756a.862.862 0 01-.867-.858v-4zm1.444.572V22h2.89v-2.857h-2.89zM12.111 18.571c0-.473.388-.857.867-.857h4.044c.479 0 .867.384.867.857v4a.862.862 0 01-.867.858h-4.044a.862.862 0 01-.867-.858v-4zm1.445.572V22h2.888v-2.857h-2.888zM19.333 18.571c0-.473.388-.857.867-.857h4.044c.48 0 .867.384.867.857v4a.862.862 0 01-.867.858H20.2a.862.862 0 01-.867-.858v-4zm1.445.572V22h2.889v-2.857h-2.89zM26.556 9.143H3.444V7.714h23.112v1.429zM7.778 2v4.286H6.333V2h1.445zM9.944 2v4.286H8.5V2h1.444zM23.667 2v4.286h-1.445V2h1.445zM21.5 2v4.286h-1.444V2H21.5z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-cart\"><path d=\"M2 28h26L25.5 2h-21L2 28z\" fill=\"currentColor\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.027 11.4a1.8 1.8 0 10-1.346.124c.17 1.165.613 2.23 1.318 3.072.938 1.12 2.31 1.804 4.001 1.804 1.691 0 3.063-.684 4.001-1.804.705-.842 1.147-1.907 1.318-3.072a1.8 1.8 0 10-1.346-.125c-.147.928-.499 1.735-1.012 2.347-.68.811-1.67 1.32-2.961 1.32s-2.281-.509-2.96-1.32c-.514-.612-.866-1.419-1.013-2.347zm-.827-1a.6.6 0 100-1.2.6.6 0 000 1.2zm9.6 0a.6.6 0 100-1.2.6.6 0 000 1.2z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.346 2h21.308L28 28H2L4.346 2zm1.51 1.625l-2.053 22.75h22.394l-2.053-22.75H5.856z\"/></symbol><symbol viewBox=\"0 0 15 15\" id=\"icon-check-big\"><path d=\"M12.17 3a.782.782 0 00-.55.257C9.663 5.32 8.181 7.033 6.34 9.005l-2.023-1.8a.762.762 0 00-.882-.108.807.807 0 00-.244.203.854.854 0 00-.188.613c.008.11.037.217.085.315a.836.836 0 00.193.258l2.597 2.312c.153.138.35.21.551.201a.781.781 0 00.535-.247c2.147-2.264 3.678-4.077 5.792-6.306a.854.854 0 00.228-.438.881.881 0 00-.048-.498.83.83 0 00-.308-.38.77.77 0 00-.459-.13z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-check\"><path d=\"M23.339 7.001c-.416.014-.81.198-1.099.513-3.914 4.128-6.878 7.553-10.56 11.495l-4.045-3.6a1.58 1.58 0 00-.545-.32 1.524 1.524 0 00-1.22.104c-.186.1-.353.239-.489.407-.136.168-.24.363-.304.573a1.765 1.765 0 00.098 1.284c.096.196.228.371.387.514l5.193 4.625c.307.276.7.42 1.104.402a1.562 1.562 0 001.069-.494c4.293-4.529 7.356-8.153 11.584-12.612.233-.237.392-.543.456-.877.064-.334.03-.68-.096-.994a1.663 1.663 0 00-.616-.76 1.538 1.538 0 00-.917-.26z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-close\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4 24.547L24.547 4 26 5.453 5.453 26 4 24.547z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26 24.547L5.453 4 4 5.453 24.547 26 26 24.547z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-compare\"><path d=\"M3.5 9v17.5h17v-6h6l.5-17H9V9H3.5z\" fill=\"currentColor\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.5 10.098c0-.948.768-1.716 1.716-1.716h15.686c.947 0 1.716.768 1.716 1.716v15.686c0 .948-.768 1.716-1.716 1.716H4.216A1.716 1.716 0 012.5 25.784V10.098zm1.716-.245a.245.245 0 00-.245.245v15.686c0 .136.11.245.245.245h15.686c.135 0 .245-.11.245-.245V10.098a.245.245 0 00-.245-.245H4.216z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.382 4.216c0-.948.768-1.716 1.716-1.716h15.686c.948 0 1.716.768 1.716 1.716v15.686c0 .947-.768 1.716-1.716 1.716h-4.902v-1.47h4.902c.136 0 .245-.11.245-.246V4.216a.245.245 0 00-.245-.245H10.098a.245.245 0 00-.245.245v4.902h-1.47V4.216z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-currency\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15 26.4c6.296 0 11.4-5.104 11.4-11.4S21.296 3.6 15 3.6 3.6 8.704 3.6 15 8.704 26.4 15 26.4zm0 1.6c7.18 0 13-5.82 13-13S22.18 2 15 2 2 7.82 2 15s5.82 13 13 13z\"/><path d=\"M16.657 17.97c0-.46-.124-.825-.372-1.094-.244-.275-.66-.527-1.248-.757a15.12 15.12 0 01-1.524-.682 5.13 5.13 0 01-1.103-.782 3.275 3.275 0 01-.713-1.043c-.167-.398-.251-.872-.251-1.422 0-.947.292-1.724.875-2.33.584-.606 1.36-.959 2.326-1.06V7h1.297v1.825c.957.14 1.705.556 2.245 1.245.54.685.811 1.573.811 2.667h-2.343c0-.673-.134-1.175-.405-1.506-.264-.336-.621-.504-1.07-.504-.443 0-.786.131-1.029.395-.243.258-.365.617-.365 1.077 0 .426.12.768.357 1.026.238.258.678.522 1.321.79.649.27 1.18.525 1.597.766.416.236.767.505 1.053.808.287.297.506.64.657 1.026.151.382.227.827.227 1.338 0 .953-.286 1.727-.86 2.321-.572.595-1.36.945-2.366 1.052V23h-1.289v-1.666c-1.107-.123-1.967-.53-2.577-1.22-.605-.695-.908-1.617-.908-2.767h2.342c0 .667.152 1.18.454 1.54.308.353.749.53 1.322.53.475 0 .85-.13 1.126-.388.276-.263.413-.616.413-1.06z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-facebook\"><path d=\"M29.998 14.999c0-8.284-6.716-14.999-15-14.999C6.716 0 0 6.715 0 14.999c0 7.486 5.485 13.691 12.655 14.816v-10.48H8.847v-4.336h3.808v-3.305c0-3.759 2.24-5.835 5.665-5.835 1.642 0 3.358.293 3.358.293v3.691h-1.891c-1.863 0-2.445 1.156-2.445 2.342V15h4.16l-.665 4.335h-3.495v10.482c7.17-1.126 12.656-7.33 12.656-14.817z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-filter\"><path d=\"M7 26H5V11h2v15zM16 19h-2V4h2v15zM25 10h-2V4h2v6zM25 26h-2V16h2v10z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 10.2a2.2 2.2 0 100-4.4 2.2 2.2 0 000 4.4zM6 12a4 4 0 100-8 4 4 0 000 8zM15 24.2a2.2 2.2 0 100-4.4 2.2 2.2 0 000 4.4zm0 1.8a4 4 0 100-8 4 4 0 000 8zM24 15.2a2.2 2.2 0 100-4.4 2.2 2.2 0 000 4.4zm0 1.8a4 4 0 100-8 4 4 0 000 8z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-google\"><path d=\"M15.3 12.856V18h8.508c-.344 2.206-2.57 6.468-8.508 6.468-5.119 0-9.299-4.237-9.299-9.468s4.181-9.468 9.299-9.468c2.912 0 4.864 1.237 5.981 2.312L25.35 3.92C22.736 1.483 19.349 0 15.3 0 7.006 0 .3 6.706.3 15s6.706 15 15 15c8.657 0 14.4-6.086 14.4-14.658 0-.985-.106-1.737-.236-2.486H15.3z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-language\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.013 1.85c-2.685 0-4.91.773-7.135 2.215a13.246 13.246 0 00-4.995 5.901 12.782 12.782 0 00-.772 7.6A13.032 13.032 0 005.823 24.3c1.89 1.833 3.909 3.089 6.545 3.598 2.63.506 5.355.246 7.832-.748 2.487-.999 4.18-2.69 5.664-4.842A12.87 12.87 0 0028.15 15c-.002-3.489-1.433-6.832-3.976-9.297-2.538-2.462-5.562-3.85-9.161-3.853zm.608 5.886V3.313c1.741.311 3.332 1.945 4.352 4.415l-4.351.008zm-1.217 0h-4.348c1.051-2.458 2.58-4.104 4.348-4.415v4.415zm4.098-4.209c2.436.719 4.3 2.181 5.861 4.192h-3.098a10.477 10.477 0 00-2.763-4.192zM8.77 7.737H5.624c1.571-2.016 3.463-3.48 5.911-4.194A10.478 10.478 0 008.77 7.736zm-5.669 6.65a11.599 11.599 0 011.707-5.48h3.581c-.539 1.782-.829 3.625-.861 5.48H3.1zm19.397 0a20.108 20.108 0 00-.862-5.48h3.53a11.603 11.603 0 011.732 5.48h-4.4zm-13.754 0a19.14 19.14 0 01.876-5.479l4.784.017v5.463h-5.66zm6.877 0V8.927h4.785c.555 1.771.85 3.61.876 5.462h-5.66zm-10.624 6.99a11.617 11.617 0 01-1.896-5.8H7.53c.051 1.972.4 3.926 1.037 5.8H4.997zm4.82 0a18.646 18.646 0 01-1.071-5.8h5.658v5.8H9.817zm5.814 0v-5.8h5.649a18.645 18.645 0 01-1.08 5.8h-4.57zm5.838 0c.633-1.874.98-3.828 1.028-5.8h4.393a11.617 11.617 0 01-1.896 5.8h-3.525zm-7.056 5.017c-1.633-.283-3.05-1.67-4.089-3.828h4.09v3.828zm1.218 0v-3.828h4.089c-1.041 2.149-2.487 3.542-4.09 3.828zm-3.588.187c-2.506-.616-4.493-2.013-6.158-3.997h3.128a9.305 9.305 0 003.03 3.997zm5.898.024a9.308 9.308 0 003.063-4.021h3.102c-1.668 2-3.645 3.405-6.165 4.021z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-link\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.8 4.8h11.7V3.2h-12a1.3 1.3 0 00-1.3 1.3v22a1.3 1.3 0 001.3 1.3h23a1.3 1.3 0 001.3-1.3V15h-1.6v11.2H3.8V4.8z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.972 9.855L28 1.883A.878.878 0 0027.117 1l-7.972.028a.893.893 0 00-.889.889.878.878 0 00.883.883l5.834-.02L14.39 13.36l1.248 1.248L26.221 4.027l-.02 5.834a.878.878 0 00.882.883c.49-.002.887-.4.889-.89z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-mail\"><path fill=\"currentColor\" d=\"M3 6h24v18H3z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.25 6.75a1.5 1.5 0 011.5-1.5h22.5a1.5 1.5 0 011.5 1.5v16.5a1.5 1.5 0 01-1.5 1.5H3.75a1.5 1.5 0 01-1.5-1.5V6.75zm24 0H3.75v16.5h22.5V6.75z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15 14.813L3.45 6.15l-.9 1.2 11.73 8.798a1.2 1.2 0 001.44 0L27.45 7.35l-.9-1.2L15 14.812z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-menu\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26 10.1H4V7.9h22v2.2zM26 16.1H4v-2.2h22v2.2zM26 22.1H4v-2.2h22v2.2z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-minus\"><path d=\"M7 13.5v2h15v-2H7z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-plus\"><path d=\"M15.571 7H13.43v6.429H7v2.142h6.429V22h2.142v-6.429H22V13.43h-6.429V7z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-review-star\"><path d=\"M12.583 3.268a.458.458 0 01.834 0l3.357 7.542c.066.15.21.252.375.267l8.436.757c.4.036.56.528.256.787L19.49 18.02a.445.445 0 00-.147.44l1.862 7.99c.089.383-.329.686-.673.488l-7.302-4.195a.46.46 0 00-.458 0l-7.302 4.195c-.344.198-.762-.105-.673-.488l1.862-7.99a.445.445 0 00-.147-.44L.16 12.62a.447.447 0 01.255-.786l8.437-.757a.455.455 0 00.375-.267l3.357-7.542z\" fill=\"currentColor\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.14 11.004a.09.09 0 01-.075.054l-8.65.776a.447.447 0 00-.256.787l6.519 5.54a.089.089 0 01.029.088l-1.91 8.2c-.09.383.328.686.672.489l7.485-4.3a.092.092 0 01.092 0l7.485 4.3c.344.198.762-.105.673-.488l-1.91-8.2a.089.089 0 01.029-.089l6.518-5.54a.447.447 0 00-.256-.787l-8.65-.776a.091.091 0 01-.075-.054l-3.443-7.736a.458.458 0 00-.834 0L9.14 11.004zM13 6.352l-2.36 5.301c-.253.57-.8.957-1.427 1.013l-5.871.527 4.405 3.745c.486.413.7 1.056.557 1.673l-1.299 5.575 5.124-2.944a1.751 1.751 0 011.742 0l5.124 2.944-1.299-5.575a1.69 1.69 0 01.557-1.673l4.405-3.745-5.871-.527a1.728 1.728 0 01-1.427-1.013L13 6.352z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-search\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.414 21.167a11.284 11.284 0 01-7.084 2.486C6.072 23.653 1 18.583 1 12.327S6.072 1 12.33 1c6.257 0 11.33 5.071 11.33 11.327 0 2.684-.934 5.15-2.495 7.09L29 27.25 27.25 29l-7.836-7.833zm2.185-8.84c0 5.118-4.15 9.267-9.27 9.267-5.119 0-9.27-4.15-9.27-9.267.001-5.118 4.151-9.268 9.27-9.268 5.12 0 9.27 4.15 9.27 9.268z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-settings\"><path d=\"M24.175 16.175c.052-.375.078-.763.078-1.175 0-.4-.026-.8-.09-1.175l2.608-1.975a.602.602 0 00.154-.762l-2.467-4.15c-.154-.276-.475-.363-.758-.276l-3.071 1.2a9.141 9.141 0 00-2.082-1.175l-.463-3.175A.617.617 0 0017.467 3h-4.934a.603.603 0 00-.604.513l-.463 3.175c-.758.3-1.452.712-2.082 1.175l-3.071-1.2a.621.621 0 00-.758.274L3.1 11.088c-.154.263-.103.588.154.763l2.61 1.975A7.143 7.143 0 005.746 15c0 .387.026.8.09 1.175L3.23 18.15a.602.602 0 00-.154.763l2.467 4.15c.154.274.475.362.758.274l3.071-1.2a9.142 9.142 0 002.082 1.175l.463 3.175c.064.3.308.513.617.513h4.934a.594.594 0 00.604-.512l.463-3.175c.758-.3 1.452-.7 2.082-1.175l3.071 1.2c.283.1.604 0 .758-.276l2.468-4.15c.154-.274.09-.587-.155-.762l-2.583-1.975zM15 19.5c-2.544 0-4.626-2.025-4.626-4.5s2.082-4.5 4.626-4.5c2.544 0 4.626 2.025 4.626 4.5S17.544 19.5 15 19.5z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-share\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6 4.75c-.69 0-1.25.56-1.25 1.25v18c0 .69.56 1.25 1.25 1.25h18c.69 0 1.25-.56 1.25-1.25v-8h1.5v8A2.75 2.75 0 0124 26.75H6A2.75 2.75 0 013.25 24V6A2.75 2.75 0 016 3.25h8v1.5H6z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.757 2.697L26.53 7.47a.75.75 0 010 1.06l-4.773 4.773a.75.75 0 01-1.06-1.06l3.492-3.493H17c-1.119 0-1.908.278-2.475.655-.57.381-.961.894-1.23 1.43a5.398 5.398 0 00-.477 1.507 5.361 5.361 0 00-.068.656V13L12 13h.75v8h-1.5v-8H12h-.75V12.974c0-.014 0-.032.002-.055a6.909 6.909 0 01.087-.824c.086-.517.26-1.22.615-1.93.357-.714.904-1.451 1.74-2.008.839-.56 1.925-.907 3.306-.907h7.19l-3.493-3.493a.75.75 0 111.06-1.06zM12.75 13v.001-.001z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-sort-view\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.239 11.389l5.185-5.152a.819.819 0 011.152 0l5.185 5.152a.806.806 0 010 1.145.818.818 0 01-1.152 0l-3.794-3.77V23h-1.63V8.764l-3.794 3.77a.818.818 0 01-1.152 0 .806.806 0 010-1.145zM26.761 18.611l-5.185 5.152a.819.819 0 01-1.152 0l-5.185-5.152a.806.806 0 010-1.145.818.818 0 011.152 0l3.794 3.77V7h1.63v14.236l3.794-3.77a.818.818 0 011.152 0 .806.806 0 010 1.145z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-trash\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27 4.5H3V6h1.188l1.727 20.683c.09 1.015.901 1.817 1.814 1.817h14.302c.913 0 1.725-.802 1.815-1.817L25.802 6H27V4.5zm-4.536 21.74c-.036.405-.37.76-.714.76H8.25c-.345 0-.678-.355-.712-.737L5.817 6H24.41l-1.947 20.24z\"/><path d=\"M10.5 9H12v15h-1.5V9zM18 9h1.5v15H18V9zM14.25 9h1.5v15h-1.5V9z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.5 2.25c0 .414-.27.75-.601.75H11.1c-.332 0-.601-.336-.601-.75s.27-.75.601-.75H18.9c.332 0 .601.336.601.75z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-twitter\"><path d=\"M9.434 27.377c11.321 0 17.513-9.38 17.513-17.513 0-.267 0-.532-.018-.796A12.524 12.524 0 0030 5.882a12.285 12.285 0 01-3.535.969 6.177 6.177 0 002.706-3.405 12.334 12.334 0 01-3.909 1.494 6.16 6.16 0 00-10.489 5.614A17.475 17.475 0 012.088 4.123a6.16 6.16 0 001.906 8.216 6.11 6.11 0 01-2.794-.77v.078a6.157 6.157 0 004.938 6.034 6.146 6.146 0 01-2.78.105 6.162 6.162 0 005.751 4.275A12.35 12.35 0 010 24.61a17.426 17.426 0 009.434 2.76\"/></symbol><symbol viewBox=\"0 0 14 14\" id=\"icon-update\"><path d=\"M11.708 2.29A6.631 6.631 0 007 .332 6.658 6.658 0 00.342 6.999 6.658 6.658 0 007 13.665c3.108 0 5.7-2.125 6.442-5h-1.734A4.992 4.992 0 017 12c-2.758 0-5-2.242-5-5 0-2.759 2.242-5 5-5a4.93 4.93 0 013.517 1.483L7.833 6.165h5.834V.332L11.708 2.29z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-view-block\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.7 5.3H5.3v7.4h7.4V5.3zM4 4v10h10V4H4zM24.7 5.3h-7.4v7.4h7.4V5.3zM16 4v10h10V4H16zM12.7 17.3H5.3v7.4h7.4v-7.4zM4 16v10h10V16H4zM24.7 17.3h-7.4v7.4h7.4v-7.4zM16 16v10h10V16H16z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-view-list\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 4h6.474v6.215H2V4zm1.336 1.283v3.65h3.802v-3.65H3.336zM2 11.892h6.474v6.216H2v-6.216zm1.336 1.283v3.65h3.802v-3.65H3.336zM2 19.785h6.474V26H2v-6.215zm1.336 1.282v3.65h3.802v-3.65H3.336zM10.221 4H28v6.215H10.221V4zm1.336 1.283v3.65h15.107v-3.65H11.557zM10.221 11.892H28v6.216H10.221v-6.216zm1.336 1.283v3.65h15.107v-3.65H11.557zM10.221 19.785H28V26H10.221v-6.215zm1.336 1.282v3.65h15.107v-3.65H11.557z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-wishlist\"><path d=\"M15 27.6l-2.001-1.813C5.892 19.374 1.2 15.144 1.2 9.953 1.2 5.723 4.54 2.4 8.79 2.4c2.401 0 4.706 1.112 6.21 2.87 1.504-1.758 3.809-2.87 6.21-2.87 4.25 0 7.59 3.323 7.59 7.553 0 5.191-4.692 9.42-11.799 15.848L15 27.6z\" fill=\"currentColor\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.999 25.787L15 27.6l2.001-1.799.054-.05C24.133 19.353 28.8 15.132 28.8 9.954c0-4.23-3.34-7.553-7.59-7.553-1.882 0-3.705.684-5.13 1.826A8.046 8.046 0 0015 5.27a8.046 8.046 0 00-1.08-1.044C12.495 3.084 10.672 2.4 8.79 2.4 4.54 2.4 1.2 5.723 1.2 9.953c0 5.187 4.684 9.414 11.782 15.819l.017.015zm2.005-.207l-.998-.904-.002-.002c-3.584-3.234-6.436-5.812-8.41-8.215C3.635 14.078 2.7 12.054 2.7 9.953 2.7 6.56 5.361 3.9 8.79 3.9c1.95 0 3.842.91 5.07 2.345L15 7.577l1.14-1.332C17.368 4.811 19.26 3.9 21.21 3.9c3.429 0 6.09 2.659 6.09 6.053 0 2.1-.936 4.125-2.893 6.509-1.975 2.404-4.827 4.985-8.41 8.225l-.002.001-.991.892z\"/></symbol><symbol viewBox=\"0 0 30 30\" id=\"icon-youtube\"><path d=\"M12 19v-9l7.794 4.5L12 19zM29.373 7.28a3.757 3.757 0 00-2.652-2.653C24.38 4 15 4 15 4s-9.381 0-11.72.627A3.757 3.757 0 00.626 7.279C0 9.62 0 14.5 0 14.5s0 4.881.627 7.22a3.757 3.757 0 002.652 2.653C5.62 25 15 25 15 25s9.382 0 11.722-.627a3.757 3.757 0 002.652-2.652C30 19.38 30 14.5 30 14.5s0-4.881-.627-7.22z\"/></symbol></svg>',l.className=\"svgi-sprite\",l.style.display=\"none\",document.body.insertBefore(l,document.body.firstChild)},689:function(module,exports,__webpack_require__){},690:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_messages_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(297),_messages_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_messages_html__WEBPACK_IMPORTED_MODULE_1__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Messages\",module).add(\"Messages\",(function(){return _messages_html__WEBPACK_IMPORTED_MODULE_1___default.a}))}.call(this,__webpack_require__(9)(module))},691:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_modal_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(298),_modal_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_modal_html__WEBPACK_IMPORTED_MODULE_1__),_slide_modal_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(299),_slide_modal_html__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_slide_modal_html__WEBPACK_IMPORTED_MODULE_2__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Modals\",module).add(\"Modal\",(function(){return _modal_html__WEBPACK_IMPORTED_MODULE_1___default.a})).add(\"Slide Modal\",(function(){return _slide_modal_html__WEBPACK_IMPORTED_MODULE_2___default.a}))}.call(this,__webpack_require__(9)(module))},692:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_newsletter_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(300),_newsletter_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_newsletter_html__WEBPACK_IMPORTED_MODULE_1__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Newsletter\",module).add(\"Newsletter\",(function(){return _newsletter_html__WEBPACK_IMPORTED_MODULE_1___default.a}))}.call(this,__webpack_require__(9)(module))},693:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+\"static/media/image-1.8afbf29a.png\"},694:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_pagination_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(301),_pagination_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_pagination_html__WEBPACK_IMPORTED_MODULE_1__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Pagination\",module).add(\"Pagination default\",(function(){return _pagination_html__WEBPACK_IMPORTED_MODULE_1___default.a}))}.call(this,__webpack_require__(9)(module))},695:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_price_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(302),_price_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_price_html__WEBPACK_IMPORTED_MODULE_1__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Price\",module).add(\"All prices\",(function(){return _price_html__WEBPACK_IMPORTED_MODULE_1___default.a}))}.call(this,__webpack_require__(9)(module))},696:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_product_tabs_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(303),_product_tabs_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_product_tabs_html__WEBPACK_IMPORTED_MODULE_1__),_social_links_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(304),_social_links_html__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_social_links_html__WEBPACK_IMPORTED_MODULE_2__),_qty_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(305),_qty_html__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_qty_html__WEBPACK_IMPORTED_MODULE_3__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Product page\",module).add(\"Product Tabs\",(function(){return _product_tabs_html__WEBPACK_IMPORTED_MODULE_1___default.a})).add(\"Social links\",(function(){return _social_links_html__WEBPACK_IMPORTED_MODULE_2___default.a})).add(\"Qty\",(function(){return _qty_html__WEBPACK_IMPORTED_MODULE_3___default.a}))}.call(this,__webpack_require__(9)(module))},697:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_product_primary_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(306),_product_primary_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_product_primary_html__WEBPACK_IMPORTED_MODULE_1__),_product_secondary_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(307),_product_secondary_html__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_product_secondary_html__WEBPACK_IMPORTED_MODULE_2__);__webpack_require__(700);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Product item\",module).add(\"Primary item\",(function(){return _product_primary_html__WEBPACK_IMPORTED_MODULE_1___default.a})).add(\"Secondary item\",(function(){return _product_secondary_html__WEBPACK_IMPORTED_MODULE_2___default.a}))}.call(this,__webpack_require__(9)(module))},698:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+\"static/media/secondary-image-1.4025ca39.jpg\"},699:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+\"static/media/secondary-image-2.be952c6c.jpg\"},700:function(module,exports,__webpack_require__){},701:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_review_summary_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(308),_review_summary_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_review_summary_html__WEBPACK_IMPORTED_MODULE_1__),_review_list_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(309),_review_list_html__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_review_list_html__WEBPACK_IMPORTED_MODULE_2__),_review_form_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(310),_review_form_html__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_review_form_html__WEBPACK_IMPORTED_MODULE_3__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Review\",module).add(\"Review Summary\",(function(){return _review_summary_html__WEBPACK_IMPORTED_MODULE_1___default.a})).add(\"Review List\",(function(){return _review_list_html__WEBPACK_IMPORTED_MODULE_2___default.a})).add(\"Review Form\",(function(){return _review_form_html__WEBPACK_IMPORTED_MODULE_3___default.a}))}.call(this,__webpack_require__(9)(module))},702:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_search_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(311),_search_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_search_html__WEBPACK_IMPORTED_MODULE_1__),_search_autocomplete_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(312),_search_autocomplete_html__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_search_autocomplete_html__WEBPACK_IMPORTED_MODULE_2__),_search_header_html__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(313),_search_header_html__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_search_header_html__WEBPACK_IMPORTED_MODULE_3__),_search_header_autocomplete_html__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(314),_search_header_autocomplete_html__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_search_header_autocomplete_html__WEBPACK_IMPORTED_MODULE_4__),_search_terms_html__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(315),_search_terms_html__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_search_terms_html__WEBPACK_IMPORTED_MODULE_5__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Search\",module).add(\"Search default\",(function(){return _search_html__WEBPACK_IMPORTED_MODULE_1___default.a})).add(\"Search autocomplete\",(function(){return _search_autocomplete_html__WEBPACK_IMPORTED_MODULE_2___default.a})).add(\"Search Header\",(function(){return _search_header_html__WEBPACK_IMPORTED_MODULE_3___default.a})).add(\"Search Header autocomplete\",(function(){return _search_header_autocomplete_html__WEBPACK_IMPORTED_MODULE_4___default.a})).add(\"Search Terms\",(function(){return _search_terms_html__WEBPACK_IMPORTED_MODULE_5___default.a}))}.call(this,__webpack_require__(9)(module))},703:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_socials_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(316),_socials_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_socials_html__WEBPACK_IMPORTED_MODULE_1__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Social\",module).add(\"Social icons\",(function(){return _socials_html__WEBPACK_IMPORTED_MODULE_1___default.a}))}.call(this,__webpack_require__(9)(module))},704:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_text_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(317),_text_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_text_html__WEBPACK_IMPORTED_MODULE_1__),_color_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(318),_color_html__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_color_html__WEBPACK_IMPORTED_MODULE_2__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Swatches\",module).add(\"Swatch text\",(function(){return _text_html__WEBPACK_IMPORTED_MODULE_1___default.a})).add(\"Swatch color\",(function(){return _color_html__WEBPACK_IMPORTED_MODULE_2___default.a}))}.call(this,__webpack_require__(9)(module))},705:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_table_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(319),_table_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_table_html__WEBPACK_IMPORTED_MODULE_1__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Tables\",module).add(\"Table\",(function(){return _table_html__WEBPACK_IMPORTED_MODULE_1___default.a}))}.call(this,__webpack_require__(9)(module))},706:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_typography_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(320),_typography_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_typography_html__WEBPACK_IMPORTED_MODULE_1__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Typography\",module).add(\"Headings\",(function(){return _typography_html__WEBPACK_IMPORTED_MODULE_1___default.a}))}.call(this,__webpack_require__(9)(module))},707:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_helpers_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(321),_helpers_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_helpers_html__WEBPACK_IMPORTED_MODULE_1__),_mixins_html__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(322),_mixins_html__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_mixins_html__WEBPACK_IMPORTED_MODULE_2__);__webpack_require__(708);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Utils\",module).add(\"Helpers\",(function(){return _helpers_html__WEBPACK_IMPORTED_MODULE_1___default.a})).add(\"Mixins\",(function(){return _mixins_html__WEBPACK_IMPORTED_MODULE_2___default.a}))}.call(this,__webpack_require__(9)(module))},708:function(module,exports,__webpack_require__){},709:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_collapsible_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(323),_collapsible_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_collapsible_html__WEBPACK_IMPORTED_MODULE_1__);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.storiesOf)(\"Widgets\",module).add(\"Collapsible\",(function(){return _collapsible_html__WEBPACK_IMPORTED_MODULE_1___default.a}))}.call(this,__webpack_require__(9)(module))}},[[324,1,2]]]);\n//# sourceMappingURL=main.e9a46862aa8612ad440e.bundle.js.map"}
}});
